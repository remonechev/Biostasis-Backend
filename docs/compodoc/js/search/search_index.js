var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddAccountSettingsColumnsToProfileTable1626771292134.html",[0,0.26,1,4.165]],["body/classes/AddAccountSettingsColumnsToProfileTable1626771292134.html",[0,0.278,1,5.977,2,0.721,3,0.054,4,0.054,5,0.046,6,8.449,7,5.006,8,2.017,9,2.657,10,0.121,11,0.503,12,1.477,13,5.183,14,2.604,15,0.779,16,2.764,17,1.425,18,2.354,19,2.308,20,0.262,21,0.007,22,1.362,23,1.315,24,1.452,25,3.685,26,0.552,27,5.977,28,4.138,29,3.085,30,3.713,31,2.958,32,1.826,33,5.977,34,0.314,35,5.006,36,0.511,37,2.671,38,5.006,39,2.354,40,3.207,41,5.006,42,0.763,43,0.543,44,0.779,45,1.763,46,2.354,47,5.006,48,0.098,49,1.07,50,0.054,51,1.204,52,3.423,53,4.593,54,3.423,55,0.005,56,0.005]],["title/classes/AddAlertTimeToPositiveInfoTable1650544527662.html",[0,0.26,57,4.165]],["body/classes/AddAlertTimeToPositiveInfoTable1650544527662.html",[0,0.298,2,0.772,3,0.057,4,0.057,5,0.05,8,2.112,9,2.75,10,0.13,11,0.527,12,1.507,14,2.696,15,0.816,16,2.819,17,1.453,18,2.465,19,2.416,20,0.251,21,0.007,22,1.427,23,1.377,24,1.261,25,3.422,26,0.528,31,2.568,32,1.585,34,0.323,36,0.548,39,2.465,40,3.251,42,0.799,43,0.569,44,0.816,45,1.812,46,2.465,48,0.105,49,1.147,50,0.057,51,1.261,55,0.005,56,0.005,57,6.259,58,8.645,59,5.366,60,3.121,61,5.748,62,2.996,63,5.366,64,4.403,65,5.366,66,5.366,67,5.366,68,2.741,69,3.593,70,2.741]],["title/classes/AddAutomatedEmergencySettings1628507521688.html",[0,0.26,71,4.165]],["body/classes/AddAutomatedEmergencySettings1628507521688.html",[0,0.278,2,0.721,3,0.054,4,0.054,5,0.046,8,2.017,9,2.657,10,0.121,11,0.503,12,1.477,13,5.183,14,2.604,15,0.779,16,2.764,17,1.425,18,2.354,19,2.308,20,0.262,21,0.007,22,1.362,23,1.315,24,1.452,25,3.685,26,0.552,28,4.138,29,3.085,30,3.713,31,2.958,32,1.826,34,0.314,36,0.511,37,2.671,39,2.354,40,3.207,42,0.763,43,0.543,44,0.779,45,1.763,46,2.354,48,0.098,49,1.07,50,0.054,51,1.204,52,3.423,53,4.593,54,3.423,55,0.005,56,0.005,71,5.977,72,8.449,73,5.006,74,5.977,75,5.977,76,5.006,77,5.006,78,5.006,79,5.006]],["title/classes/AddContactAndCheckPhoneDTO.html",[0,0.26,80,3.825]],["body/classes/AddContactAndCheckPhoneDTO.html",[0,0.286,2,0.742,3,0.055,4,0.055,5,0.048,10,0.125,11,0.513,20,0.264,21,0.007,26,0.434,34,0.347,36,0.964,48,0.135,50,0.055,55,0.005,56,0.005,80,5.596,81,6.093,82,3.498,83,4.683,84,4.211,85,3.138,86,6.624,87,5.259,88,3.498,89,2.135,90,2.553,91,2.095,92,3.138,93,1.662,94,4.102,95,5.195,96,5.225,97,4.48,98,2.954,99,4.211,100,2.5,101,5.998,102,5.153,103,3.226,104,5.153,105,3.84,106,5.153,107,3.226,108,2.89,109,3.524,110,5.153,111,1.842,112,3.102,113,5.153,114,5.153,115,2.5,116,1.182,117,3.932,118,3.709]],["title/controllers/AddContactController.html",[119,1.173,120,3.825]],["body/controllers/AddContactController.html",[0,0.304,3,0.04,4,0.04,5,0.035,10,0.091,12,0.929,15,0.635,17,1.297,20,0.252,21,0.007,24,0.67,26,0.347,34,0.212,42,0.622,43,0.443,44,0.635,48,0.186,50,0.04,51,0.98,55,0.004,56,0.004,80,5.821,82,4.443,83,4.425,86,5.127,87,2.555,90,2.412,93,1.016,111,1.005,116,0.857,117,5.435,118,2.689,119,1.37,120,4.47,121,1.284,122,6.47,123,3.054,124,6.47,125,6.47,126,3.736,127,2.503,128,2.926,129,2.176,130,4.87,131,5.47,132,3.106,133,2.507,134,1.827,135,3.736,136,3.736,137,1.997,138,3.736,139,3.736,140,3.736,141,2.169,142,1.67,143,1.555,144,1.63,145,1.67,146,0.694,147,1.486,148,2.276,149,3.015,150,2.574,151,1.52,152,1.591,153,2.083,154,1.555,155,2.276,156,1.52,157,1.63,158,1.21,159,3.756,160,2.689,161,1.591,162,1.31,163,5.288,164,3.736,165,3.054,166,3.937,167,3.736,168,4.47,169,3.325,170,1.855,171,1.966,172,1.555,173,1.454,174,2.692,175,1.67,176,4.174,177,2.851,178,4.47,179,3.054,180,3.054,181,3.736,182,3.054,183,3.054,184,1.712,185,1.966,186,2.095,187,2.689,188,2.689,189,1.591,190,1.591,191,1.63,192,2.851,193,1.143,194,1.09,195,3.054,196,3.054,197,3.054,198,2.6,199,2.176,200,2.276,201,3.736,202,2.878,203,3.736,204,4.174,205,3.054,206,3.054,207,3.054,208,1.63,209,3.054,210,1.642,211,3.736,212,1.757,213,2.851,214,1.19,215,5.47,216,3.736,217,3.736,218,3.736]],["title/classes/AddContactDTO.html",[0,0.26,86,3.369]],["body/classes/AddContactDTO.html",[0,0.28,2,0.727,3,0.054,4,0.054,5,0.047,10,0.122,11,0.506,20,0.273,21,0.007,26,0.483,34,0.338,36,0.98,48,0.099,50,0.054,55,0.005,56,0.005,81,7.923,86,4.861,88,3.888,89,2.373,90,2.838,91,2.329,92,3.488,93,1.619,94,3.996,95,5.373,97,4.622,98,3.048,100,2.968,103,4.228,105,4.558,107,4.228,108,3.787,109,4.618,111,2.187,112,4.066,115,3.251,116,1.158,219,4.491,220,4.491,221,4.491,222,4.491,223,4.491,224,4.491,225,4.491]],["title/classes/AddContactTable1625819654567.html",[0,0.26,226,4.165]],["body/classes/AddContactTable1625819654567.html",[0,0.235,2,0.61,3,0.045,4,0.045,5,0.039,8,1.798,9,2.434,10,0.103,11,0.449,12,1.404,14,2.386,15,0.695,16,2.626,17,1.354,18,2.099,19,2.058,20,0.269,21,0.007,22,1.615,23,1.173,24,1.245,26,0.595,29,2.645,31,3.168,32,1.915,34,0.293,36,0.612,39,2.099,40,3.093,42,0.681,43,0.485,44,0.695,45,1.642,46,2.099,48,0.083,49,0.906,50,0.045,51,1.427,55,0.004,56,0.004,62,2.551,82,3.059,88,2.165,89,1.321,90,1.58,91,1.297,92,1.942,98,2.682,100,1.548,134,0.89,226,5.329,227,7.962,228,4.238,229,4.535,230,5.989,231,4.238,232,4.238,233,4.238,234,4.238,235,3.476,236,3.911,237,3.911,238,2.551,239,3.895,240,2.551,241,1.583,242,2.104,243,2.653,244,2.551,245,2.653,246,2.653,247,3.77,248,1.849,249,2.104,250,4.465,251,2.047,252,3.749,253,3.911,254,2.653,255,2.767,256,3.464,257,3.911,258,2.767,259,2.767,260,2.767,261,3.911,262,2.767,263,2.653,264,3.771,265,2.653]],["title/classes/AddDeviceIdToUserTable1632482760947.html",[0,0.26,266,4.165]],["body/classes/AddDeviceIdToUserTable1632482760947.html",[0,0.295,2,0.766,3,0.057,4,0.057,5,0.049,8,2.1,9,2.739,10,0.129,11,0.524,12,1.503,14,2.684,15,0.811,16,2.812,17,1.45,18,2.451,19,2.403,20,0.25,21,0.007,22,1.419,23,1.37,24,1.253,25,3.408,26,0.526,29,2.663,31,2.554,32,1.576,34,0.322,36,0.544,39,2.451,40,3.245,42,0.795,43,0.566,44,0.811,45,1.806,46,2.451,48,0.105,49,1.137,50,0.057,51,1.253,55,0.005,56,0.005,60,3.108,68,2.718,69,3.573,70,2.718,134,1.469,248,3.05,266,6.223,267,8.621,268,5.32,269,6.223,270,2.663,271,5.32,272,5.32,273,5.32,274,5.32]],["title/classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html",[0,0.26,275,4.165]],["body/classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html",[0,0.247,2,0.64,3,0.048,4,0.048,5,0.041,8,1.86,9,2.498,10,0.108,11,0.464,12,1.425,13,4.873,14,2.448,15,0.718,16,2.667,17,1.375,18,2.171,19,2.127,20,0.271,21,0.007,22,1.256,23,1.213,24,1.619,25,3.982,26,0.584,28,4.486,29,3.344,30,4.025,31,3.298,32,2.036,34,0.299,36,0.454,37,2.463,39,2.171,40,3.126,42,0.704,43,0.501,44,0.718,45,1.677,46,2.171,48,0.087,49,0.95,50,0.048,51,1.11,52,3.04,53,4.235,54,3.04,55,0.004,56,0.004,250,3.473,275,5.51,276,8.104,277,4.445,278,5.51,279,5.51,280,5.51,281,5.51,282,5.51,283,4.445,284,4.445,285,4.445,286,4.445]],["title/classes/AddFileCategoryTableWithValues1630406730426.html",[0,0.26,287,4.165]],["body/classes/AddFileCategoryTableWithValues1630406730426.html",[0,0.286,2,0.742,3,0.055,4,0.055,5,0.048,8,2.056,9,2.696,10,0.125,11,0.513,12,1.306,14,2.642,15,0.794,16,2.787,17,1.437,18,2.4,19,2.353,20,0.254,21,0.007,22,1.389,23,1.009,24,0.924,26,0.556,28,2.632,29,2.608,31,2.5,32,1.847,34,0.298,36,0.526,39,2.4,40,3.225,42,0.778,43,0.554,44,0.794,45,1.783,46,2.4,48,0.101,49,1.102,50,0.055,51,1.378,55,0.005,56,0.005,62,2.195,98,1.736,105,2.89,235,3.974,238,3.102,239,3.84,240,3.102,241,1.362,243,3.226,244,3.102,245,3.226,246,3.226,248,2.247,251,2.489,252,3.226,253,3.365,265,3.226,287,6.093,288,8.195,289,5.153,290,5.225,291,5.153,292,5.153,293,5.153,294,3.399,295,4.211,296,5.153,297,5.153,298,5.153]],["title/classes/AddFileDTO.html",[0,0.26,299,3.825]],["body/classes/AddFileDTO.html",[0,0.355,2,0.919,3,0.068,4,0.068,5,0.059,10,0.155,11,0.588,20,0.228,21,0.007,32,1.77,34,0.247,36,0.802,48,0.167,50,0.068,55,0.005,56,0.005,93,1.185,94,2.925,97,4.012,98,2.645,108,4.404,115,2.867,116,1.464,299,6.418,300,7.853,301,6.383,302,5.556,303,5.289,304,4.916,305,4.728,306,6.383,307,5.68,308,5.68,309,3.705,310,5.217,311,5.68,312,6.383]],["title/classes/AddFileTable1630406751456.html",[0,0.26,313,4.165]],["body/classes/AddFileTable1630406751456.html",[0,0.224,2,0.581,3,0.043,4,0.043,5,0.062,8,1.737,9,2.37,10,0.098,11,0.433,12,1.482,14,2.323,15,0.671,16,2.584,17,1.332,18,2.028,19,1.987,20,0.265,21,0.007,22,1.498,23,1.324,24,1.401,26,0.591,28,2.062,29,2.976,31,3.058,32,1.664,34,0.303,36,0.691,39,2.028,40,3.058,42,0.657,43,0.468,44,0.671,45,1.607,46,2.028,48,0.079,49,0.863,50,0.043,51,1.458,55,0.004,56,0.004,62,1.719,98,2.739,105,3.244,134,0.848,229,4.415,235,3.358,236,4.415,237,4.415,238,2.43,239,4.383,240,2.43,241,1.787,242,2.872,243,2.527,244,2.43,245,2.527,246,2.527,247,3.67,248,3.221,249,2.004,251,1.95,252,2.527,253,2.636,255,3.777,257,4.821,258,3.777,259,3.777,260,3.777,261,2.636,262,3.777,263,3.621,265,2.527,290,3.08,313,5.148,314,8.133,315,4.037,316,6.761,317,5.785,318,4.037,319,5.785,320,4.037,321,4.037,322,4.037,323,4.037,324,6.016,325,3.592,326,2.636,327,3.592,328,2.76,329,4.037,330,4.037,331,4.037]],["title/classes/AddLimitToFileCategoryTable1634809042779.html",[0,0.26,332,4.165]],["body/classes/AddLimitToFileCategoryTable1634809042779.html",[0,0.255,2,0.661,3,0.049,4,0.049,5,0.042,8,1.903,9,2.542,10,0.111,11,0.475,12,1.526,14,2.492,15,0.735,16,2.694,17,1.389,18,2.221,19,2.177,20,0.246,21,0.007,22,1.664,23,1.42,24,1.136,25,3.163,26,0.496,28,3.237,30,3.583,32,1.428,34,0.318,36,0.469,39,2.221,40,3.149,42,0.72,43,0.513,44,0.735,45,1.701,46,2.221,48,0.09,49,0.982,50,0.049,51,1.3,55,0.004,56,0.004,60,2.885,68,2.347,69,3.237,70,2.347,210,1.38,239,2.577,290,4.835,294,4.313,295,3.755,302,2.876,332,5.638,333,8.478,334,4.594,335,6.453,336,5.638,337,7.343,338,5.638,339,4.835,340,4.594,341,3.814,342,4.835,343,4.594,344,4.594,345,4.594,346,4.594,347,4.594,348,3,349,3.506,350,4.088,351,3.755]],["title/classes/AddLocationToPositiveInfoTable1633335269397.html",[0,0.26,352,4.165]],["body/classes/AddLocationToPositiveInfoTable1633335269397.html",[0,0.298,2,0.772,3,0.057,4,0.057,5,0.05,8,2.112,9,2.75,10,0.13,11,0.527,12,1.507,14,2.696,15,0.816,16,2.819,17,1.453,18,2.465,19,2.416,20,0.251,21,0.007,22,1.427,23,1.377,24,1.261,25,3.422,26,0.528,31,2.568,32,1.585,34,0.323,36,0.548,39,2.465,40,3.251,42,0.799,43,0.569,44,0.816,45,1.812,46,2.465,48,0.105,49,1.147,50,0.057,51,1.261,55,0.005,56,0.005,60,3.121,64,4.403,68,2.741,69,3.593,70,2.741,250,3.944,352,6.259,353,8.645,354,5.366,355,4.082,356,5.366,357,5.366,358,5.366,359,5.366]],["title/classes/AddLocationUrlToProfile1651485257652.html",[0,0.26,360,4.165]],["body/classes/AddLocationUrlToProfile1651485257652.html",[0,0.295,2,0.766,3,0.057,4,0.057,5,0.049,8,2.1,9,2.739,10,0.129,11,0.524,12,1.503,14,2.684,15,0.811,16,2.812,17,1.45,18,2.451,19,2.403,20,0.25,21,0.007,22,1.683,23,1.37,24,1.253,25,3.408,26,0.526,31,2.554,32,1.576,34,0.322,36,0.544,37,2.782,39,2.451,40,3.245,42,0.795,43,0.566,44,0.811,45,1.806,46,2.451,48,0.105,49,1.137,50,0.057,51,1.253,55,0.005,56,0.005,60,3.108,68,2.718,69,3.573,70,2.718,250,3.922,355,4.059,360,6.223,361,8.621,362,5.32,363,2.844,364,5.32,365,5.32,366,5.32,367,5.32]],["title/classes/AddMedicalInfoColumnsToProfileTable1626332132301.html",[0,0.26,368,4.165]],["body/classes/AddMedicalInfoColumnsToProfileTable1626332132301.html",[0,0.254,2,0.659,3,0.049,4,0.049,5,0.042,8,1.898,9,2.537,10,0.111,11,0.474,12,1.439,13,4.95,14,2.487,15,0.733,16,2.691,17,1.387,18,2.215,19,2.171,20,0.272,21,0.007,22,1.282,23,1.238,24,1.629,25,4.003,26,0.587,31,3.318,32,2.048,34,0.302,36,0.468,37,2.514,39,2.215,40,3.147,42,0.718,43,0.511,44,0.733,45,1.698,46,2.215,48,0.09,49,0.979,50,0.049,51,1.133,52,3.13,53,4.322,54,3.13,55,0.004,56,0.004,250,5.096,368,5.624,369,8.19,370,4.577,371,5.624,372,5.624,373,5.624,374,5.624,375,5.624,376,4.577,377,4.577,378,4.577,379,4.577]],["title/classes/AddPositiveInfoTable1632807482818.html",[0,0.26,380,4.165]],["body/classes/AddPositiveInfoTable1632807482818.html",[0,0.255,2,0.661,3,0.049,4,0.049,5,0.042,8,1.903,9,2.542,10,0.111,11,0.475,12,1.44,14,2.492,15,0.735,16,2.694,17,1.389,18,2.221,19,2.177,20,0.26,21,0.007,22,1.586,23,1.241,24,1.3,26,0.577,29,1.75,31,2.855,32,1.848,34,0.303,36,0.647,39,2.221,40,3.149,42,0.72,43,0.513,44,0.735,45,1.701,46,2.221,48,0.09,49,0.982,50,0.049,51,1.401,55,0.004,56,0.004,62,2.699,64,3.966,98,2.443,134,0.965,229,4.736,235,3.678,236,4.137,237,4.137,238,2.766,239,4.067,240,2.766,241,1.674,242,2.281,243,2.876,244,2.766,245,2.876,246,2.876,247,3.937,248,2.004,249,2.281,251,2.219,254,2.876,255,3,257,4.137,258,3,259,3,260,3,261,3,262,3,263,2.876,265,2.876,342,3.506,380,5.638,381,8.201,382,4.594,383,6.336,384,4.594,385,4.594,386,4.594,387,4.594,388,3.506,389,3.506,390,6.336,391,4.594]],["title/classes/AddProfileTable1626246168913.html",[0,0.26,392,4.165]],["body/classes/AddProfileTable1626246168913.html",[0,0.237,2,0.614,3,0.046,4,0.046,5,0.039,8,1.807,9,2.444,10,0.104,11,0.451,12,1.407,14,2.395,15,0.698,16,2.632,17,1.357,18,2.109,19,2.068,20,0.269,21,0.007,22,1.536,23,1.179,24,1.25,26,0.595,29,2.655,31,3.227,32,2.019,34,0.293,36,0.615,37,2.394,39,2.109,40,3.098,42,0.684,43,0.487,44,0.698,45,1.647,46,2.109,48,0.084,49,0.912,50,0.046,51,1.357,55,0.004,56,0.004,62,2.563,90,1.591,91,1.306,92,1.956,98,1.437,134,0.897,229,4.552,235,3.493,236,3.93,237,3.93,238,2.569,239,3.91,240,2.569,241,1.59,242,2.119,243,2.672,244,2.569,245,2.672,246,2.672,247,3.784,248,1.861,249,2.119,250,4.645,251,2.061,252,3.767,253,3.93,254,2.672,255,2.787,256,3.488,257,3.93,258,2.787,259,2.787,260,2.787,261,2.787,262,2.787,263,2.672,265,2.672,392,5.355,393,7.983,394,4.268,395,6.018,396,4.268,397,4.268,398,4.268,399,4.268,400,2.569,401,3.798]],["title/classes/AddPulseBasedColumnsToProfileTable1635501555344.html",[0,0.26,402,4.165]],["body/classes/AddPulseBasedColumnsToProfileTable1635501555344.html",[0,0.245,2,0.635,3,0.047,4,0.047,5,0.041,8,1.85,9,2.488,10,0.107,11,0.462,12,1.422,13,4.854,14,2.439,15,0.715,16,2.661,17,1.372,18,2.16,19,2.117,20,0.27,21,0.007,22,1.25,23,1.207,24,1.617,25,3.976,26,0.583,28,4.608,29,3.435,30,4.134,31,3.294,32,2.033,34,0.298,36,0.451,37,2.451,39,2.16,40,3.121,42,0.7,43,0.499,44,0.715,45,1.672,46,2.16,48,0.087,49,0.944,50,0.047,51,1.104,52,3.018,53,4.213,54,3.018,55,0.004,56,0.004,402,5.483,403,8.082,404,4.413,405,5.483,406,5.483,407,5.483,408,5.483,409,5.483,410,4.413,411,4.413,412,4.413,413,4.413]],["title/classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html",[0,0.26,414,4.165]],["body/classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html",[0,0.298,2,0.772,3,0.057,4,0.057,5,0.05,8,2.112,9,2.75,10,0.13,11,0.527,12,1.507,14,2.696,15,0.816,16,2.819,17,1.453,18,2.465,19,2.416,20,0.251,21,0.007,22,1.427,23,1.377,24,1.261,25,3.422,26,0.528,31,2.568,32,1.585,34,0.323,36,0.548,39,2.465,40,3.251,42,0.799,43,0.569,44,0.816,45,1.812,46,2.465,48,0.105,49,1.147,50,0.057,51,1.261,55,0.005,56,0.005,60,3.121,62,2.996,64,4.403,68,2.741,69,3.593,70,2.741,414,6.259,415,8.645,416,5.366,417,5.748,418,5.366,419,5.366,420,5.366,421,5.366]],["title/classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html",[0,0.26,422,4.165]],["body/classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html",[0,0.266,2,0.69,3,0.051,4,0.051,5,0.044,8,1.958,9,2.598,10,0.116,11,0.489,12,1.459,13,5.069,14,2.547,15,0.756,16,2.729,17,1.407,18,2.286,19,2.24,20,0.266,21,0.007,22,1.323,23,1.277,24,1.539,25,3.832,26,0.567,28,3.331,29,2.483,30,2.989,31,3.135,32,2.066,34,0.308,36,0.49,37,2.594,39,2.286,40,3.178,42,0.741,43,0.528,44,0.756,45,1.731,46,2.286,48,0.094,49,1.024,50,0.051,51,1.169,52,3.276,53,4.459,54,3.276,55,0.005,56,0.005,342,6.072,389,6.072,422,5.802,423,8.323,424,4.791,425,5.802,426,5.329,427,5.802,428,4.791,429,4.791,430,4.791,431,4.791]],["title/classes/AddRoleToUserTable1625843279739.html",[0,0.26,432,4.165]],["body/classes/AddRoleToUserTable1625843279739.html",[0,0.293,2,0.759,3,0.056,4,0.056,5,0.049,8,2.088,9,2.727,10,0.128,11,0.521,12,1.5,14,2.673,15,0.807,16,2.806,17,1.446,18,2.437,19,2.389,20,0.249,21,0.007,22,1.678,23,1.362,24,1.246,25,3.393,26,0.525,28,3.552,29,2.648,30,3.187,31,2.539,34,0.321,36,0.539,39,2.437,40,3.24,42,0.79,43,0.563,44,0.807,45,1.8,46,2.437,48,0.104,49,1.128,50,0.056,51,1.246,55,0.005,56,0.005,60,3.094,68,2.694,69,3.552,70,2.694,98,2.342,134,1.461,341,4.186,432,6.188,433,8.597,434,5.274,435,5.006,436,5.274,437,5.274,438,5.274,439,5.274]],["title/classes/AddSmsTimeToPositiveInfoTable1632995635641.html",[0,0.26,440,4.165]],["body/classes/AddSmsTimeToPositiveInfoTable1632995635641.html",[0,0.298,2,0.772,3,0.057,4,0.057,5,0.05,8,2.112,9,2.75,10,0.13,11,0.527,12,1.507,14,2.696,15,0.816,16,2.819,17,1.453,18,2.465,19,2.416,20,0.251,21,0.007,22,1.427,23,1.377,24,1.261,25,3.422,26,0.528,31,2.568,32,1.585,34,0.323,36,0.548,39,2.465,40,3.251,42,0.799,43,0.569,44,0.816,45,1.812,46,2.465,48,0.105,49,1.147,50,0.057,51,1.261,55,0.005,56,0.005,60,3.121,62,2.996,64,4.403,68,2.741,69,3.593,70,2.741,440,6.259,441,8.645,442,5.366,443,5.748,444,5.366,445,5.366,446,5.366,447,5.366]],["title/controllers/AddTimeSlotController.html",[119,1.173,448,3.825]],["body/controllers/AddTimeSlotController.html",[0,0.343,3,0.047,4,0.047,5,0.041,10,0.107,12,0.751,15,0.716,17,1.164,20,0.234,21,0.007,26,0.28,34,0.171,42,0.502,43,0.358,44,0.513,48,0.185,50,0.047,51,1.274,55,0.004,56,0.004,93,0.821,116,1.014,117,4.708,119,1.545,121,1.519,127,2.353,128,2.893,129,1.758,130,4.219,132,2.691,133,2.026,134,1.699,137,1.614,141,2.566,142,1.976,143,1.84,146,0.821,147,1.758,148,2.567,149,2.826,150,2.454,151,1.798,152,1.883,153,2.349,154,1.84,155,2.567,156,1.798,157,1.928,158,1.432,161,1.883,162,1.55,165,3.613,166,3.183,168,3.613,170,2.195,171,2.327,172,1.84,173,1.72,174,2.567,175,1.976,189,1.883,190,1.883,191,1.928,193,1.353,194,0.881,198,2.253,199,1.758,200,1.84,202,2.327,212,2.901,214,0.962,363,1.798,448,5.042,449,3.063,450,3.624,451,6.169,452,3.613,453,7.106,454,4.421,455,5.535,456,4.421,457,4.548,458,4.421,459,4.421,460,4.124,461,3.183,462,2.887,463,5.042,464,3.613,465,3.374,466,4.421,467,3.934,468,4.028,469,3.374,470,3.183,471,3.374,472,4.421,473,4.421,474,6.189,475,3.934,476,4.421,477,4.421,478,4.421,479,4.421]],["title/classes/AddTimeSlotDTO.html",[0,0.26,455,3.369]],["body/classes/AddTimeSlotDTO.html",[0,0.277,2,0.719,3,0.053,4,0.053,5,0.046,10,0.121,11,0.503,20,0.268,21,0.007,32,2.001,34,0.327,36,0.888,43,0.655,48,0.149,50,0.053,55,0.005,56,0.005,88,3.868,93,1.568,94,3.87,97,4.72,98,2.928,100,2.955,108,3.762,115,3.174,116,1.146,303,4.901,304,4.199,305,4.038,308,4.445,309,2.9,310,4.083,449,4.316,450,3.818,455,4.828,480,8.693,481,4.445,482,4.74,483,3.759,484,4.996,485,4.996,486,4.611,487,4.996,488,4.996,489,4.996,490,3.812,491,4.445,492,3.812,493,6.707,494,4.996]],["title/classes/AddTimeSlotDayTable1629364845785.html",[0,0.26,495,4.165]],["body/classes/AddTimeSlotDayTable1629364845785.html",[0,0.269,2,0.697,3,0.052,4,0.052,5,0.045,8,1.971,9,2.611,10,0.117,11,0.492,12,1.463,14,2.56,15,0.762,16,2.737,17,1.411,18,2.301,19,2.255,20,0.255,21,0.007,22,1.332,23,1.285,24,1.335,26,0.568,28,2.472,31,2.397,32,1.679,34,0.31,36,0.671,39,2.301,40,3.184,42,0.746,43,0.531,44,0.762,45,1.738,46,2.301,48,0.095,49,1.035,50,0.052,51,1.335,55,0.005,56,0.005,98,2.211,229,4.865,235,3.81,236,4.286,237,4.286,238,2.913,239,4.178,240,2.913,241,1.735,242,3.259,243,3.029,244,2.913,245,3.029,246,3.029,255,3.159,257,4.286,258,3.159,259,3.159,260,3.159,261,3.159,262,3.159,263,3.029,495,5.841,496,8.351,497,4.838,498,6.564,499,4.838,500,6.564,501,4.838,502,4.838,503,4.838,504,6.629,505,4.306,506,4.838,507,3.954]],["title/classes/AddTimeSlotTable1629364182226.html",[0,0.26,508,4.165]],["body/classes/AddTimeSlotTable1629364182226.html",[0,0.25,2,0.648,3,0.048,4,0.048,5,0.042,8,1.876,9,2.515,10,0.109,11,0.468,12,1.431,14,2.465,15,0.725,16,2.677,17,1.38,18,2.19,19,2.146,20,0.263,21,0.007,22,1.572,23,1.223,24,1.286,26,0.58,29,2.951,31,2.83,32,1.835,34,0.3,36,0.638,39,2.19,40,3.135,42,0.71,43,0.506,44,0.725,45,1.686,46,2.19,48,0.088,49,0.963,50,0.048,51,1.459,55,0.004,56,0.004,62,3.056,88,2.3,98,2.417,100,1.644,134,0.946,229,4.685,235,3.626,236,4.079,237,4.079,238,2.71,239,4.024,240,2.71,241,1.651,242,2.235,243,2.818,244,2.71,245,2.818,246,2.818,247,3.895,248,1.964,249,2.235,251,2.174,252,4.491,253,2.94,255,2.94,257,4.079,258,2.94,259,2.94,260,2.94,261,4.079,262,2.94,263,2.818,264,4.006,265,2.818,507,5.106,508,5.559,509,8.141,510,4.502,511,6.247,512,4.502,513,4.502,514,4.502,515,4.502,516,4.502]],["title/classes/AddTimezoneToProfile1651485422367.html",[0,0.26,517,4.165]],["body/classes/AddTimezoneToProfile1651485422367.html",[0,0.293,2,0.759,3,0.056,4,0.056,5,0.049,8,2.088,9,2.727,10,0.128,11,0.521,12,1.5,14,2.673,15,0.807,16,2.806,17,1.446,18,2.437,19,2.389,20,0.249,21,0.007,22,1.678,23,1.362,24,1.246,25,3.393,26,0.525,29,2.648,31,2.539,32,1.567,34,0.321,36,0.539,37,2.766,39,2.437,40,3.24,42,0.79,43,0.563,44,0.807,45,1.8,46,2.437,48,0.104,49,1.128,50,0.056,51,1.246,55,0.005,56,0.005,60,3.094,68,2.694,69,3.552,70,2.694,248,3.033,270,2.648,363,2.828,483,3.452,517,6.188,518,8.597,519,5.274,520,5.274,521,5.274,522,5.274,523,5.274]],["title/classes/AddTimezoneToSlots1651485422366.html",[0,0.26,524,4.165]],["body/classes/AddTimezoneToSlots1651485422366.html",[0,0.293,2,0.759,3,0.056,4,0.056,5,0.049,8,2.088,9,2.727,10,0.128,11,0.521,12,1.5,14,2.673,15,0.807,16,2.806,17,1.446,18,2.437,19,2.389,20,0.249,21,0.007,22,1.678,23,1.362,24,1.246,25,3.393,26,0.525,29,2.648,31,2.539,32,1.567,34,0.321,36,0.539,39,2.437,40,3.24,42,0.79,43,0.563,44,0.807,45,1.8,46,2.437,48,0.104,49,1.128,50,0.056,51,1.246,55,0.005,56,0.005,60,3.094,68,2.694,69,3.552,70,2.694,248,3.033,270,2.648,363,2.828,483,3.452,507,5.683,524,6.188,525,8.597,526,5.274,527,5.274,528,5.274,529,5.274,530,5.274]],["title/classes/AddTriggerTimeToPositiveInfoTable1633099510340.html",[0,0.26,531,4.165]],["body/classes/AddTriggerTimeToPositiveInfoTable1633099510340.html",[0,0.298,2,0.772,3,0.057,4,0.057,5,0.05,8,2.112,9,2.75,10,0.13,11,0.527,12,1.507,14,2.696,15,0.816,16,2.819,17,1.453,18,2.465,19,2.416,20,0.251,21,0.007,22,1.427,23,1.377,24,1.261,25,3.422,26,0.528,31,2.568,32,1.585,34,0.323,36,0.548,39,2.465,40,3.251,42,0.799,43,0.569,44,0.816,45,1.812,46,2.465,48,0.105,49,1.147,50,0.057,51,1.261,55,0.005,56,0.005,60,3.121,62,2.996,64,4.403,68,2.741,69,3.593,70,2.741,531,6.259,532,8.645,533,5.366,534,6.259,535,5.366,536,5.366,537,5.366,538,5.366]],["title/classes/AddUnconfirmedEmailTable1626421452168.html",[0,0.26,539,4.165]],["body/classes/AddUnconfirmedEmailTable1626421452168.html",[0,0.256,2,0.663,3,0.049,4,0.049,5,0.043,8,1.905,9,2.545,10,0.112,11,0.475,12,1.441,14,2.494,15,0.736,16,2.696,17,1.39,18,2.224,19,2.18,20,0.261,21,0.007,22,1.473,23,1.242,24,1.301,26,0.577,29,2.765,31,2.857,32,1.43,34,0.303,36,0.648,39,2.224,40,3.151,42,0.721,43,0.513,44,0.736,45,1.702,46,2.224,48,0.09,49,0.984,50,0.049,51,1.402,55,0.004,56,0.004,62,1.96,89,1.435,98,2.635,134,0.967,229,4.74,235,3.682,236,4.143,237,4.143,238,2.771,239,4.071,240,2.771,241,1.677,242,2.285,243,2.881,244,2.771,245,2.881,246,2.881,247,3.941,248,2.767,249,3.15,250,2.581,251,2.223,252,2.881,253,3.006,255,3.006,256,3.762,257,4.143,258,3.006,259,3.006,260,3.006,261,3.006,262,3.006,263,2.881,265,2.881,294,2.285,539,5.645,540,8.207,541,4.603,542,6.344,543,4.603,544,6.344,545,4.603,546,4.603,547,4.603]],["title/classes/AddUserTable1625563196521.html",[0,0.26,548,4.165]],["body/classes/AddUserTable1625563196521.html",[0,0.287,2,0.743,3,0.055,4,0.055,5,0.048,8,2.059,9,2.699,10,0.125,11,0.514,12,1.308,14,2.645,15,0.796,16,2.789,17,1.438,18,2.403,19,2.356,20,0.26,21,0.007,22,1.562,23,1.011,24,0.925,26,0.568,29,2.932,31,2.811,32,1.545,34,0.298,36,0.528,39,2.403,40,3.227,42,0.779,43,0.555,44,0.796,45,1.785,46,2.403,48,0.101,49,1.104,50,0.055,51,1.229,55,0.005,56,0.005,62,2.92,89,1.61,98,2.31,134,1.441,235,3.98,238,3.108,239,2.896,240,3.108,241,1.365,244,3.108,248,2.252,249,2.563,250,2.896,251,2.494,252,4.292,253,4.477,254,3.232,265,3.232,548,6.102,549,8.202,550,5.163,551,5.163,552,5.163,553,5.163]],["title/modules/AppModule.html",[554,2.042,555,3.369]],["body/modules/AppModule.html",[0,0.251,3,0.048,4,0.048,5,0.042,21,0.007,48,0.186,50,0.048,55,0.004,56,0.004,146,0.838,210,1.354,337,3.686,450,2.544,483,2.239,554,2.728,555,6.947,556,2.373,557,3.292,558,4.013,559,4.013,560,6.068,561,5.505,562,5.505,563,5.505,564,5.075,565,5.277,566,6.068,567,5.075,568,5.075,569,3.508,570,2.529,571,2.448,572,4.51,573,3.631,574,4.51,575,6.255,576,4.013,577,4.51,578,3.247,579,3.686,580,4.51,581,4.013,582,4.169,583,2.618,584,3.247,585,3.686,586,4.013,587,3.247,588,3.442,589,6.255,590,4.51,591,2.715,592,3.084,593,3.247,594,3.686,595,4.51,596,2.715,597,2.067,598,2.618,599,4.51,600,4.51,601,2.529,602,4.51,603,4.51,604,4.013,605,3.442,606,4.51,607,4.51,608,4.51,609,4.51,610,4.51,611,4.51,612,4.51,613,4.51,614,5.566,615,4.51,616,4.013,617,4.013,618,4.51,619,4.51,620,4.51,621,3.686,622,4.51,623,2.715,624,2.715,625,2.618]],["title/injectables/AppService.html",[626,1.432,627,4.165]],["body/injectables/AppService.html",[0,0.386,3,0.074,4,0.074,5,0.064,10,0.168,15,0.958,21,0.007,34,0.269,36,0.844,44,0.805,48,0.136,50,0.074,55,0.006,56,0.006,146,1.289,214,1.51,626,2.528,627,7.352,628,3.102,629,6.941,630,9.131,631,6.941,632,6.941,633,6.941]],["title/injectables/AuthenticationService.html",[626,1.432,634,3.056]],["body/injectables/AuthenticationService.html",[0,0.209,3,0.04,4,0.04,5,0.035,10,0.091,11,0.412,12,1.291,15,0.638,16,2.523,17,1.405,20,0.22,21,0.007,22,0.764,23,0.737,24,1.363,26,0.453,30,1.725,34,0.318,36,0.929,42,0.812,43,0.578,44,0.829,45,1.555,48,0.165,50,0.04,51,0.675,55,0.004,56,0.004,89,2.026,128,1.347,137,2.008,144,1.642,146,0.699,185,1.981,186,2.111,193,1.683,194,1.515,210,1.652,214,1.728,363,1.531,597,1.725,598,3.772,621,6.214,626,1.683,628,1.683,634,3.591,635,3.765,636,3.528,637,2.722,638,6.36,639,4.894,640,7.147,641,6.499,642,5.5,643,3.35,644,5.311,645,4.474,646,5.5,647,3.959,648,4.894,649,3.765,650,2.71,651,3.765,652,3.765,653,3.765,654,5.5,655,3.765,656,5.5,657,5.5,658,3.765,659,4.244,660,2.71,661,6.499,662,3.765,663,3.35,664,2.873,665,3.35,666,4.495,667,3.765,668,3.077,669,2.458,670,3.765,671,3.765,672,3.765,673,3.765,674,3.765,675,3.765,676,3.765,677,3.765,678,3.765,679,3.765,680,3.959,681,5.5,682,3.765,683,3.765,684,3.734,685,3.35,686,4.197,687,3.765,688,2.986,689,3.765,690,3.077,691,3.077,692,3.765,693,3.35,694,3.765,695,3.765,696,3.765,697,3.35,698,3.765,699,3.765,700,3.765,701,3.765,702,3.765,703,3.765,704,3.765,705,3.765,706,3.765,707,3.765,708,2.574,709,3.765,710,3.765,711,1.981,712,2.873]],["title/modules/AuthorizationModule.html",[554,2.042,560,3.369]],["body/modules/AuthorizationModule.html",[0,0.302,3,0.058,4,0.058,5,0.05,21,0.007,48,0.186,50,0.058,55,0.005,56,0.005,121,2.437,146,1.01,173,2.116,554,3.094,556,2.861,557,3.733,560,6.693,568,4.271,569,3.979,570,3.049,571,2.952,573,3.156,578,3.914,582,4.118,583,3.156,596,3.273,597,2.492,623,3.273,624,3.273,625,4.118,634,6.209,647,3.914,713,4.838,714,4.838,715,4.838,716,6.794,717,5.437,718,6.454,719,6.454,720,4.271,721,4.851,722,5.437,723,5.437,724,4.444,725,6.313,726,4.838,727,4.838,728,4.838,729,4.441,730,3.404,731,4.444,732,4.444,733,5.437,734,5.437,735,5.437,736,5.437]],["title/classes/BasicConsumer.html",[0,0.26,737,3.825]],["body/classes/BasicConsumer.html",[0,0.289,2,0.748,3,0.056,4,0.056,5,0.048,10,0.126,11,0.516,15,0.799,20,0.255,21,0.007,26,0.522,34,0.332,42,0.934,43,0.665,44,0.896,48,0.152,50,0.056,55,0.005,56,0.005,93,1.434,146,0.965,193,1.59,194,1.539,587,3.74,636,4.192,637,3.573,684,3.632,737,5.628,738,5.196,739,6.127,740,6.127,741,6.127,742,6.886,743,6.886,744,6.127,745,8.495,746,6.872,747,5.196,748,5.503,749,6.127,750,6.872,751,5.196,752,6.127,753,6.872,754,5.196,755,3.965,756,4.624,757,4.247,758,5.196,759,5.196,760,5.196,761,5.196,762,5.196]],["title/controllers/CancelEmergencyMessageController.html",[119,1.173,763,3.825]],["body/controllers/CancelEmergencyMessageController.html",[0,0.286,3,0.055,4,0.055,5,0.048,10,0.125,15,0.794,17,1.26,20,0.247,21,0.007,26,0.327,32,1.161,34,0.2,42,0.586,43,0.417,44,0.598,48,0.184,50,0.055,51,0.924,55,0.005,56,0.005,91,1.577,93,0.957,116,1.182,119,1.291,121,1.77,127,2.507,129,2.049,130,4.683,132,2.987,133,2.362,134,1.616,137,1.881,142,2.303,143,2.144,145,2.303,146,0.957,147,2.049,148,2.849,149,3.059,150,2.724,151,2.096,152,2.195,153,2.608,154,2.144,155,2.849,156,2.096,161,2.195,162,1.806,172,2.144,173,2.005,174,2.849,175,2.303,189,2.195,190,2.195,191,2.247,194,1.027,198,2.5,199,2.049,200,2.144,214,1.121,763,5.596,764,6.847,765,5.13,766,4.211,767,3.974,768,6.847,769,5.153,770,2.991,771,6.847,772,5.153,773,5.153,774,3.709,775,4.175,776,4.211,777,3.498,778,2.797,779,4.585,780,4.585,781,2.797,782,5.153,783,5.153,784,5.153,785,2.558]],["title/classes/CategoryRO.html",[0,0.26,786,3.825]],["body/classes/CategoryRO.html",[0,0.432,2,0.905,3,0.067,4,0.067,5,0.058,10,0.153,11,0.583,20,0.256,21,0.007,32,1.753,34,0.301,36,0.902,48,0.166,50,0.067,55,0.005,56,0.005,93,1.445,115,3.085,116,1.441,158,2.036,294,4.194,304,4.869,786,6.357,787,6.285,788,5.516,789,4.222,790,6.285,791,7.415,792,6.285,793,4.093,794,4.446,795,6.285]],["title/injectables/CognitoStrategy.html",[626,1.432,716,3.572]],["body/injectables/CognitoStrategy.html",[0,0.296,3,0.057,4,0.057,5,0.049,12,1.19,17,0.873,20,0.155,21,0.007,24,1.255,26,0.338,34,0.207,42,0.606,43,0.431,48,0.174,50,0.057,51,1.489,55,0.005,56,0.005,85,2.443,134,1.643,146,0.99,173,2.075,193,2.143,194,1.396,210,1.601,214,1.16,363,2.168,626,2.143,628,2.383,634,5.424,637,2.667,647,3.838,650,3.838,664,4.068,680,3.838,688,2.894,712,4.068,716,5.344,724,4.357,796,5.331,797,5.331,798,4.396,799,8.306,800,5.331,801,5.724,802,5.331,803,4.357,804,3.838,805,5.331,806,5.331,807,5.331,808,4.357,809,4.744,810,5.331,811,4.068,812,5.331,813,4.357,814,4.744,815,6.232,816,5.331,817,5.331,818,7.003,819,7.003,820,5.331,821,5.331,822,5.331,823,4.357,824,5.331,825,5.331,826,5.331,827,3.481,828,5.331]],["title/controllers/ConfirmUserEmailController.html",[119,1.173,829,3.825]],["body/controllers/ConfirmUserEmailController.html",[0,0.366,3,0.052,4,0.052,5,0.045,10,0.118,12,1.119,15,0.765,17,1.224,20,0.243,21,0.007,26,0.309,34,0.189,42,0.553,43,0.394,44,0.565,48,0.184,50,0.052,51,1.339,55,0.005,56,0.005,89,2.055,91,1.489,93,0.904,116,1.116,119,1.219,121,1.672,128,2.357,129,1.936,132,2.875,133,2.231,134,1.812,137,1.777,142,2.175,146,0.904,147,1.936,149,2.972,150,2.621,153,2.51,154,2.025,157,2.123,158,1.577,162,1.706,170,2.416,171,2.561,174,2.742,175,2.175,193,1.489,194,1.314,198,2.406,199,1.936,200,2.025,202,2.561,210,1.979,214,1.059,270,2.51,711,2.561,770,2.825,777,3.367,778,2.642,785,2.416,798,3.71,829,5.387,830,6.591,831,4.867,832,7.473,833,4.867,834,6.545,835,6.591,836,4.867,837,4.867,838,3.504,839,3.178,840,4.867,841,4.867,842,4.867,843,4.867,844,4.867,845,5.11,846,3.978,847,3.978,848,3.178,849,3.328,850,4.867,851,4.867,852,3.714,853,4.867,854,4.867,855,4.331,856,6.591,857,4.867,858,4.867,859,2.73,860,4.331]],["title/classes/ConfirmUserEmailDTO.html",[0,0.26,834,3.825]],["body/classes/ConfirmUserEmailDTO.html",[0,0.372,2,0.964,3,0.072,4,0.072,5,0.062,10,0.162,11,0.606,20,0.234,21,0.007,32,1.822,34,0.259,36,0.922,48,0.132,50,0.072,55,0.006,56,0.006,93,1.243,94,3.069,95,4.693,97,4.13,115,2.952,116,1.536,134,1.699,249,4.014,294,4.312,834,6.608,861,8.085,862,6.695,863,6.695]],["title/entities/ContactEntity.html",[864,1.948,865,3.056]],["body/entities/ContactEntity.html",[0,0.234,3,0.045,4,0.045,5,0.039,10,0.102,11,0.447,20,0.279,21,0.007,26,0.538,29,3.475,34,0.35,36,0.913,48,0.117,49,0.902,50,0.045,55,0.004,56,0.004,60,3.447,62,3.207,88,3.538,89,2.159,90,2.582,91,2.119,92,3.174,93,1.678,100,2.75,103,3.735,105,4.223,107,3.735,111,2.026,112,3.592,127,2.431,134,1.67,162,1.478,241,1.83,242,2.962,247,3.759,248,3.98,249,2.962,251,2.882,254,3.735,486,3.847,601,2.365,864,1.754,865,3.896,866,4.216,867,3.538,868,4.02,869,2.379,870,5.388,871,4.216,872,2.639,873,4.216,874,4.216,875,2.639,876,4.216,877,4.216,878,4.216,879,4.216,880,4.216,881,3.446,882,4.216,883,2.753,884,3.218,885,5.31,886,4.216,887,2.639,888,4.216,889,3.735,890,3.735,891,4.877,892,3.735,893,4.081,894,4.216]],["title/classes/ContactEntitySubscriber.html",[0,0.26,895,4.165]],["body/classes/ContactEntitySubscriber.html",[0,0.281,2,0.728,3,0.054,4,0.054,5,0.047,8,2.031,10,0.123,11,0.507,12,1.294,15,0.785,20,0.236,21,0.007,22,1.026,23,0.99,26,0.538,34,0.329,42,0.866,43,0.617,44,0.944,45,1.77,48,0.15,49,1.081,50,0.054,55,0.005,56,0.005,89,2.109,90,2.521,91,2.069,92,3.099,194,1.519,214,1.1,748,5.307,864,2.104,865,5.536,895,6.018,896,8.724,897,4.133,898,5.814,899,5.814,900,5.161,901,5.161,902,5.161,903,6.207,904,4.133,905,5.161,906,4.5,907,5.161,908,6.207,909,5.057,910,5.161,911,5.161,912,6.207,913,4.5,914,5.057,915,5.161,916,3.859,917,3.859,918,3.859,919,3.302,920,5.057,921,5.161,922,5.814,923,3.859]],["title/classes/ContactIdRO.html",[0,0.26,163,3.825]],["body/classes/ContactIdRO.html",[0,0.45,2,0.966,3,0.072,4,0.072,5,0.062,10,0.163,11,0.607,20,0.235,21,0.007,34,0.26,36,0.923,48,0.159,50,0.072,55,0.006,56,0.006,93,1.247,115,2.957,116,1.54,158,2.175,163,6.619,241,2.298,789,3.644,793,4.262,794,4.262,924,8.099,925,5.487,926,5.487]],["title/controllers/ContactListController.html",[119,1.173,927,3.825]],["body/controllers/ContactListController.html",[0,0.378,3,0.055,4,0.055,5,0.047,10,0.124,15,0.789,17,1.253,20,0.246,21,0.007,26,0.323,32,1.149,34,0.198,42,0.58,43,0.413,44,0.592,48,0.185,50,0.055,51,0.914,55,0.005,56,0.005,82,4.169,91,1.56,93,0.947,116,1.17,119,1.277,121,1.752,127,2.497,129,2.028,132,2.966,133,2.337,134,1.607,137,1.862,143,2.122,146,0.947,147,2.028,148,2.83,149,3.043,150,2.705,151,2.074,152,2.172,153,2.59,154,2.122,155,2.83,156,2.074,157,2.224,158,1.652,159,4.441,160,3.671,161,2.172,162,1.787,172,2.122,173,1.984,174,2.83,175,2.279,189,2.172,190,2.172,191,2.224,192,3.891,194,1.016,198,2.483,199,2.028,200,2.122,210,1.531,214,1.11,270,2.59,304,4.257,781,2.768,927,5.558,928,6.8,929,4.538,930,6.8,931,5.099,932,5.838,933,4.168,934,4.538,935,5.099,936,4.538,937,4.538,938,3.891,939,5.099,940,3.487,941,5.099,942,5.099,943,4.538]],["title/modules/ContactModule.html",[554,2.042,561,3.056]],["body/modules/ContactModule.html",[0,0.305,3,0.059,4,0.059,5,0.051,21,0.007,48,0.186,50,0.059,55,0.005,56,0.005,90,2.05,120,6.488,121,2.455,146,1.021,159,5.528,160,3.958,554,3.117,556,2.893,557,3.76,561,5.937,569,4.008,570,3.083,571,2.985,573,3.191,582,4.148,583,3.191,596,3.31,597,2.52,623,3.31,624,3.31,625,4.148,720,4.302,729,4.473,730,3.442,927,6.488,944,4.893,945,4.893,946,4.893,947,5.498,948,6.488,949,5.429,950,7.939,951,5.498,952,4.196,953,4.893,954,7.939,955,5.498,956,4.893,957,4.494,958,4.196,959,6.359,960,4.893,961,4.893]],["title/classes/ContactRO.html",[0,0.26,932,3.572]],["body/classes/ContactRO.html",[0,0.359,2,0.68,3,0.051,4,0.051,5,0.044,10,0.115,11,0.484,20,0.278,21,0.007,26,0.467,34,0.35,36,1.001,43,0.753,48,0.127,50,0.051,55,0.005,56,0.005,88,3.76,89,2.295,90,2.744,91,2.252,92,3.374,93,1.679,100,2.889,111,2.129,115,3.339,116,1.084,158,1.531,241,1.945,789,4.907,793,3.4,794,4.812,867,3.76,868,4.272,932,4.93,962,4.727,963,4.727,964,4.727,965,4.727,966,4.727,967,4.727,968,4.727,969,4.727,970,4.727,971,4.727]],["title/classes/ContactRepository.html",[0,0.26,972,3.572]],["body/classes/ContactRepository.html",[0,0.308,2,0.799,3,0.059,4,0.059,5,0.051,10,0.135,11,0.539,15,0.834,20,0.208,21,0.007,22,1.125,23,1.086,24,1.512,26,0.456,34,0.309,42,0.817,43,0.582,44,0.834,45,1.835,48,0.157,49,1.186,50,0.059,55,0.005,56,0.005,85,3.294,146,1.03,194,1.589,214,1.564,636,4.328,637,3.212,688,3.902,865,3.623,972,5.485,973,5.548,974,4.8,975,5.874,976,4.499,977,7.188,978,5.548,979,5.874,980,5.604,981,5.548,982,4.499,983,5.485,984,5.548,985,3.34,986,4.937,987,5.548,988,4.234,989,4.031,990,4.499,991,3.471,992,3.38,993,4.534]],["title/injectables/ContactService.html",[159,2.717,626,1.432]],["body/injectables/ContactService.html",[0,0.193,3,0.037,4,0.037,5,0.032,10,0.085,11,0.389,12,1.169,15,0.602,17,1.531,20,0.238,21,0.007,22,0.706,23,0.682,24,1.434,26,0.521,34,0.326,36,0.898,42,0.934,43,0.665,44,0.928,45,1.789,48,0.157,49,0.745,50,0.037,51,0.624,55,0.004,56,0.004,82,2.653,86,4.954,111,2.261,118,3.738,128,3.059,137,2.267,144,1.519,145,1.556,146,0.647,159,3.014,166,2.507,184,1.596,193,1.589,194,1.372,204,3.962,208,3.211,210,1.046,214,1.789,241,2.04,305,3.126,348,2.274,626,1.589,628,1.556,637,2.621,865,4.494,869,2.938,940,2.381,972,5.891,976,2.18,986,3.099,989,1.953,991,2.508,992,2.92,994,3.482,995,4.621,996,5.192,997,4.244,998,5.075,999,5.192,1000,6.209,1001,5.525,1002,3.099,1003,5.192,1004,5.192,1005,3.482,1006,2.846,1007,5.192,1008,3.482,1009,4.244,1010,3.482,1011,2.846,1012,3.482,1013,5.192,1014,3.482,1015,3.482,1016,3.482,1017,3.482,1018,4.954,1019,3.482,1020,5.192,1021,2.657,1022,2.657,1023,3.482,1024,2.381,1025,3.482,1026,2.657,1027,3.482,1028,3.482,1029,3.482,1030,3.099,1031,3.482,1032,3.482,1033,3.482,1034,3.099,1035,6.209,1036,3.482,1037,3.482,1038,3.482,1039,3.482,1040,2.381,1041,3.482,1042,4.244,1043,3.482,1044,3.482,1045,3.482]],["title/classes/CustomError.html",[0,0.26,1046,2.93]],["body/classes/CustomError.html",[0,0.302,2,0.783,3,0.058,4,0.058,5,0.05,10,0.132,11,0.532,12,1.341,15,0.823,16,2.829,20,0.243,21,0.007,26,0.345,34,0.336,36,0.887,42,0.618,43,0.44,44,0.631,48,0.107,50,0.058,55,0.005,56,0.005,85,3.251,111,2.395,132,2.372,193,2.171,194,1.574,214,1.183,684,4.373,767,5.168,808,4.444,1046,4.441,1047,8.903,1048,5.437,1049,9.068,1050,8.369,1051,5.437,1052,6.625,1053,8.903,1054,7.094,1055,5.437,1056,5.437,1057,5.437,1058,3.914,1059,5.437,1060,7.094,1061,5.437]],["title/controllers/DeleteContactController.html",[119,1.173,949,3.201]],["body/controllers/DeleteContactController.html",[0,0.364,3,0.052,4,0.052,5,0.077,10,0.117,15,0.76,17,1.218,20,0.242,21,0.007,24,0.864,26,0.306,34,0.187,42,0.548,43,0.39,44,0.559,48,0.185,50,0.052,51,1.173,55,0.005,56,0.005,91,1.475,93,0.895,111,2.001,116,1.105,119,1.207,121,1.656,127,2.44,129,1.917,132,2.856,133,2.209,134,1.752,137,1.76,143,2.005,146,0.895,147,1.917,148,2.724,149,2.957,150,2.604,151,1.96,152,2.053,153,2.493,154,2.005,155,2.724,156,1.96,157,2.102,158,1.561,161,2.053,162,1.689,172,2.005,173,1.875,174,2.724,175,2.154,189,2.053,190,2.053,191,2.102,194,0.961,198,2.39,199,1.917,200,2.005,210,1.966,212,2.267,214,1.049,241,1.274,270,2.493,711,2.536,770,2.797,774,5.352,777,3.344,778,2.616,781,2.616,785,2.393,859,2.703,949,4.477,1062,6.547,1063,4.289,1064,6.616,1065,4.819,1066,7.976,1067,3.939,1068,4.819,1069,3.296,1070,4.476,1071,3.678,1072,4.098,1073,3.296,1074,3.296,1075,3.939,1076,3.939,1077,3.939,1078,3.469,1079,4.819,1080,4.819,1081,3.678]],["title/controllers/DeleteContactController-1.html",[30,1.785,119,0.976,949,2.663]],["body/controllers/DeleteContactController-1.html",[0,0.364,3,0.052,4,0.052,5,0.045,10,0.117,15,0.76,17,1.218,20,0.242,21,0.007,24,0.864,26,0.306,34,0.187,42,0.548,43,0.39,44,0.559,48,0.185,50,0.052,51,1.173,55,0.005,56,0.005,82,4.074,91,1.475,93,0.895,111,2.001,116,1.105,119,1.207,121,1.656,123,3.939,127,2.44,129,1.917,132,2.856,133,2.209,134,1.752,137,1.76,143,2.005,146,0.895,147,1.917,148,2.724,149,2.957,150,2.604,151,1.96,152,2.053,153,2.493,154,2.005,155,2.724,156,1.96,157,2.102,158,1.561,159,4.315,160,3.469,161,2.053,162,1.689,172,2.005,173,1.875,174,2.724,175,2.154,189,2.053,190,2.053,191,2.102,192,3.678,194,0.961,198,2.39,199,1.917,200,2.005,210,1.966,212,2.267,214,1.049,241,1.274,270,2.493,711,2.536,770,2.797,774,5.352,777,3.344,778,2.616,781,2.616,785,2.393,859,2.703,937,4.289,949,4.477,995,6.616,1006,6.519,1067,3.939,1069,3.296,1072,4.098,1073,3.296,1074,3.296,1077,3.939,1078,3.469,1081,3.678,1082,6.547,1083,4.819,1084,4.819,1085,4.289,1086,4.819]],["title/controllers/DeleteTimeSlotController.html",[119,1.173,1087,3.825]],["body/controllers/DeleteTimeSlotController.html",[0,0.357,3,0.05,4,0.05,5,0.043,10,0.114,15,0.747,17,1.202,20,0.24,21,0.007,24,0.842,26,0.298,34,0.182,42,0.534,43,0.38,44,0.545,48,0.184,50,0.05,51,1.153,55,0.004,56,0.004,82,2.401,91,1.438,93,0.873,111,1.975,116,1.078,119,1.177,121,1.615,127,2.415,129,1.869,132,2.807,133,2.154,134,1.737,137,1.716,143,1.956,146,0.873,147,1.869,148,2.678,149,2.919,150,2.56,151,1.912,152,2.002,153,2.451,154,1.956,155,2.678,156,1.912,157,2.05,158,1.522,161,2.002,162,1.647,172,1.956,173,1.829,174,2.678,175,2.101,189,2.002,190,2.002,191,2.05,194,0.937,198,2.35,199,1.869,200,1.956,210,1.933,212,2.21,214,1.023,241,1.242,270,2.451,449,3.195,450,3.62,452,3.841,457,4.488,460,3.735,461,3.383,462,3.069,471,3.587,711,2.473,770,2.728,774,5.283,777,3.287,778,2.551,781,2.551,785,2.333,859,2.636,1067,3.841,1069,3.214,1072,4.029,1073,3.214,1074,3.214,1077,3.841,1078,3.383,1081,3.587,1087,5.26,1088,6.435,1089,6.53,1090,4.7,1091,6.023,1092,4.7,1093,4.182,1094,4.182,1095,4.182,1096,4.7]],["title/controllers/DeleteUserController.html",[119,1.173,1097,3.825]],["body/controllers/DeleteUserController.html",[0,0.373,3,0.054,4,0.054,5,0.046,10,0.121,15,0.779,17,1.242,20,0.245,21,0.007,26,0.317,34,0.194,42,0.569,43,0.405,44,0.581,48,0.186,50,0.054,51,0.897,55,0.005,56,0.005,91,1.532,93,0.93,116,1.148,119,1.254,121,1.72,127,2.479,129,1.991,132,2.93,133,2.294,134,1.702,137,1.828,143,2.083,146,0.93,147,1.991,148,2.795,149,3.015,150,2.671,151,2.036,152,2.132,153,2.558,154,2.083,155,2.795,156,2.036,157,2.183,158,1.622,161,2.132,162,1.755,172,2.083,173,1.948,174,2.795,175,2.237,189,2.132,190,2.132,191,2.183,194,0.998,198,2.452,199,1.991,200,2.083,210,1.503,214,1.089,241,1.323,270,2.558,711,2.634,770,2.906,774,5.831,777,3.431,778,2.717,781,2.717,785,2.485,798,3.763,839,3.269,848,3.269,849,3.423,859,2.807,1069,3.423,1072,3.134,1073,3.423,1074,3.423,1081,3.82,1097,5.489,1098,6.717,1099,5.006,1100,6.717,1101,5.006,1102,6.717,1103,5.006,1104,5.006,1105,5.006,1106,5.006,1107,5.006]],["title/classes/Encrypter.html",[0,0.26,919,3.056]],["body/classes/Encrypter.html",[0,0.276,2,0.716,3,0.053,4,0.053,5,0.046,10,0.121,11,0.501,12,1.284,15,0.776,20,0.219,21,0.007,22,1.009,23,0.974,26,0.424,34,0.293,36,0.997,42,0.76,43,0.541,44,0.776,48,0.131,50,0.053,55,0.005,56,0.005,194,1.506,210,2.427,214,1.758,363,2.721,582,2.888,583,2.888,919,4.368,1108,4.975,1109,9.137,1110,7.557,1111,6.689,1112,6.689,1113,6.689,1114,6.689,1115,6.689,1116,4.975,1117,6.689,1118,9.019,1119,8.683,1120,4.975,1121,6.689,1122,5.817,1123,6.689,1124,4.975,1125,5.952,1126,6.689,1127,4.975,1128,4.975,1129,6.689,1130,6.689,1131,6.689,1132,6.689,1133,7.557,1134,4.975,1135,4.975,1136,4.975,1137,4.975,1138,4.975,1139,4.975,1140,4.975,1141,4.975,1142,4.975,1143,4.975,1144,4.975]],["title/classes/ErrorMessageRO.html",[0,0.26,174,1.948]],["body/classes/ErrorMessageRO.html",[0,0.458,2,0.859,3,0.064,4,0.064,5,0.055,10,0.145,11,0.564,20,0.269,21,0.007,34,0.231,36,0.957,48,0.148,50,0.081,55,0.005,56,0.005,93,1.108,111,2.026,115,3.382,116,1.368,158,1.932,174,3.133,194,1.868,198,2.178,294,2.961,684,3.88,789,3.238,793,3.962,794,4.875,1145,5.308,1146,7.302,1147,5.965,1148,4.875,1149,4.552,1150,4.875]],["title/classes/ErrorRO.html",[0,0.26,1146,3.825]],["body/classes/ErrorRO.html",[0,0.433,2,0.763,3,0.057,4,0.057,5,0.049,10,0.129,11,0.522,20,0.273,21,0.007,34,0.334,36,0.985,48,0.137,50,0.075,55,0.005,56,0.005,93,1.599,111,2.229,115,3.29,116,1.215,158,1.716,174,2.204,194,1.922,198,2.847,294,3.871,684,2.491,789,4.673,793,3.67,794,4.742,1145,4.713,1146,6.771,1148,6.372,1149,5.949,1150,6.372,1151,5.297,1152,5.297,1153,5.297,1154,5.297,1155,5.297]],["title/classes/ExceptionsFilter.html",[0,0.26,1156,4.165]],["body/classes/ExceptionsFilter.html",[0,0.262,2,0.678,3,0.05,4,0.05,5,0.043,8,1.935,10,0.114,11,0.483,15,0.748,16,2.335,20,0.137,21,0.007,22,0.955,23,0.922,24,1.317,26,0.299,34,0.25,42,0.535,43,0.381,44,0.546,48,0.144,50,0.05,55,0.004,56,0.004,128,1.684,142,2.105,146,0.875,194,1.464,198,3.021,210,2.674,294,3.647,310,3.849,363,2.988,604,4.19,605,3.593,617,6.537,636,3.988,637,3.008,684,3.031,748,2.948,757,3.849,767,4.264,813,6.004,827,5.158,1026,4.917,1046,4.034,1148,3.849,1149,3.593,1150,3.849,1156,5.734,1157,4.709,1158,7.346,1159,6.444,1160,4.709,1161,6.444,1162,7.899,1163,4.709,1164,7.346,1165,4.709,1166,6.444,1167,4.709,1168,4.709,1169,4.709,1170,6.444,1171,4.709,1172,4.709,1173,6.444,1174,7.346,1175,4.709,1176,6.444,1177,4.709,1178,7.899,1179,4.709,1180,4.709,1181,4.709,1182,4.709,1183,4.19,1184,4.709,1185,4.709,1186,6.444,1187,4.709,1188,4.709,1189,4.709,1190,4.709,1191,4.709]],["title/injectables/ExportService.html",[626,1.432,1192,3.369]],["body/injectables/ExportService.html",[0,0.122,3,0.023,4,0.023,5,0.043,10,0.163,11,0.271,12,1.301,14,2.688,15,0.419,17,0.754,20,0.203,21,0.007,22,0.445,23,0.707,24,0.647,26,0.444,34,0.281,36,0.545,37,2.122,42,0.796,43,0.567,44,0.778,45,0.786,48,0.172,50,0.023,51,0.393,55,0.003,56,0.003,82,1.845,127,1.632,128,3.168,134,1.121,144,0.957,146,0.407,159,3.892,187,4.827,188,1.579,193,1.105,194,1.527,210,2.522,214,1.459,241,2.067,294,1.089,302,2.26,303,1.273,309,1.273,326,5.202,341,3.211,363,0.892,435,2.599,450,1.872,468,3.483,470,1.579,474,2.599,482,1.373,490,1.674,492,1.674,591,2.77,626,1.105,628,0.98,637,2.031,684,1.032,788,3.483,827,1.432,852,2.756,865,3.483,867,3.24,868,2.671,869,2.494,940,3.648,972,4.841,980,5.694,992,1.032,1002,1.952,1030,1.952,1070,4.037,1149,2.756,1192,2.599,1193,2.194,1194,3.611,1195,4.602,1196,4.602,1197,4.602,1198,4.602,1199,4.602,1200,4.602,1201,5.117,1202,4.586,1203,5.117,1204,5.117,1205,4.827,1206,3.611,1207,3.611,1208,2.194,1209,2.194,1210,2.194,1211,2.194,1212,3.339,1213,2.194,1214,2.194,1215,3.339,1216,2.194,1217,2.194,1218,2.194,1219,4.747,1220,2.194,1221,3.483,1222,2.194,1223,5.247,1224,2.194,1225,2.194,1226,3.611,1227,3.213,1228,2.951,1229,3.147,1230,1.952,1231,1.793,1232,1.952,1233,1.674,1234,1.793,1235,2.194,1236,1.952,1237,1.793,1238,1.952,1239,1.793,1240,1.952,1241,1.793,1242,2.194,1243,1.952,1244,1.793,1245,1.952,1246,1.952,1247,1.952,1248,1.952,1249,1.952,1250,1.952,1251,1.952,1252,1.793,1253,2.194,1254,2.194,1255,2.194,1256,2.194,1257,2.194,1258,2.194,1259,7.823,1260,2.194,1261,2.194,1262,2.194,1263,2.194,1264,2.194,1265,4.602,1266,2.194,1267,2.194,1268,2.194,1269,2.194,1270,1.793,1271,2.194,1272,2.194,1273,2.194,1274,2.194,1275,2.194,1276,2.194,1277,2.194,1278,2.194,1279,2.194,1280,2.194,1281,2.194,1282,2.194,1283,2.194,1284,2.194,1285,2.194,1286,3.611,1287,1.952,1288,2.194,1289,1.952,1290,1.952,1291,2.194,1292,2.194,1293,2.194,1294,2.194,1295,2.194,1296,2.194,1297,2.194,1298,2.194,1299,2.194,1300,2.194,1301,2.194,1302,2.194,1303,2.194,1304,2.194,1305,2.194,1306,2.194,1307,1.674,1308,1.952,1309,2.194,1310,1.793,1311,2.194,1312,2.194,1313,1.432,1314,2.194,1315,2.194,1316,2.194,1317,2.194,1318,1.793,1319,1.5,1320,4.602,1321,7.966,1322,2.194,1323,1.952,1324,2.194,1325,2.194,1326,2.194,1327,1.952,1328,2.194,1329,2.194,1330,2.194,1331,1.793,1332,2.194,1333,2.194,1334,2.194,1335,4.095,1336,1.579,1337,2.194,1338,2.194,1339,2.194,1340,2.194,1341,2.194]],["title/controllers/ExportUserDataController.html",[119,1.173,1342,3.825]],["body/controllers/ExportUserDataController.html",[0,0.344,3,0.047,4,0.047,5,0.041,10,0.108,12,1.051,15,0.718,17,1.166,20,0.206,21,0.007,26,0.392,32,1.394,34,0.172,37,1.765,42,0.504,43,0.359,44,0.515,48,0.186,50,0.076,51,1.109,55,0.004,56,0.004,89,1.928,91,1.358,93,0.824,116,1.018,119,1.112,121,1.524,127,2.356,128,2.897,129,1.765,134,1.917,137,1.62,141,2.575,142,1.983,143,1.846,146,0.824,147,1.765,148,2.573,149,2.46,150,2.46,151,1.805,152,1.89,153,2.355,154,1.846,155,2.573,156,1.805,157,1.935,158,1.437,161,1.89,162,1.555,170,2.203,171,2.335,172,1.846,173,1.727,189,1.89,190,1.89,191,1.935,193,1.358,194,1.233,198,1.62,199,1.765,200,1.846,202,2.335,210,1.857,212,2.087,214,0.965,241,1.173,270,2.355,309,2.575,708,3.034,777,3.159,778,2.409,785,2.203,848,2.897,849,3.034,859,2.488,869,1.524,1042,3.626,1342,5.055,1343,6.185,1344,4.437,1345,7.119,1346,4.437,1347,6.294,1348,3.948,1349,4.437,1350,4.437,1351,4.286,1352,3.386,1353,3.993,1354,2.897,1355,3.626,1356,3.948,1357,3.626,1358,3.034,1359,4.437,1360,4.437,1361,4.437,1362,4.437,1363,4.437,1364,4.437,1365,4.437,1366,3.386,1367,5.055,1368,3.948,1369,4.437,1370,4.437,1371,3.948,1372,3.386,1373,3.626,1374,3.948]],["title/classes/ExportUserDataDTO.html",[0,0.26,1347,3.825]],["body/classes/ExportUserDataDTO.html",[0,0.372,2,0.964,3,0.072,4,0.072,5,0.062,10,0.162,11,0.606,20,0.234,21,0.007,34,0.259,36,0.922,48,0.132,50,0.072,55,0.006,56,0.006,89,2.708,93,1.243,94,3.069,95,4.693,97,4.13,98,2.723,103,5.061,115,2.952,116,1.536,134,1.699,1347,6.608,1375,8.085,1376,6.695,1377,6.695]],["title/interfaces/File.html",[5,0.043,1378,2.391]],["body/interfaces/File.html",[3,0.071,4,0.071,5,0.08,10,0.161,11,0.603,20,0.261,21,0.007,22,1.347,36,0.957,50,0.071,55,0.006,56,0.006,111,2.329,328,6.152,1378,3.393,1379,4.157,1380,6.641,1381,9.477,1382,6.866,1383,8.997]],["title/entities/FileCategoryEntity.html",[864,1.948,1384,3.369]],["body/entities/FileCategoryEntity.html",[0,0.304,3,0.059,4,0.059,5,0.073,10,0.133,11,0.534,20,0.272,21,0.007,26,0.347,28,3.64,34,0.337,36,0.728,48,0.14,49,1.17,50,0.059,55,0.005,56,0.005,60,3.151,62,3.035,93,1.616,111,2.258,241,2.094,242,3.537,248,3.108,251,3.441,294,3.933,337,6.475,486,3.64,601,3.07,788,5.173,864,2.278,867,4.047,870,4.653,872,3.426,875,3.426,889,4.46,890,4.46,892,3.426,893,3.743,1212,5.253,1384,5.129,1385,8.919,1386,5.474,1387,5.474,1388,5.474,1389,4.474,1390,7.125,1391,5.474,1392,5.474,1393,5.474,1394,5.437,1395,5.474,1396,5.474]],["title/classes/FileCategoryRepository.html",[0,0.26,1397,3.825]],["body/classes/FileCategoryRepository.html",[0,0.302,2,0.783,3,0.058,4,0.058,5,0.05,10,0.132,11,0.532,15,0.823,20,0.206,21,0.007,22,1.103,23,1.065,24,1.5,26,0.45,34,0.306,42,0.806,43,0.574,44,0.823,45,1.821,48,0.155,49,1.163,50,0.058,55,0.005,56,0.005,85,3.251,146,1.01,194,1.574,214,1.544,636,4.286,637,3.187,688,3.851,974,4.754,975,6.454,976,4.943,979,4.444,980,5.573,982,5.239,983,4.149,985,3.273,988,4.149,989,3.979,990,4.441,991,3.426,992,3.336,993,4.444,1384,3.914,1397,5.798,1398,8.369,1399,5.437,1400,7.094,1401,5.437,1402,5.437,1403,5.437,1404,4.838,1405,4.444,1406,5.437]],["title/injectables/FileCategoryService.html",[626,1.432,1407,3.201]],["body/injectables/FileCategoryService.html",[0,0.306,3,0.059,4,0.059,5,0.051,10,0.134,12,0.936,15,0.83,17,1.464,20,0.207,21,0.007,24,0.988,26,0.454,34,0.308,36,0.812,42,0.813,43,0.579,44,0.83,45,1.83,48,0.165,50,0.059,55,0.005,56,0.005,128,2.56,144,2.404,145,2.463,146,1.023,184,2.526,193,2.19,194,1.098,208,2.404,214,1.729,241,1.456,294,3.553,626,2.19,628,2.463,976,3.45,989,3.09,1384,3.967,1397,7.303,1404,4.903,1405,4.504,1407,4.894,1408,8.412,1409,5.51,1410,8.412,1411,6.368,1412,5.51,1413,5.51,1414,5.51,1415,6.368,1416,5.51,1417,5.51,1418,5.51,1419,5.51,1420,5.51,1421,5.51,1422,5.51,1423,5.51,1424,5.51,1425,5.51]],["title/entities/FileEntity.html",[864,1.948,1212,2.93]],["body/entities/FileEntity.html",[0,0.235,3,0.045,4,0.045,5,0.055,10,0.103,11,0.449,20,0.278,21,0.007,26,0.56,28,3.059,29,3.304,34,0.347,36,0.887,48,0.136,49,0.906,50,0.045,55,0.004,56,0.004,60,3.379,62,2.551,93,1.661,105,3.359,111,2.224,127,2.436,134,1.673,162,1.486,241,1.835,242,2.973,247,3.77,248,3.785,249,2.973,251,2.893,302,4.984,324,6.18,325,5.329,326,4.535,327,5.329,328,4.749,486,3.059,601,2.377,864,1.764,867,3.548,869,2.386,870,4.535,872,2.653,875,2.653,883,3.911,884,3.234,887,4.348,889,3.749,890,3.749,892,4.348,893,4.749,1212,3.749,1310,5.676,1382,5.3,1384,5.732,1394,3.234,1405,3.464,1426,4.238,1427,4.238,1428,5.989,1429,4.238,1430,4.238,1431,4.238,1432,4.238,1433,4.238,1434,5.989,1435,4.238,1436,4.238,1437,5.989,1438,4.238,1439,5.989,1440,4.238,1441,4.238,1442,4.238]],["title/classes/FileIdRO.html",[0,0.26,1443,3.825]],["body/classes/FileIdRO.html",[0,0.45,2,0.966,3,0.072,4,0.072,5,0.062,10,0.163,11,0.607,20,0.235,21,0.007,34,0.26,36,0.827,48,0.159,50,0.072,55,0.006,56,0.006,93,1.247,111,2.179,115,2.957,116,1.54,158,2.175,241,2.298,789,3.644,793,4.262,794,4.262,925,5.487,926,5.487,1443,6.619,1444,8.099]],["title/controllers/FileListController.html",[119,1.173,1445,3.825]],["body/controllers/FileListController.html",[0,0.364,3,0.052,4,0.052,5,0.077,10,0.117,12,1.114,15,0.761,17,1.219,20,0.242,21,0.007,26,0.306,32,1.088,34,0.187,42,0.549,43,0.391,44,0.56,48,0.186,50,0.052,51,0.866,55,0.005,56,0.005,91,1.478,93,0.897,116,1.108,119,1.21,121,1.659,127,2.442,129,1.921,132,2.859,133,2.213,134,1.564,137,1.763,143,2.009,146,0.897,147,1.921,148,2.728,149,2.96,150,2.607,151,1.964,152,2.057,153,2.497,154,2.009,155,2.728,156,1.964,157,2.106,158,1.564,161,2.057,162,1.693,172,2.009,173,1.879,174,2.728,175,2.158,189,2.057,190,2.057,191,2.106,193,1.478,194,1.307,198,2.394,199,1.921,200,2.009,210,1.45,214,1.051,270,2.497,304,4.104,335,5.833,786,6.083,788,3.153,929,4.297,933,3.947,934,4.297,938,3.685,1070,4.48,1071,3.685,1075,3.947,1076,3.947,1307,3.685,1308,4.297,1313,3.153,1407,5.089,1445,5.358,1446,6.555,1447,6.555,1448,4.829,1449,4.829,1450,4.829,1451,3.947,1452,3.947,1453,6.555,1454,4.829,1455,4.829,1456,4.829,1457,4.829,1458,4.829]],["title/modules/FileModule.html",[554,2.042,562,3.056]],["body/modules/FileModule.html",[0,0.284,3,0.055,4,0.055,5,0.047,21,0.007,48,0.186,50,0.055,55,0.005,56,0.005,121,2.343,146,0.951,302,3.205,554,2.974,556,2.695,557,3.588,562,6.061,569,3.824,570,2.872,571,2.78,573,2.972,582,3.958,583,2.972,596,3.083,597,2.347,623,3.083,624,3.083,625,3.958,720,4.105,729,4.269,730,3.205,949,5.243,952,5.204,956,4.556,958,3.908,1070,5.673,1071,3.908,1407,6.444,1445,6.266,1451,4.185,1452,4.185,1459,4.556,1460,4.556,1461,4.556,1462,5.12,1463,6.266,1464,5.12,1465,6.819,1466,6.819,1467,6.819,1468,5.12,1469,6.819,1470,5.12,1471,5.12,1472,5.12,1473,7.667,1474,6.819,1475,7.667,1476,5.12]],["title/classes/FileRO.html",[0,0.26,791,3.825]],["body/classes/FileRO.html",[0,0.393,2,0.779,3,0.058,4,0.058,5,0.05,10,0.131,11,0.53,20,0.275,21,0.007,26,0.5,34,0.345,36,0.998,48,0.139,50,0.058,55,0.005,56,0.005,93,1.651,111,2.248,115,3.308,116,1.242,158,1.754,241,2.082,328,5.388,789,4.827,791,5.782,793,3.723,794,4.767,867,4.025,1307,6.013,1382,6.013,1477,5.413,1478,5.413,1479,5.413,1480,5.413,1481,5.413,1482,5.413,1483,5.413]],["title/classes/FileRepository.html",[0,0.26,1205,3.369]],["body/classes/FileRepository.html",[0,0.277,2,0.718,3,0.053,4,0.053,5,0.046,10,0.121,11,0.502,12,1.285,15,0.777,20,0.219,21,0.007,22,1.011,23,0.976,24,1.45,26,0.48,34,0.313,36,0.888,42,0.86,43,0.612,44,0.878,45,1.89,48,0.149,49,1.066,50,0.053,55,0.005,56,0.005,85,3.07,146,0.926,194,1.508,214,1.646,290,3.805,302,3.121,351,4.075,637,3.08,688,3.636,869,2.899,974,4.554,975,5.475,976,4.193,979,5.475,980,5.439,982,4.193,983,5.112,985,3.001,988,3.805,989,3.757,990,4.193,991,3.235,992,3.15,993,4.075,1205,4.822,1212,3.121,1484,4.986,1485,6.731,1486,6.698,1487,4.986,1488,4.436,1489,4.986,1490,7.197,1491,4.986,1492,4.986,1493,4.436,1494,4.986,1495,4.986,1496,4.986,1497,4.436,1498,4.986,1499,4.986,1500,4.075]],["title/injectables/FileService.html",[626,1.432,1070,2.818]],["body/injectables/FileService.html",[0,0.146,3,0.028,4,0.028,5,0.081,10,0.064,11,0.314,12,1.229,15,0.486,17,1.471,20,0.23,21,0.007,22,0.535,23,0.516,24,1.518,26,0.513,34,0.314,36,0.939,42,0.901,43,0.641,44,0.897,45,1.842,48,0.164,49,0.563,50,0.028,51,0.472,55,0.003,56,0.003,111,1.857,128,2.318,137,0.962,142,1.178,144,1.15,145,1.178,146,0.489,184,1.208,185,2.204,186,1.478,193,1.282,194,1.442,208,3.374,214,1.725,241,1.378,326,5.176,328,1.802,597,1.208,598,3.026,626,1.282,628,1.178,637,2.262,645,3.718,659,2.735,660,1.897,680,3.015,684,3.403,686,3.197,688,2.83,697,2.345,711,1.387,827,1.721,869,2.871,976,1.65,989,1.478,990,2.622,991,2.023,992,3.048,998,4.261,1011,2.154,1022,2.011,1040,1.802,1064,3.727,1070,2.522,1205,5.208,1212,3.718,1228,3.424,1229,3.565,1252,2.154,1307,2.011,1310,4.854,1318,2.154,1336,1.897,1382,2.011,1485,4.639,1488,2.345,1490,3.727,1493,2.345,1501,2.635,1502,4.189,1503,4.189,1504,4.189,1505,5.213,1506,3.727,1507,4.189,1508,2.635,1509,5.213,1510,5.213,1511,5.213,1512,4.189,1513,3.727,1514,4.189,1515,2.635,1516,2.635,1517,2.635,1518,4.189,1519,2.635,1520,4.189,1521,2.635,1522,4.189,1523,2.635,1524,2.635,1525,2.635,1526,4.189,1527,2.635,1528,4.189,1529,2.635,1530,4.189,1531,3.424,1532,2.635,1533,2.154,1534,2.635,1535,2.635,1536,2.635,1537,2.635,1538,2.635,1539,2.635,1540,2.635,1541,2.635,1542,2.635,1543,2.635,1544,2.635,1545,2.635,1546,2.635,1547,2.635,1548,2.635,1549,2.635,1550,2.635,1551,2.635,1552,2.635,1553,2.635,1554,2.635,1555,2.635,1556,2.635,1557,2.635,1558,2.635,1559,2.635,1560,2.635,1561,2.635,1562,2.635,1563,2.635,1564,2.635,1565,2.635,1566,2.635,1567,4.189,1568,2.635,1569,4.189,1570,2.635,1571,2.635,1572,2.635,1573,2.635,1574,4.639,1575,5.213,1576,2.635,1577,2.635,1578,2.635,1579,2.635,1580,2.635,1581,2.635,1582,2.154,1583,4.189,1584,2.635,1585,2.635,1586,2.635,1587,2.345,1588,2.635,1589,2.635,1590,2.635,1591,2.635,1592,2.635,1593,2.635,1594,2.635]],["title/controllers/GetAccessTokenController.html",[119,1.173,718,3.825]],["body/controllers/GetAccessTokenController.html",[0,0.396,3,0.059,4,0.059,5,0.051,10,0.133,15,0.827,17,1.298,20,0.159,21,0.007,26,0.347,34,0.212,42,0.622,43,0.443,44,0.635,48,0.181,50,0.059,51,0.981,55,0.005,56,0.005,91,1.675,93,1.017,116,1.255,119,1.371,121,1.881,128,1.958,129,2.177,137,1.999,141,3.177,142,2.447,146,1.017,147,2.177,149,2.834,150,2.834,157,2.388,158,1.773,170,2.717,171,2.881,194,1.091,198,1.999,199,2.177,202,2.881,210,1.644,214,1.191,270,2.085,634,5.173,650,3.94,718,5.823,732,7.29,781,2.971,811,4.177,982,4.46,1595,7.125,1596,5.474,1597,7.922,1598,5.474,1599,6.858,1600,4.871,1601,5.474,1602,5.474,1603,5.474,1604,5.474,1605,5.474,1606,5.474,1607,5.474,1608,5.474,1609,4.474,1610,5.474,1611,4.871,1612,4.871,1613,5.474,1614,5.474,1615,5.474,1616,5.474,1617,5.474,1618,5.474,1619,5.474]],["title/classes/GetAccessTokenDTO.html",[0,0.26,1599,3.825]],["body/classes/GetAccessTokenDTO.html",[0,0.361,2,0.936,3,0.07,4,0.07,5,0.06,10,0.158,11,0.595,20,0.259,21,0.007,34,0.308,36,0.973,48,0.128,50,0.07,55,0.006,56,0.006,89,2.674,93,1.475,94,3.64,115,3.131,116,1.491,621,7.009,732,7.009,1599,6.491,1620,8.575,1621,6.501,1622,6.501,1623,6.501]],["title/controllers/GetListOfTimeSlotsController.html",[119,1.173,1624,3.825]],["body/controllers/GetListOfTimeSlotsController.html",[0,0.273,3,0.053,4,0.053,5,0.045,10,0.119,12,0.835,15,0.77,17,1.23,20,0.243,21,0.007,26,0.312,32,1.108,34,0.191,42,0.559,43,0.398,44,0.57,48,0.184,50,0.053,51,0.881,55,0.005,56,0.005,93,0.913,116,1.127,119,1.662,121,1.689,127,2.46,129,1.955,132,2.894,133,2.253,134,1.689,137,1.795,143,2.046,146,0.913,147,1.955,148,2.761,149,2.987,150,2.639,151,1.999,152,2.094,153,2.527,154,2.046,155,2.761,156,1.999,161,2.094,162,1.723,172,2.046,173,1.913,174,2.761,175,2.197,189,2.094,190,2.094,191,2.144,193,1.504,194,0.98,198,2.423,199,1.955,200,2.046,210,1.476,212,2.312,214,1.07,270,2.527,304,4.153,449,3.294,450,3.597,457,4.077,460,4.359,461,3.539,462,3.21,464,4.018,471,3.751,933,4.018,938,6.136,1219,4.374,1624,5.423,1625,6.635,1626,4.916,1627,6.635,1628,4.916,1629,5.731,1630,5.423,1631,4.916,1632,4.916,1633,4.374,1634,4.916,1635,4.374,1636,4.916,1637,4.916,1638,4.916,1639,4.916,1640,4.916]],["title/controllers/GetUserController.html",[119,1.173,1641,3.825]],["body/controllers/GetUserController.html",[0,0.287,3,0.055,4,0.055,5,0.048,10,0.125,12,1.165,15,0.796,17,1.261,20,0.223,21,0.007,26,0.327,34,0.2,37,2.054,42,0.587,43,0.418,44,0.599,48,0.185,50,0.055,51,0.925,55,0.005,56,0.005,91,1.58,93,0.959,116,1.184,119,1.293,121,1.774,127,2.51,129,2.054,134,1.844,137,1.885,143,2.149,146,0.959,147,2.054,148,2.853,149,2.727,150,2.727,151,2.1,152,2.199,153,2.611,154,2.149,155,2.853,156,2.1,161,2.199,162,1.81,172,2.149,173,2.009,189,2.199,190,2.199,191,2.252,193,1.58,194,1.367,198,1.885,199,2.054,200,2.149,210,1.551,214,1.124,270,2.611,591,4.128,775,4.179,776,4.22,798,3.822,839,3.372,848,3.372,849,3.531,1313,3.372,1641,5.604,1642,6.857,1643,5.163,1644,6.857,1645,5.163,1646,5.163,1647,5.163,1648,5.163,1649,5.604,1650,5.163,1651,4.595,1652,4.595,1653,5.163,1654,5.163,1655,4.22,1656,5.163,1657,5.163]],["title/interfaces/ICognito.html",[666,3.825,1378,2.391]],["body/interfaces/ICognito.html",[3,0.073,4,0.073,5,0.063,10,0.165,11,0.611,20,0.253,21,0.007,36,0.987,43,0.66,50,0.073,55,0.006,56,0.006,89,2.826,666,6.663,693,8.065,1378,3.467,1379,4.249,1658,6.788,1659,8.065]],["title/interfaces/IContactData.html",[1378,2.391,1660,4.165]],["body/interfaces/IContactData.html",[3,0.063,4,0.063,5,0.054,10,0.142,11,0.557,20,0.271,21,0.007,26,0.546,36,0.993,43,0.784,50,0.063,55,0.005,56,0.005,88,4.395,89,2.683,90,3.208,91,2.632,92,3.943,100,2.986,111,2.443,241,2.274,869,2.956,1378,2.989,1379,3.663,1660,6.618,1661,5.851,1662,4.465]],["title/interfaces/IProfileData.html",[1378,2.391,1663,4.165]],["body/interfaces/IProfileData.html",[3,0.047,4,0.047,5,0.04,10,0.106,11,0.458,20,0.278,21,0.007,26,0.485,36,0.998,43,0.799,50,0.047,55,0.004,56,0.004,90,2.851,91,2.34,92,3.505,100,3.468,111,2.39,355,4.439,400,4.604,486,4.263,869,2.627,1378,2.23,1379,2.733,1662,3.332,1663,5.442,1664,4.366,1665,4.604,1666,4.787,1667,5.23,1668,4.604,1669,5.23,1670,4.787,1671,5.23,1672,4.787,1673,5.23,1674,4.787,1675,4.787,1676,5.23,1677,4.787,1678,4.787]],["title/interfaces/ITimeSlotData.html",[1378,2.391,1679,4.165]],["body/interfaces/ITimeSlotData.html",[3,0.066,4,0.066,5,0.057,10,0.149,11,0.575,20,0.273,21,0.007,36,0.854,43,0.763,48,0.121,50,0.066,55,0.005,56,0.005,88,4.473,100,3.053,111,2.356,241,2.314,457,3.335,482,5.482,486,4.695,659,4.012,869,3.009,1378,3.138,1379,3.846,1662,4.688,1679,6.825,1680,6.143,1681,5.853,1682,6.143,1683,6.143,1684,4.422]],["title/interfaces/IUserData.html",[1378,2.391,1685,4.165]],["body/interfaces/IUserData.html",[3,0.076,4,0.076,5,0.066,10,0.173,11,0.629,20,0.206,21,0.007,36,0.911,43,0.679,50,0.076,55,0.006,56,0.006,89,2.871,1378,3.638,1379,4.458,1662,5.435,1685,7.465,1686,7.122]],["title/controllers/LogoutController.html",[119,1.173,719,3.825]],["body/controllers/LogoutController.html",[0,0.294,3,0.057,4,0.057,5,0.049,10,0.128,12,1.323,15,0.808,17,1.276,20,0.153,21,0.007,26,0.335,34,0.205,37,3.098,42,0.601,43,0.428,44,0.613,48,0.18,50,0.057,51,1.396,55,0.005,56,0.005,91,1.617,93,0.982,98,1.78,116,1.212,119,1.324,121,1.816,127,2.533,129,2.102,134,1.636,141,3.068,143,2.199,146,0.982,147,2.102,148,2.898,149,2.77,150,2.77,162,1.853,172,2.199,173,2.057,191,2.305,193,1.617,194,1.552,198,1.93,199,2.102,212,2.486,270,2.013,363,2.832,719,5.692,798,3.866,804,3.805,811,4.033,869,1.816,1313,3.451,1351,4.688,1366,4.033,1600,4.703,1611,4.703,1612,4.703,1665,3.182,1687,5.285,1688,8.278,1689,5.285,1690,5.285,1691,5.285,1692,5.285,1693,5.085,1694,5.285,1695,4.033,1696,4.703,1697,4.703,1698,5.285,1699,5.285,1700,4.703,1701,5.285,1702,5.285]],["title/classes/MessageConsumer.html",[0,0.26,1703,3.825]],["body/classes/MessageConsumer.html",[0,0.232,2,0.602,3,0.045,4,0.045,5,0.039,10,0.101,11,0.444,15,0.688,17,1.441,20,0.251,21,0.007,26,0.537,32,1.785,34,0.335,42,0.962,43,0.685,44,0.955,48,0.166,50,0.045,55,0.004,56,0.004,85,2.718,93,1.528,101,5.13,128,1.495,144,1.824,146,0.776,193,1.279,194,1.182,210,1.255,587,3.009,636,3.22,637,2.857,684,2.789,737,6.916,739,5.278,740,5.278,741,5.278,744,3.72,745,8.522,746,3.72,748,4.315,749,3.72,750,3.72,752,3.72,753,3.72,755,3.19,781,2.269,869,2.368,1353,4.614,1354,2.73,1373,4.848,1668,2.517,1703,4.848,1704,4.181,1705,5.931,1706,5.931,1707,5.931,1708,4.181,1709,4.181,1710,4.181,1711,5.931,1712,5.931,1713,4.181,1714,5.931,1715,5.931,1716,4.181,1717,5.931,1718,5.931,1719,4.181,1720,4.181,1721,4.181,1722,4.181,1723,4.526,1724,4.181,1725,3.19,1726,3.417,1727,4.181,1728,4.181,1729,4.181,1730,4.181,1731,4.181,1732,5.931,1733,6.131,1734,4.848,1735,4.181,1736,5.931,1737,5.931]],["title/modules/MessageModule.html",[554,2.042,563,3.056]],["body/modules/MessageModule.html",[0,0.284,3,0.055,4,0.055,5,0.047,21,0.007,48,0.187,50,0.055,55,0.005,56,0.005,121,2.339,146,0.949,450,2.77,554,2.97,556,2.689,557,3.583,561,5.713,563,5.998,564,4.099,565,4.263,567,4.099,568,4.099,569,3.819,570,2.866,571,2.774,573,3.952,578,3.678,579,4.176,582,3.952,583,2.966,584,3.678,588,3.899,591,3.076,592,3.494,593,3.678,596,3.076,597,2.342,623,3.076,624,3.076,625,3.952,720,4.099,721,5.818,729,4.263,730,3.199,763,6.26,765,4.263,775,5.114,1738,4.547,1739,4.547,1740,4.547,1741,5.11,1742,5.11,1743,6.26,1744,6.26,1745,6.059,1746,5.11,1747,6.059,1748,5.11,1749,5.11,1750,6.809,1751,5.11]],["title/injectables/MessageService.html",[626,1.432,775,2.541]],["body/injectables/MessageService.html",[0,0.265,3,0.051,4,0.069,5,0.044,10,0.116,11,0.487,12,1.411,15,0.754,17,1.211,20,0.214,21,0.007,22,0.966,23,0.933,24,1.164,26,0.412,30,2.183,34,0.286,36,0.755,42,0.738,43,0.526,44,0.553,45,1.413,48,0.145,50,0.051,51,0.854,55,0.005,56,0.005,98,1.604,128,2.839,134,1.001,142,2.129,144,2.078,146,0.885,185,2.507,193,1.987,194,1.656,208,2.078,210,1.95,214,1.608,626,1.987,628,2.129,637,3.023,711,3.418,775,3.526,798,4.355,804,3.429,823,3.893,980,4.969,991,2.301,992,2.24,1533,3.893,1752,4.763,1753,7.39,1754,4.763,1755,6.495,1756,5.308,1757,4.763,1758,4.763,1759,5.16,1760,5.779,1761,4.763,1762,4.763,1763,4.763,1764,7.937,1765,6.576,1766,3.893,1767,4.763,1768,4.763,1769,4.763,1770,4.763,1771,6.495,1772,4.763,1773,4.763,1774,4.763,1775,4.763,1776,4.763,1777,4.763,1778,4.763,1779,4.763,1780,5.779,1781,6.495,1782,4.763,1783,4.763]],["title/injectables/MessageService-1.html",[30,1.785,626,1.192,775,2.114]],["body/injectables/MessageService-1.html",[0,0.247,3,0.048,4,0.048,5,0.041,10,0.108,11,0.465,12,1.31,15,0.719,17,1.462,20,0.224,21,0.007,22,0.903,23,0.872,24,1.383,26,0.489,34,0.314,36,0.941,42,0.877,43,0.624,44,0.828,45,1.827,48,0.169,50,0.048,55,0.004,56,0.004,89,1.388,111,1.919,144,1.942,145,1.99,146,0.827,184,2.041,193,1.897,194,1.422,208,2.704,214,1.552,626,1.897,628,1.99,637,2.937,684,2.916,755,4.732,775,3.366,869,2.13,980,4.465,982,4.829,991,2.995,1122,3.206,1582,5.83,1723,3.398,1725,3.398,1726,3.64,1760,5.517,1784,4.453,1785,7.133,1786,6.2,1787,6.2,1788,4.453,1789,7.133,1790,6.2,1791,6.2,1792,4.453,1793,6.347,1794,6.864,1795,7.713,1796,7.713,1797,4.453,1798,6.2,1799,6.2,1800,4.453,1801,6.2,1802,4.453,1803,3.64,1804,3.64,1805,3.963,1806,4.453,1807,4.453,1808,3.963,1809,4.453,1810,6.2,1811,4.453,1812,4.453,1813,4.453,1814,4.453,1815,4.453]],["title/classes/MinutesAsNullableInPositiveInfoTable1633500446819.html",[0,0.26,1816,4.165]],["body/classes/MinutesAsNullableInPositiveInfoTable1633500446819.html",[0,0.297,2,0.769,3,0.057,4,0.057,5,0.049,8,2.106,9,2.744,10,0.13,11,0.525,12,1.505,14,2.69,15,0.814,16,2.816,17,1.452,18,2.458,19,2.41,20,0.241,21,0.007,22,1.423,23,1.373,26,0.445,34,0.322,36,0.717,39,2.458,40,3.248,42,0.797,43,0.567,44,0.814,45,1.809,46,2.458,48,0.105,49,1.142,50,0.057,51,1.257,55,0.005,56,0.005,64,4.39,235,4.071,239,3.933,295,5.732,342,5.352,363,2.853,388,5.352,389,5.352,1816,6.241,1817,8.633,1818,5.343,1819,7.829,1820,5.343,1821,5.343,1822,5.343,1823,5.343,1824,7.013,1825,7.013,1826,7.013]],["title/controllers/NotePositiveInfoController.html",[119,1.173,1827,3.825]],["body/controllers/NotePositiveInfoController.html",[0,0.348,3,0.077,4,0.048,5,0.042,10,0.11,12,1.064,15,0.727,17,1.178,20,0.208,21,0.007,24,0.81,26,0.287,32,1.018,34,0.175,37,1.797,42,0.514,43,0.366,44,0.524,48,0.186,50,0.048,51,1.123,55,0.004,56,0.004,91,1.383,93,0.839,98,1.522,116,1.036,119,1.132,121,1.552,127,2.375,128,2.777,129,1.797,134,1.713,137,1.65,141,2.623,142,2.02,143,1.88,145,2.02,146,0.839,147,1.797,148,2.606,149,2.491,150,2.491,151,1.838,152,1.924,153,2.385,154,1.88,155,2.606,156,1.838,157,1.971,158,1.464,161,1.924,162,1.584,170,2.243,171,2.378,172,1.88,173,1.758,184,2.071,189,1.924,190,1.924,191,1.971,193,1.383,194,1.248,198,1.65,199,1.797,200,1.88,202,2.378,208,1.971,210,1.357,212,2.125,214,0.983,270,2.385,777,3.2,778,2.453,785,3.569,848,2.95,849,3.09,859,2.534,1348,4.021,1351,4.328,1352,3.448,1366,3.448,1693,4.694,1695,3.448,1827,5.119,1828,6.263,1829,6.072,1830,4.518,1831,7.189,1832,4.518,1833,5.923,1834,6.263,1835,6.263,1836,4.518,1837,4.518,1838,4.021,1839,4.021,1840,4.518,1841,4.518,1842,4.518,1843,3.693,1844,4.518,1845,4.021,1846,4.518,1847,4.518,1848,4.021,1849,4.021,1850,4.518,1851,4.021,1852,4.518]],["title/classes/NotePositiveInfoDTO.html",[0,0.26,1833,3.572]],["body/classes/NotePositiveInfoDTO.html",[0,0.372,2,0.964,3,0.072,4,0.072,5,0.062,10,0.162,11,0.606,20,0.234,21,0.007,32,1.822,34,0.259,48,0.132,50,0.072,55,0.006,56,0.006,93,1.243,94,3.069,95,4.693,97,4.13,111,2.427,115,2.952,116,1.536,1829,5.82,1833,6.17,1853,8.085,1854,6.695,1855,7.099,1856,8.085,1857,6.695]],["title/modules/NotificationModule.html",[554,2.042,564,2.818]],["body/modules/NotificationModule.html",[0,0.307,3,0.059,4,0.059,5,0.051,21,0.007,48,0.185,50,0.059,55,0.005,56,0.005,146,1.026,554,3.126,556,2.906,557,3.771,562,5.838,564,5.703,565,5.597,568,4.314,569,4.019,570,3.097,571,2.998,573,4.16,578,3.976,582,4.16,583,3.206,588,4.215,594,4.514,596,3.325,597,2.531,623,3.325,624,3.325,625,4.16,720,4.314,721,4.901,729,4.486,730,3.457,1353,5.345,1858,4.915,1859,4.915,1860,4.915,1861,5.523,1862,5.523,1863,5.523,1864,7.167,1865,5.523,1866,5.523,1867,7.167,1868,5.523]],["title/injectables/NotificationService.html",[626,1.432,1353,2.625]],["body/injectables/NotificationService.html",[0,0.099,3,0.019,4,0.019,5,0.028,10,0.043,11,0.228,12,1.245,15,0.353,17,1.325,20,0.237,21,0.007,22,0.363,23,0.919,24,1.094,26,0.484,30,0.82,32,1.289,34,0.269,36,0.866,42,0.762,43,0.542,44,0.746,45,1.51,48,0.165,50,0.019,51,1.414,55,0.002,56,0.002,82,1.556,89,1.903,90,0.667,98,0.603,100,2.88,111,1.539,127,1.435,128,2.299,134,1.105,142,1.361,144,0.781,145,0.8,146,0.332,162,0.627,184,0.82,185,1.603,186,1.004,193,0.932,194,1.461,198,0.654,208,2.663,210,2.084,212,1.432,214,1.51,241,0.473,309,1.039,326,1.169,328,1.224,341,2.393,363,1.617,571,0.972,597,0.82,598,1.768,626,0.932,628,0.8,637,1.786,645,2.936,669,1.169,684,3.152,708,1.224,711,2.768,757,1.463,765,1.12,767,4.255,775,3.314,776,1.463,785,0.889,788,2.596,798,3.03,804,1.288,823,1.463,827,1.169,869,2.385,980,2.936,982,4.589,1046,1.12,1052,4.366,1070,3.675,1122,2.192,1192,4.394,1205,4.394,1245,1.593,1247,1.593,1252,1.463,1318,2.489,1331,1.463,1335,2.71,1336,1.288,1353,1.708,1355,2.489,1357,1.463,1358,2.083,1367,3.249,1372,2.324,1374,1.593,1533,1.463,1582,1.463,1587,1.593,1668,1.833,1681,5.297,1723,1.366,1733,6.243,1780,3.537,1793,3.537,1794,5.091,1803,1.463,1804,3.834,1805,2.71,1808,1.593,1869,1.79,1870,3.975,1871,3.975,1872,3.975,1873,3.975,1874,3.975,1875,3.045,1876,3.537,1877,3.537,1878,1.593,1879,3.975,1880,5.091,1881,3.975,1882,4.174,1883,3.045,1884,1.79,1885,1.79,1886,1.79,1887,1.79,1888,1.79,1889,3.975,1890,4.691,1891,4.691,1892,1.79,1893,4.691,1894,1.79,1895,1.79,1896,1.79,1897,1.79,1898,3.045,1899,1.79,1900,1.79,1901,1.79,1902,3.045,1903,1.79,1904,3.045,1905,1.79,1906,1.79,1907,1.79,1908,1.79,1909,1.79,1910,1.463,1911,1.79,1912,1.79,1913,1.79,1914,1.79,1915,1.79,1916,1.79,1917,2.324,1918,1.79,1919,1.593,1920,1.79,1921,1.79,1922,1.593,1923,1.366,1924,1.79,1925,1.79,1926,1.463,1927,1.79,1928,2.71,1929,3.975,1930,1.79,1931,1.79,1932,5.259,1933,1.79,1934,3.045,1935,3.975,1936,1.79,1937,3.045,1938,1.79,1939,3.045,1940,1.79,1941,1.79,1942,1.79,1943,1.79,1944,3.045,1945,3.58,1946,1.79,1947,3.045,1948,1.79,1949,1.79,1950,1.79,1951,1.79,1952,1.79,1953,1.79,1954,1.79,1955,1.79,1956,4.174,1957,1.79,1958,1.79,1959,3.045,1960,3.045,1961,3.975,1962,1.79,1963,1.79,1964,1.79,1965,1.79,1966,1.79,1967,1.79,1968,1.79,1969,1.79,1970,1.79,1971,1.79,1972,6.427,1973,1.79,1974,1.79,1975,1.79,1976,1.79,1977,3.045,1978,1.79,1979,1.79,1980,3.045,1981,1.79,1982,1.79,1983,5.259,1984,3.045,1985,1.79,1986,1.79,1987,1.79,1988,1.79,1989,1.79,1990,1.79,1991,1.79,1992,1.79,1993,1.79,1994,1.79,1995,1.79,1996,1.79,1997,1.79,1998,1.79,1999,1.79,2000,3.045,2001,1.79,2002,1.79,2003,1.79,2004,1.593,2005,1.79,2006,1.79,2007,1.79,2008,1.79,2009,1.79,2010,1.79,2011,1.79,2012,1.79,2013,1.366,2014,1.79,2015,1.79,2016,3.045,2017,1.593,2018,1.79,2019,1.79,2020,1.79,2021,1.79,2022,2.71,2023,4.174,2024,3.045,2025,1.79,2026,1.79,2027,3.045,2028,3.975,2029,1.79,2030,3.975,2031,3.045,2032,1.79,2033,1.593,2034,1.593,2035,1.79,2036,1.79,2037,1.79,2038,1.79,2039,1.79,2040,1.463,2041,1.79,2042,1.79,2043,1.79,2044,1.79]],["title/injectables/NumericIdValidationPipe.html",[626,1.432,1072,2.93]],["body/injectables/NumericIdValidationPipe.html",[0,0.312,3,0.06,4,0.06,5,0.052,8,1.689,10,0.136,11,0.543,12,1.363,15,0.841,16,2.55,20,0.21,21,0.007,23,1.42,24,1.008,26,0.357,34,0.311,36,0.82,42,0.639,43,0.455,44,0.652,48,0.167,50,0.06,55,0.005,56,0.005,111,1.951,128,2.012,146,1.044,193,2.455,208,2.453,210,1.689,214,1.224,241,2.24,626,2.219,628,2.514,684,3.987,1026,4.292,1046,3.52,1058,5.22,1072,4.539,2045,8.478,2046,5.624,2047,6.559,2048,5.926,2049,7.251,2050,7.251,2051,6.559,2052,7.544,2053,5.624,2054,6.452,2055,6.452,2056,5.004,2057,5.004,2058,6.452,2059,5.624,2060,5.624,2061,5.004]],["title/classes/PassportStrategy.html",[0,0.26,801,3.825]],["body/classes/PassportStrategy.html",[0,0.243,2,0.629,3,0.047,4,0.047,5,0.04,10,0.106,11,0.458,12,1.591,15,0.709,17,1.156,20,0.248,21,0.007,22,0.886,23,0.855,24,1.265,26,0.388,34,0.339,42,0.695,43,0.495,44,0.507,48,0.168,50,0.047,51,0.783,55,0.004,56,0.004,127,2.34,134,0.917,137,1.594,146,0.811,162,1.53,184,2.001,193,1.871,194,1.771,208,1.904,210,1.836,214,1.331,634,4.994,636,3.831,637,3.178,639,5.442,648,3.885,650,5.505,664,3.332,684,2.053,685,5.442,724,3.568,748,2.733,756,3.885,785,3.504,801,4.998,803,5.769,809,6.805,811,5.836,813,5.769,814,3.885,827,2.851,991,2.109,992,2.053,1336,3.143,1681,4.667,2062,4.366,2063,7.058,2064,8.567,2065,4.366,2066,4.366,2067,6.115,2068,5.442,2069,7.058,2070,4.366,2071,4.366,2072,7.647,2073,4.366,2074,6.115,2075,4.366,2076,4.366,2077,6.115,2078,4.366,2079,6.115,2080,4.366,2081,4.366,2082,4.366,2083,4.366,2084,6.115,2085,4.366,2086,4.366,2087,4.366,2088,4.366,2089,4.366,2090,4.366,2091,4.366,2092,4.366,2093,4.366,2094,4.366,2095,4.366,2096,4.366,2097,4.366]],["title/entities/PositiveInfoEntity.html",[864,1.948,2098,3.369]],["body/entities/PositiveInfoEntity.html",[0,0.237,3,0.046,4,0.046,5,0.039,10,0.104,11,0.451,20,0.281,21,0.007,26,0.561,29,2.295,34,0.347,36,0.774,48,0.118,49,0.914,50,0.046,55,0.004,56,0.004,60,3.459,61,4.925,62,3.896,93,1.664,111,2.039,127,2.318,134,1.678,162,1.498,241,1.844,242,2.991,247,3.788,248,2.628,249,2.991,251,2.91,254,3.772,388,4.598,389,4.598,417,4.925,443,4.925,486,4.578,534,5.362,601,2.398,864,1.779,867,3.565,868,4.05,869,2.397,872,2.676,875,2.676,883,2.792,887,5.331,889,3.772,890,3.772,892,3.772,1855,5.703,2098,4.338,2099,9.061,2100,4.275,2101,5.703,2102,5.703,2103,5.703,2104,5.703,2105,4.275,2106,4.275,2107,4.275,2108,4.275,2109,4.275,2110,4.275,2111,4.275,2112,4.275,2113,3.804,2114,6.026,2115,4.275,2116,4.275,2117,4.925,2118,4.275]],["title/classes/PositiveInfoRepository.html",[0,0.26,1882,3.201]],["body/classes/PositiveInfoRepository.html",[0,0.157,2,0.407,3,0.03,4,0.03,5,0.026,10,0.069,11,0.332,15,0.514,20,0.229,21,0.007,22,0.574,23,0.554,24,1.202,26,0.502,30,2.03,34,0.32,36,0.94,37,2.172,42,0.899,43,0.64,44,0.939,45,1.964,48,0.107,49,0.605,50,0.03,55,0.003,56,0.003,60,2.457,85,2.03,100,2.597,111,2.129,134,1.147,146,0.525,194,1.088,214,1.761,341,3.287,349,5.429,363,3.536,388,2.159,417,2.312,636,2.964,637,2.353,688,1.536,868,1.642,869,2.92,940,1.935,974,3.287,985,1.703,989,2.485,990,1.771,991,2.14,992,2.084,1021,2.159,1183,3.942,1500,2.312,1677,4.453,1882,3.03,2098,2.037,2101,6.29,2102,3.621,2103,6.077,2104,3.621,2119,8.383,2120,2.829,2121,3.942,2122,4.43,2123,3.03,2124,6.178,2125,5.46,2126,5.46,2127,4.43,2128,4.859,2129,5.46,2130,4.43,2131,4.43,2132,2.829,2133,4.43,2134,2.829,2135,6.615,2136,4.43,2137,2.829,2138,3.189,2139,2.829,2140,2.829,2141,2.829,2142,2.829,2143,2.829,2144,2.829,2145,4.43,2146,2.829,2147,2.829,2148,6.707,2149,2.829,2150,2.829,2151,2.829,2152,4.43,2153,2.829,2154,2.312,2155,2.518,2156,2.312,2157,2.829,2158,5.46,2159,5.46,2160,5.46,2161,2.518,2162,5.049,2163,5.049,2164,5.46,2165,5.46,2166,2.829,2167,4.43,2168,2.829,2169,2.829,2170,2.829,2171,4.43,2172,4.43,2173,3.942,2174,4.43,2175,2.829,2176,2.829,2177,2.829,2178,2.829,2179,6.616,2180,2.829,2181,2.312,2182,5.814,2183,6.616,2184,6.077,2185,2.829,2186,7.114,2187,2.829,2188,2.829,2189,2.829]],["title/injectables/PositiveInfoService.html",[626,1.432,1693,3.056]],["body/injectables/PositiveInfoService.html",[0,0.251,3,0.067,4,0.048,5,0.042,10,0.109,11,0.469,12,1.384,15,0.726,17,1.177,20,0.208,21,0.007,22,0.915,23,0.883,24,1.287,26,0.455,34,0.301,36,0.861,42,0.816,43,0.581,44,0.726,45,1.688,48,0.166,50,0.048,51,1.121,55,0.004,56,0.004,128,1.613,144,1.967,145,2.016,146,0.838,184,2.067,193,1.914,194,1.624,208,1.967,210,1.878,214,1.361,241,1.192,363,3.155,450,2.544,460,5.018,462,2.945,591,2.715,626,1.914,628,2.016,637,2.954,868,4.169,869,2.665,982,4.855,992,2.121,1693,4.085,1829,3.247,1833,5.919,1838,4.013,1839,4.013,1849,4.013,1882,5.765,1923,3.442,1926,3.686,2098,3.247,2101,3.686,2102,3.686,2103,3.686,2104,3.686,2123,4.278,2155,4.013,2156,3.686,2190,8.147,2191,4.51,2192,7.182,2193,4.51,2194,6.255,2195,6.255,2196,4.51,2197,4.51,2198,4.51,2199,6.255,2200,4.013,2201,4.51,2202,3.686,2203,4.51,2204,5.113,2205,4.51,2206,4.51,2207,5.566,2208,4.51,2209,4.51,2210,4.51,2211,4.51,2212,4.51,2213,4.51,2214,4.51,2215,4.51,2216,4.51]],["title/entities/ProfileEntity.html",[864,1.948,1215,2.93]],["body/entities/ProfileEntity.html",[0,0.123,3,0.024,4,0.024,5,0.02,10,0.054,11,0.273,20,0.285,21,0.007,26,0.578,27,3.244,28,2.744,29,3.34,32,0.822,33,3.244,34,0.359,36,0.896,43,0.295,48,0.072,49,0.475,50,0.024,55,0.003,56,0.003,60,3.636,62,2.717,74,3.244,75,3.244,90,1.73,91,1.42,92,2.126,93,1.718,100,3.493,105,3.577,107,2.282,111,1.894,112,2.195,127,1.644,134,1.247,241,1.226,242,1.81,247,2.519,248,3.87,249,1.81,250,2.045,251,1.761,254,2.282,270,2.429,278,3.244,280,3.244,281,3.244,282,3.244,355,2.693,371,3.244,372,3.244,373,3.244,374,3.244,375,3.244,400,2.793,401,3.244,405,3.244,406,3.244,407,3.244,408,3.244,409,3.244,425,3.244,426,2.98,427,3.244,483,2.303,486,4.147,601,1.245,864,0.923,867,2.37,868,2.693,869,1.594,870,4.401,872,1.389,875,1.389,881,2.98,883,1.449,887,5.523,889,2.282,890,2.282,891,3.792,892,2.282,1215,2.282,1270,3.792,1323,3.244,1665,2.793,1666,2.904,1667,3.173,1668,2.793,1669,3.173,1670,2.904,1671,3.173,1672,2.904,1673,3.173,1674,2.904,1675,2.904,1676,3.173,1677,2.904,1678,2.904,2113,1.975,2117,2.98,2217,2.219,2218,3.34,2219,3.34,2220,3.34,2221,3.34,2222,3.34,2223,3.34,2224,3.34,2225,3.34,2226,2.219,2227,2.219,2228,2.219,2229,2.219,2230,2.219,2231,2.219,2232,2.98,2233,2.219,2234,2.219,2235,2.219,2236,2.219,2237,2.219,2238,2.219,2239,2.98,2240,2.219,2241,2.219,2242,2.219,2243,2.219,2244,2.219,2245,2.219,2246,2.219,2247,2.219,2248,2.219,2249,2.219,2250,2.219,2251,2.219,2252,2.219,2253,2.98,2254,2.219,2255,2.219,2256,2.219,2257,2.219,2258,3.244,2259,2.219,2260,2.219,2261,2.219,2262,2.219,2263,2.219,2264,2.219,2265,1.814,2266,2.219]],["title/classes/ProfileEntitySubscriber.html",[0,0.26,2267,4.165]],["body/classes/ProfileEntitySubscriber.html",[0,0.255,2,0.66,3,0.049,4,0.049,5,0.042,8,1.9,10,0.111,11,0.474,12,1.231,15,0.734,20,0.226,21,0.007,22,0.93,23,0.898,24,1.134,26,0.52,30,2.102,32,1.033,34,0.318,42,0.823,43,0.586,44,0.906,45,1.7,48,0.142,49,0.981,50,0.049,55,0.004,56,0.004,90,2.359,91,1.936,92,2.9,194,1.444,210,1.377,214,0.998,355,3.673,363,2.947,400,3.809,748,5.13,864,1.908,897,3.748,898,5.529,899,5.529,900,4.829,901,4.829,902,4.829,903,5.961,904,3.748,905,4.829,906,4.081,907,4.829,908,5.961,910,4.829,911,4.829,912,5.961,913,4.081,915,4.829,916,3.5,917,3.5,918,3.5,919,2.994,921,4.829,922,5.529,923,3.5,1215,5.13,1666,3.961,1668,3.809,1670,3.961,1672,3.961,1674,3.961,1675,3.961,1678,5.13,2267,5.631,2268,8.474,2269,4.586,2270,4.586,2271,4.081,2272,6.328,2273,4.586,2274,4.586,2275,6.328,2276,4.586,2277,6.328,2278,4.586]],["title/classes/ProfileRO.html",[0,0.26,2279,3.572]],["body/classes/ProfileRO.html",[0,0.203,2,0.321,3,0.024,4,0.024,5,0.021,10,0.054,11,0.274,20,0.281,21,0.007,23,1.764,26,0.295,34,0.357,36,0.987,43,0.636,48,0.091,50,0.024,55,0.003,56,0.003,90,1.734,91,1.423,92,2.132,93,1.71,94,3.666,100,3.502,111,2.114,115,3.371,116,0.511,158,0.722,305,2.201,355,2.7,363,3.254,400,2.8,483,2.309,789,4.698,793,1.924,794,4.858,867,2.376,868,2.7,869,1.598,1229,2.5,1665,2.8,1666,2.912,1667,3.181,1668,2.8,1669,3.181,1670,2.912,1671,3.181,1672,2.912,1673,3.181,1674,2.912,1675,2.912,1676,3.181,1677,2.912,1678,2.912,1759,2.8,2048,6.641,2218,3.348,2219,3.348,2220,3.348,2221,3.348,2222,3.348,2223,3.348,2224,3.348,2225,3.348,2279,2.79,2280,2.227,2281,7.119,2282,2.227,2283,2.227,2284,2.227,2285,2.227,2286,2.227,2287,2.227,2288,2.227,2289,2.227,2290,2.227,2291,2.227,2292,2.227,2293,2.227,2294,2.227,2295,2.227,2296,2.227,2297,2.227,2298,2.227,2299,2.227,2300,2.227,2301,2.227,2302,2.227,2303,2.227,2304,2.227,2305,2.227,2306,2.227,2307,2.227,2308,2.227,2309,2.227,2310,2.227,2311,2.227,2312,2.227,2313,2.227,2314,2.227,2315,8.125,2316,2.227,2317,3.656]],["title/classes/ProfileRepository.html",[0,0.26,1202,3.201]],["body/classes/ProfileRepository.html",[0,0.253,2,0.655,3,0.049,4,0.049,5,0.042,10,0.11,11,0.472,15,0.73,20,0.209,21,0.007,22,0.923,23,0.891,24,1.294,26,0.458,30,2.885,34,0.317,36,0.902,42,0.82,43,0.584,44,0.903,45,1.886,48,0.142,49,0.973,50,0.049,55,0.004,56,0.004,85,2.885,98,1.533,134,1.323,146,0.845,194,1.438,214,1.694,349,4.804,363,3.325,426,5.145,483,2.26,636,3.918,637,2.965,688,2.471,869,2.479,974,4.345,985,2.74,989,2.553,990,2.849,991,2.199,992,2.141,1021,3.474,1202,4.305,1215,2.849,1234,3.72,1270,3.72,1319,3.113,1665,2.74,1759,2.74,2123,4.305,2135,6.91,2138,4.532,2154,3.72,2161,4.051,2162,5.145,2163,5.145,2179,5.602,2181,3.72,2182,5.145,2183,5.602,2184,5.145,2204,3.72,2253,3.72,2318,4.552,2319,6.295,2320,7.787,2321,6.295,2322,6.295,2323,4.552,2324,6.295,2325,4.552,2326,4.552,2327,4.552,2328,4.552,2329,4.552,2330,4.552,2331,3.72,2332,4.552,2333,4.552,2334,4.552,2335,4.552,2336,4.552,2337,4.552,2338,4.552,2339,4.552,2340,4.552,2341,4.552,2342,4.552,2343,4.552,2344,4.051,2345,4.552,2346,4.552,2347,6.295]],["title/injectables/ProfileService.html",[626,1.432,1351,2.818]],["body/injectables/ProfileService.html",[0,0.288,3,0.055,4,0.055,5,0.048,10,0.126,11,0.515,12,1.396,15,0.798,17,1.264,20,0.224,21,0.007,22,1.052,23,1.015,24,1.383,26,0.489,34,0.318,36,0.788,37,3.069,42,0.877,43,0.624,44,0.798,45,1.788,48,0.168,50,0.055,55,0.005,56,0.005,128,2.939,134,1.089,144,2.262,145,2.318,146,0.963,184,2.376,193,2.104,194,1.637,208,2.262,214,1.496,626,2.104,628,2.318,637,3.129,869,1.781,991,2.504,992,2.439,1024,3.546,1040,3.546,1202,6.008,1215,5.143,1231,4.238,1234,4.238,1249,4.614,1351,4.14,2123,4.702,2138,4.95,2348,5.185,2349,7.715,2350,5.185,2351,6.876,2352,5.185,2353,5.185,2354,5.914,2355,5.185,2356,6.876,2357,5.185,2358,4.238,2359,5.185,2360,5.185,2361,5.185]],["title/modules/QueueModule.html",[554,2.042,565,2.93]],["body/modules/QueueModule.html",[0,0.303,3,0.058,4,0.058,5,0.05,21,0.007,26,0.346,32,1.228,48,0.186,50,0.058,55,0.005,56,0.005,146,1.012,450,2.89,554,3.099,556,2.868,557,3.739,564,4.277,565,5.68,567,4.277,569,3.984,570,3.056,571,2.958,573,3.163,582,4.124,583,3.163,584,3.923,586,4.849,587,3.923,591,3.281,592,3.727,593,3.923,596,3.281,597,2.498,623,3.281,624,3.281,625,4.124,720,4.277,721,5.406,729,4.447,730,3.411,775,5.164,1703,5.807,1725,4.159,1726,4.454,2362,5.449,2363,5.449,2364,5.449,2365,5.449,2366,5.449,2367,7.905,2368,5.449,2369,5.449,2370,5.449,2371,5.449,2372,5.449,2373,5.449,2374,5.449,2375,5.449,2376,5.449]],["title/classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html",[0,0.26,2377,4.165]],["body/classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html",[0,0.295,2,0.766,3,0.057,4,0.057,5,0.049,8,2.1,9,2.739,10,0.129,11,0.524,12,1.503,14,2.684,15,0.811,16,2.812,17,1.45,18,2.451,19,2.403,20,0.25,21,0.007,22,1.419,23,1.37,24,1.253,25,3.408,26,0.526,28,3.573,29,2.663,30,3.205,31,2.554,32,1.576,34,0.322,36,0.544,37,2.782,39,2.451,40,3.245,42,0.795,43,0.566,44,0.811,45,1.806,46,2.451,48,0.105,49,1.137,50,0.057,51,1.253,55,0.005,56,0.005,60,3.108,68,2.718,69,3.573,70,2.718,279,6.223,2377,6.223,2378,8.621,2379,5.32,2380,5.32,2381,5.32,2382,5.32,2383,5.32]],["title/classes/RemoveLocationFromPositiveInfo1651485422345.html",[0,0.26,2384,4.165]],["body/classes/RemoveLocationFromPositiveInfo1651485422345.html",[0,0.295,2,0.766,3,0.057,4,0.057,5,0.049,8,2.1,9,2.739,10,0.129,11,0.524,12,1.503,14,2.684,15,0.811,16,2.812,17,1.45,18,2.451,19,2.403,20,0.25,21,0.007,22,1.419,23,1.37,24,1.253,25,3.408,26,0.526,29,2.663,31,2.554,32,1.576,34,0.322,36,0.544,39,2.451,40,3.245,42,0.795,43,0.566,44,0.811,45,1.806,46,2.451,48,0.105,49,1.137,50,0.057,51,1.253,55,0.005,56,0.005,60,3.108,64,4.378,68,2.718,69,3.573,70,2.718,248,3.05,270,2.663,355,4.059,2384,6.223,2385,8.621,2386,5.32,2387,5.32,2388,5.32,2389,5.32,2390,5.32]],["title/guards/RolesGuard.html",[151,1.904,2391,4.165]],["body/guards/RolesGuard.html",[0,0.344,3,0.066,4,0.066,5,0.057,8,1.859,10,0.15,15,0.894,20,0.223,21,0.007,26,0.489,34,0.299,42,0.876,43,0.623,44,0.718,48,0.151,50,0.066,55,0.005,56,0.005,100,2.814,146,1.15,151,3.134,153,2.934,155,3.832,156,2.518,193,1.894,194,1.234,210,1.859,435,4.456,626,2.358,781,3.36,2392,6.19,2393,6.19,2394,8.78,2395,6.19,2396,6.19,2397,7.705,2398,8.78,2399,6.19,2400,6.19,2401,6.19,2402,6.19,2403,6.19,2404,6.19]],["title/modules/SchedulerModule.html",[554,2.042,566,3.369]],["body/modules/SchedulerModule.html",[0,0.299,3,0.058,4,0.058,5,0.05,21,0.007,48,0.185,50,0.058,55,0.005,56,0.005,146,0.999,450,2.865,554,3.072,555,5.07,556,2.83,557,3.707,563,5.796,564,4.24,566,6.791,567,4.24,568,5.344,569,3.95,570,3.016,571,2.919,573,4.088,578,3.871,582,4.088,583,3.122,584,3.871,585,4.395,591,3.238,592,3.678,593,3.871,596,3.238,597,2.465,623,3.238,624,3.238,625,4.088,720,4.24,721,5.699,729,4.409,730,3.367,2405,4.786,2406,5.378,2407,4.786,2408,4.786,2409,7.245,2410,5.378,2411,5.378,2412,4.395,2413,4.395,2414,5.378,2415,5.378,2416,5.378]],["title/injectables/SchedulerService.html",[626,1.432,2409,3.572]],["body/injectables/SchedulerService.html",[0,0.115,3,0.022,4,0.022,5,0.019,10,0.05,11,0.258,12,1.306,15,0.4,17,1.437,20,0.212,21,0.007,22,0.421,23,0.406,24,1.227,26,0.415,32,0.997,34,0.292,36,0.452,37,0.825,42,0.65,43,0.463,44,0.825,48,0.157,50,0.022,51,1.597,55,0.002,56,0.002,61,1.695,82,1.059,85,1.58,89,1.075,90,0.773,93,0.821,98,0.698,100,2.747,128,0.742,144,0.904,146,0.385,185,1.091,186,1.163,193,1.055,194,1.417,210,2.73,214,0.451,309,1.203,339,4.709,341,3.443,363,0.843,443,1.695,450,2.096,457,1.871,460,3.796,462,1.354,483,2.196,492,1.582,591,2.075,597,0.95,598,2,626,1.055,628,0.927,637,1.962,645,3.225,669,1.354,765,1.298,767,3.582,775,3.55,808,1.695,869,0.712,1034,1.845,1122,1.493,1202,4.472,1229,2.357,1241,1.695,1313,2.25,1353,3.668,1354,1.354,1358,2.357,1630,2.817,1665,1.248,1677,3.863,1684,2.481,1733,2.817,1734,1.695,1765,3.067,1766,4.674,1845,1.845,1878,1.845,1882,4.472,1922,1.845,1923,1.582,1926,1.695,1928,1.845,1945,1.582,1956,3.067,2013,1.582,2017,3.067,2033,1.845,2040,2.817,2121,1.845,2128,1.845,2135,5.043,2202,1.695,2207,4.585,2409,2.63,2412,1.695,2413,1.695,2417,2.073,2418,4.423,2419,5.153,2420,5.153,2421,5.153,2422,3.446,2423,5.153,2424,5.153,2425,3.446,2426,3.446,2427,3.446,2428,3.446,2429,4.423,2430,2.073,2431,2.073,2432,2.073,2433,3.446,2434,2.073,2435,2.073,2436,2.073,2437,3.446,2438,2.073,2439,3.446,2440,2.073,2441,3.446,2442,2.073,2443,3.446,2444,2.073,2445,1.845,2446,2.073,2447,1.493,2448,1.845,2449,1.845,2450,2.073,2451,1.845,2452,1.845,2453,3.067,2454,4.423,2455,2.073,2456,2.073,2457,2.073,2458,2.073,2459,2.073,2460,2.073,2461,2.073,2462,2.073,2463,2.073,2464,2.073,2465,2.073,2466,2.073,2467,2.073,2468,2.073,2469,2.073,2470,2.073,2471,2.073,2472,2.073,2473,2.073,2474,3.446,2475,4.423,2476,2.073,2477,2.073,2478,5.153,2479,3.446,2480,2.073,2481,2.073,2482,2.073,2483,3.446,2484,3.446,2485,2.073,2486,3.446,2487,3.067,2488,3.067,2489,4.585,2490,1.845,2491,1.845,2492,3.067,2493,6.847,2494,3.446,2495,2.073,2496,2.073,2497,2.073,2498,3.446,2499,2.073,2500,2.073,2501,3.446,2502,2.073,2503,2.073,2504,2.073,2505,2.073,2506,2.073,2507,2.073,2508,3.446,2509,2.073,2510,5.089,2511,2.073,2512,2.073,2513,2.073,2514,2.073,2515,3.446,2516,3.446,2517,3.067,2518,2.073,2519,5.491,2520,5.719,2521,3.446,2522,4.585,2523,2.073,2524,4.423,2525,2.073,2526,2.073,2527,2.073,2528,3.936,2529,4.423,2530,3.446,2531,3.446,2532,2.073,2533,2.073,2534,2.073,2535,2.073,2536,2.073,2537,3.446,2538,2.073,2539,2.073,2540,2.073,2541,2.073,2542,2.073,2543,2.073,2544,2.073,2545,2.073,2546,2.073,2547,2.073,2548,2.073,2549,2.073,2550,3.446,2551,2.073,2552,4.423,2553,4.423,2554,3.446,2555,4.423,2556,1.845,2557,2.073,2558,2.073,2559,2.073,2560,2.073,2561,2.073,2562,5.153,2563,3.446,2564,2.073,2565,2.073,2566,2.073,2567,2.073,2568,2.073,2569,2.073,2570,2.073,2571,3.446,2572,2.073,2573,2.073,2574,1.845,2575,2.073,2576,2.073,2577,1.695,2578,1.845,2579,1.845,2580,1.845,2581,2.073,2582,1.845,2583,2.073,2584,2.073,2585,2.073,2586,2.073,2587,2.073,2588,2.073,2589,4.423,2590,2.073,2591,2.073,2592,2.073]],["title/controllers/SendEmergencyMessageController.html",[119,1.173,1744,3.825]],["body/controllers/SendEmergencyMessageController.html",[0,0.321,3,0.043,4,0.043,5,0.037,10,0.098,12,1.147,15,0.67,17,1.107,20,0.226,21,0.007,24,0.722,26,0.428,32,0.908,34,0.156,42,0.458,43,0.326,44,0.468,48,0.185,50,0.043,51,1.211,55,0.004,56,0.004,82,2.059,89,1.802,90,1.503,91,1.233,93,0.748,98,1.357,111,1.084,116,0.924,119,1.01,121,1.385,127,2.257,128,2.639,129,1.603,130,3.951,132,2.52,133,1.847,134,1.708,137,1.471,141,2.339,142,1.801,143,1.677,146,0.748,147,1.603,148,2.404,149,2.687,150,2.298,151,1.639,152,1.716,153,2.2,154,1.677,155,2.404,156,1.639,157,1.758,158,1.305,159,3.921,161,1.716,162,1.413,170,2.001,171,2.121,172,1.677,173,1.568,174,2.404,175,1.801,189,1.716,190,1.716,193,1.233,194,1.346,198,2.11,199,1.603,200,1.677,202,2.121,210,2.028,212,2.717,214,1.257,309,2.339,341,2.426,363,1.639,637,1.535,765,5.241,766,3.294,767,3.921,770,2.339,777,2.952,778,2.188,785,2.868,798,3.353,804,2.901,859,3.24,940,4.619,1232,3.586,1313,2.631,1327,3.586,1353,3.788,1354,2.631,1358,2.756,1655,3.294,1744,4.722,1876,6.01,1917,5.63,1919,3.586,2013,3.075,2040,4.722,2510,5.141,2519,3.586,2522,3.586,2528,3.586,2577,3.294,2578,3.586,2579,3.586,2580,3.586,2593,5.141,2594,4.03,2595,4.722,2596,4.03,2597,4.03,2598,3.586,2599,4.03,2600,3.586,2601,4.03,2602,3.586,2603,4.03,2604,4.03,2605,4.03,2606,4.03,2607,4.03,2608,4.03,2609,4.03,2610,4.03,2611,4.03,2612,4.03,2613,4.03,2614,4.03]],["title/classes/SendEmergencyMessageDTO.html",[0,0.26,1917,3.572]],["body/classes/SendEmergencyMessageDTO.html",[0,0.341,2,0.884,3,0.066,4,0.066,5,0.057,10,0.149,11,0.575,20,0.254,21,0.007,34,0.297,36,0.784,43,0.709,48,0.151,50,0.066,55,0.005,56,0.005,93,1.424,94,3.515,97,3.918,98,2.583,100,3.197,108,4.301,115,3.053,116,1.409,303,5.083,305,3.698,765,5.234,1917,5.853,2447,6.019,2582,7.441,2615,7.441,2616,6.143,2617,7.441,2618,6.143,2619,6.143,2620,5.467,2621,5.467,2622,5.467]],["title/controllers/SendSMSController.html",[119,1.173,1743,3.825]],["body/controllers/SendSMSController.html",[0,0.337,3,0.046,4,0.046,5,0.04,10,0.105,12,1.192,15,0.704,17,1.15,20,0.232,21,0.007,24,0.774,26,0.274,34,0.167,37,1.718,42,0.491,43,0.35,44,0.501,48,0.187,50,0.046,51,1.088,55,0.004,56,0.004,91,1.322,93,0.802,98,1.455,116,0.991,119,1.082,121,1.484,127,2.329,128,2.723,129,1.718,130,4.151,132,2.648,133,1.98,134,1.599,137,1.577,141,2.508,142,1.931,143,1.798,144,1.884,145,1.931,146,0.802,147,1.718,148,2.526,149,2.791,150,2.414,151,1.757,152,1.84,153,2.312,154,1.798,155,2.526,156,1.757,157,1.884,158,1.399,161,1.84,162,1.514,170,2.145,171,2.273,172,1.798,173,1.681,174,2.526,175,1.931,184,1.98,185,2.273,186,2.423,189,1.84,190,1.84,191,1.884,193,1.322,194,1.399,198,2.216,199,1.718,200,1.798,202,2.273,208,1.884,210,2.107,214,0.94,597,1.98,598,2.508,645,3.8,669,2.821,711,3.194,767,3.523,770,2.508,777,3.101,778,2.345,779,3.844,780,3.844,785,2.145,859,2.423,1351,4.225,1353,3.936,1354,2.821,1366,3.297,1696,3.844,1734,3.531,1743,4.961,1877,6.245,1945,4.632,2023,5.402,2556,3.844,2593,5.402,2595,4.961,2598,3.844,2600,3.844,2623,4.32,2624,4.32,2625,6.221,2626,4.32,2627,4.32,2628,4.32,2629,4.32,2630,4.32,2631,4.32,2632,4.32,2633,4.32,2634,4.32,2635,4.32,2636,4.32,2637,4.32,2638,4.32]],["title/classes/SendSmsDTO.html",[0,0.26,2625,3.825]],["body/classes/SendSmsDTO.html",[0,0.368,2,0.953,3,0.071,4,0.071,5,0.061,10,0.161,11,0.602,20,0.233,21,0.007,34,0.257,36,0.821,48,0.158,50,0.071,55,0.006,56,0.006,93,1.23,94,3.036,108,4.505,115,2.933,116,1.519,303,5.217,305,3.987,2447,6.224,2615,7.148,2617,7.693,2620,5.894,2621,5.894,2622,5.894,2625,6.565,2639,6.623,2640,6.623]],["title/controllers/SendTestMessageController.html",[119,1.173,2641,3.825]],["body/controllers/SendTestMessageController.html",[0,0.352,3,0.049,4,0.049,5,0.042,10,0.111,12,1.076,15,0.735,17,1.188,20,0.238,21,0.007,26,0.46,32,1.035,34,0.178,42,0.522,43,0.372,44,0.533,48,0.185,50,0.049,51,1.136,55,0.004,56,0.004,89,1.976,90,1.713,91,1.406,93,0.853,116,1.054,119,1.151,121,1.578,127,2.392,129,1.827,130,4.333,132,2.764,133,2.106,134,1.781,137,1.678,141,2.667,142,2.054,143,1.912,145,2.054,146,0.853,147,1.827,148,2.636,149,2.885,150,2.52,151,1.869,152,1.957,153,2.413,154,1.912,155,2.636,156,1.869,157,2.004,158,1.488,161,1.957,162,1.61,172,1.912,173,1.788,174,2.636,175,2.054,184,2.106,189,1.957,190,1.957,193,1.406,194,1.263,198,2.314,199,1.827,200,1.912,214,1,309,2.667,363,1.869,605,5.966,765,3.966,766,3.755,767,2.667,770,2.667,777,3.237,778,2.494,785,2.281,798,3.6,839,3,859,2.577,1353,4.067,1354,3,1358,4.333,1372,4.835,1655,3.755,2013,3.506,2022,4.088,2034,4.088,2577,3.755,2595,5.178,2602,4.088,2641,5.178,2642,6.336,2643,6.336,2644,4.594,2645,4.594,2646,4.594,2647,4.594,2648,4.594,2649,4.594,2650,4.594,2651,4.594,2652,4.594,2653,4.594,2654,4.594]],["title/classes/SuccessRO.html",[0,0.26,777,2.391]],["body/classes/SuccessRO.html",[0,0.449,2,0.964,3,0.072,4,0.072,5,0.062,10,0.162,11,0.606,20,0.234,21,0.007,34,0.259,48,0.159,50,0.072,55,0.006,56,0.006,93,1.243,100,3.294,115,2.952,116,1.536,158,2.169,194,1.731,777,4.13,785,4.312,789,3.634,793,4.255,794,4.255,2655,6.695,2656,6.695]],["title/entities/TimeSlotDayEntity.html",[864,1.948,2657,3.369]],["body/entities/TimeSlotDayEntity.html",[0,0.301,3,0.058,4,0.058,5,0.05,10,0.131,11,0.53,20,0.269,21,0.007,26,0.5,34,0.324,48,0.139,49,1.157,50,0.058,55,0.005,56,0.005,60,3.134,93,1.552,111,2.393,241,2.082,242,4.415,449,4.304,450,3.617,457,4.706,468,5.456,470,3.897,474,6.241,504,7.012,505,6.295,601,3.036,864,2.253,875,3.389,883,3.535,887,4.428,889,4.428,892,4.428,893,4.837,1091,6.013,1239,7.086,1287,6.295,1684,5.672,2657,5.092,2658,5.413,2659,5.413,2660,5.413,2661,5.413,2662,5.413,2663,5.413,2664,5.413]],["title/classes/TimeSlotDayRepository.html",[0,0.26,2665,4.165]],["body/classes/TimeSlotDayRepository.html",[0,0.389,2,1.008,3,0.075,4,0.075,5,0.065,21,0.007,48,0.163,49,1.497,50,0.075,55,0.006,56,0.006,85,3.806,449,3.475,450,2.847,457,4.508,469,5.342,974,5.33,985,4.214,1237,5.721,2657,5.039,2665,7.389,2666,7,2667,5.721,2668,7]],["title/entities/TimeSlotEntity.html",[468,3.056,864,1.948]],["body/entities/TimeSlotEntity.html",[0,0.239,3,0.046,4,0.046,5,0.04,10,0.104,11,0.453,20,0.275,21,0.007,26,0.444,29,2.303,32,1.711,34,0.343,36,0.776,43,0.489,48,0.137,49,0.919,50,0.046,55,0.004,56,0.004,60,3.302,62,3.536,88,3.575,93,1.644,100,2.773,111,1.627,127,2.449,134,1.681,162,1.506,241,1.849,242,3.002,247,3.799,248,3.312,249,3.002,251,2.921,263,3.786,449,4.454,450,3.689,457,2.333,468,3.949,482,4.381,483,3.474,486,4.241,601,2.41,864,1.788,867,3.575,869,2.404,870,4.959,872,2.69,875,2.69,883,2.806,884,3.279,885,5.382,887,2.69,889,3.786,890,3.786,892,3.786,893,4.136,1239,7.332,1389,3.512,1394,4.615,2258,5.382,2657,5.467,2667,3.512,2669,4.297,2670,4.297,2671,4.297,2672,6.048,2673,6.048,2674,4.297,2675,4.297,2676,4.297,2677,4.297,2678,4.297,2679,4.297,2680,4.297,2681,4.297]],["title/classes/TimeSlotIdRO.html",[0,0.26,463,3.825]],["body/classes/TimeSlotIdRO.html",[0,0.445,2,0.951,3,0.071,4,0.071,5,0.061,10,0.16,11,0.601,20,0.232,21,0.007,34,0.256,48,0.158,50,0.071,55,0.006,56,0.006,93,1.227,111,2.416,115,2.928,116,1.515,158,2.14,241,2.282,449,3.981,450,3.262,457,4.353,463,6.554,789,3.586,793,4.22,794,4.22,925,5.399,926,5.399,2682,7.136]],["title/classes/TimeSlotRO.html",[0,0.26,1629,3.572]],["body/classes/TimeSlotRO.html",[0,0.372,2,0.716,3,0.053,4,0.053,5,0.046,10,0.121,11,0.501,20,0.275,21,0.007,32,1.507,34,0.344,36,0.991,48,0.131,50,0.053,55,0.005,56,0.005,88,3.86,93,1.648,100,2.951,111,2.174,115,3.293,116,1.141,158,1.612,241,1.997,304,4.187,449,4.478,450,3.668,482,4.73,483,3.752,789,4.816,793,3.52,794,4.746,867,3.86,1629,5.105,2682,8.026,2683,4.975,2684,4.975,2685,4.975,2686,4.975,2687,4.975,2688,4.975,2689,4.975,2690,4.975]],["title/classes/TimeSlotRepository.html",[0,0.26,1203,3.572]],["body/classes/TimeSlotRepository.html",[0,0.225,2,0.584,3,0.043,4,0.043,5,0.037,10,0.098,11,0.435,15,0.673,20,0.197,21,0.007,22,0.823,23,0.794,24,1.538,26,0.43,32,1.308,34,0.303,36,0.832,42,0.77,43,0.549,44,0.859,45,1.773,48,0.133,49,0.867,50,0.043,55,0.004,56,0.004,85,2.661,146,0.753,194,1.351,210,1.743,214,1.61,339,4.43,363,2.757,449,4.044,450,3.313,468,2.649,469,3.096,470,2.92,482,2.539,636,3.68,637,2.818,688,3.151,869,2.69,974,4.081,976,3.634,980,4.244,982,2.539,983,4.43,985,2.442,988,3.096,989,3.256,990,3.634,991,2.804,992,2.73,1203,4.43,1237,6.658,1319,2.774,1500,3.315,2123,3.97,2138,4.179,2154,3.315,2162,4.745,2163,4.745,2173,5.166,2181,3.315,2182,6.4,2184,3.315,2344,5.166,2691,4.056,2692,5.805,2693,7.4,2694,5.805,2695,4.056,2696,5.805,2697,4.056,2698,4.056,2699,4.056,2700,4.056,2701,4.056,2702,3.61,2703,5.805,2704,5.805,2705,4.056,2706,4.056,2707,4.056,2708,4.056,2709,4.056,2710,4.056,2711,4.056,2712,4.056,2713,4.056,2714,5.805,2715,5.805,2716,5.805,2717,8.146,2718,7.4,2719,5.805,2720,5.805,2721,5.805,2722,5.805,2723,5.805,2724,5.805,2725,5.805,2726,4.056]],["title/classes/TokenRO.html",[0,0.26,1609,3.825]],["body/classes/TokenRO.html",[0,0.448,2,0.961,3,0.071,4,0.071,5,0.062,10,0.162,11,0.605,20,0.234,21,0.007,26,0.423,34,0.259,36,0.921,48,0.159,50,0.071,55,0.006,56,0.006,93,1.24,115,2.947,116,1.531,158,2.163,650,6.246,793,4.248,794,4.248,1609,6.597,2727,6.677,2728,6.677,2729,6.677,2730,6.677,2731,6.677]],["title/modules/TriggerTimeSlotModule.html",[554,2.042,567,2.818]],["body/modules/TriggerTimeSlotModule.html",[0,0.299,3,0.058,4,0.058,5,0.05,21,0.007,48,0.184,50,0.058,55,0.005,56,0.005,121,2.42,146,0.999,448,6.419,449,2.67,450,3.679,457,3.824,460,5.51,461,3.871,462,3.512,554,3.072,556,2.83,557,3.707,563,4.599,567,5.445,569,3.95,570,3.016,571,2.919,573,3.122,585,4.395,592,3.678,625,4.088,720,4.24,721,4.817,731,4.395,938,4.104,952,5.375,953,4.786,957,4.395,958,4.104,1087,6.419,1624,6.419,1684,3.871,2732,4.786,2733,4.786,2734,4.786,2735,5.378,2736,6.419,2737,7.854,2738,7.043,2739,7.043,2740,7.854,2741,5.378,2742,7.043,2743,5.378]],["title/injectables/TriggerTimeSlotService.html",[460,2.717,626,1.432]],["body/injectables/TriggerTimeSlotService.html",[0,0.125,3,0.024,4,0.024,5,0.021,10,0.055,11,0.276,12,1.091,15,0.428,17,1.495,20,0.224,21,0.007,22,0.456,23,0.722,24,1.215,26,0.478,32,0.507,34,0.305,36,0.933,42,0.857,43,0.61,44,0.875,45,1.856,48,0.166,49,0.481,50,0.024,51,1.384,55,0.003,56,0.003,98,0.758,111,1.728,128,2.819,134,1.138,144,0.981,145,1.006,146,0.418,166,1.619,184,1.031,185,1.184,186,1.262,187,1.619,188,1.619,193,1.128,194,1.28,208,2.607,210,1.795,213,2.813,214,1.746,241,1.697,303,1.306,309,1.306,326,1.469,341,2.219,349,2.813,363,0.915,449,3.983,450,3.685,455,4.88,457,3.485,460,2.14,465,1.717,468,3.903,469,2.813,470,1.619,474,2.654,475,3.281,482,4.244,483,2.967,486,2.767,490,1.717,491,2.002,492,1.717,626,1.128,628,1.006,636,2.543,637,2.063,684,1.734,767,1.306,775,3.68,827,1.469,869,2.979,976,1.408,989,1.262,991,1.087,992,2.203,998,3.828,1011,1.839,1022,1.717,1040,1.538,1046,1.408,1058,1.619,1089,3.281,1091,3.574,1203,4.9,1229,2.521,1238,2.002,1240,2.002,1250,2.002,1289,2.002,1290,2.002,1319,3.704,1336,1.619,1630,1.839,1684,3.372,1759,1.354,1766,1.839,1910,1.839,2202,6.556,2445,2.002,2447,1.619,2448,2.002,2449,2.002,2451,2.002,2452,2.002,2453,2.002,2487,2.002,2488,2.002,2489,3.281,2490,2.002,2491,2.002,2492,2.002,2657,2.654,2667,1.839,2744,2.25,2745,4.684,2746,3.687,2747,3.687,2748,5.416,2749,3.687,2750,3.687,2751,4.684,2752,4.168,2753,2.25,2754,6.033,2755,3.687,2756,3.687,2757,2.25,2758,2.25,2759,2.25,2760,2.25,2761,3.687,2762,2.25,2763,3.687,2764,2.25,2765,2.25,2766,3.687,2767,2.25,2768,3.687,2769,2.25,2770,2.25,2771,2.25,2772,2.25,2773,2.25,2774,3.687,2775,2.25,2776,2.25,2777,2.25,2778,2.25,2779,2.25,2780,2.25,2781,2.25,2782,4.684,2783,3.687,2784,2.25,2785,2.25,2786,2.25,2787,2.25,2788,2.25,2789,2.25,2790,2.25,2791,2.25,2792,2.25,2793,2.25,2794,2.25,2795,3.687,2796,3.687,2797,2.25,2798,3.687,2799,2.25,2800,2.25,2801,3.687,2802,5.416,2803,3.687,2804,3.687,2805,3.687,2806,3.687,2807,2.25,2808,2.25,2809,2.25,2810,2.25,2811,5.416,2812,2.25,2813,3.687,2814,2.25,2815,2.25,2816,2.25,2817,2.25,2818,2.25,2819,2.25,2820,2.25,2821,2.25,2822,2.25,2823,2.25,2824,2.25]],["title/entities/UnconfirmedEmailEntity.html",[864,1.948,1221,3.056]],["body/entities/UnconfirmedEmailEntity.html",[0,0.287,3,0.055,4,0.055,5,0.048,10,0.125,11,0.514,20,0.275,21,0.007,26,0.488,29,3.124,34,0.34,36,0.897,48,0.135,49,1.104,50,0.055,55,0.005,56,0.005,60,3.262,62,2.92,89,2.4,93,1.63,111,1.845,127,2.51,134,1.794,241,2.035,242,3.404,247,4.179,248,3.578,249,4.072,250,3.846,251,3.312,294,3.822,486,3.503,601,2.896,864,2.149,867,3.933,869,2.645,870,4.477,872,3.232,875,3.232,883,3.372,884,3.94,887,3.232,889,4.292,890,4.292,892,4.292,893,4.689,1221,4.477,2265,4.22,2825,5.163,2826,5.163,2827,5.163,2828,5.163,2829,5.163,2830,6.857,2831,5.163,2832,5.163,2833,5.163]],["title/classes/UnconfirmedEmailEntitySubscriber.html",[0,0.26,2834,4.165]],["body/classes/UnconfirmedEmailEntitySubscriber.html",[0,0.281,2,0.728,3,0.054,4,0.054,5,0.047,8,2.031,10,0.123,11,0.507,12,1.294,15,0.785,20,0.236,21,0.007,22,1.026,23,0.99,26,0.483,34,0.329,42,0.866,43,0.617,44,0.944,45,1.77,48,0.15,49,1.081,50,0.054,55,0.005,56,0.005,89,2.109,194,1.519,214,1.1,748,5.307,864,2.104,898,5.814,899,5.814,900,5.161,901,5.161,902,5.161,903,6.207,905,5.161,907,5.161,908,6.207,910,5.161,911,5.161,912,6.207,915,5.161,916,3.859,917,3.859,918,3.859,919,3.302,921,5.161,922,5.814,923,3.859,1221,5.536,2834,6.018,2835,8.724,2836,8.724,2837,8.724,2838,5.057,2839,5.057,2840,5.057,2841,5.057,2842,5.057,2843,5.057,2844,4.5]],["title/classes/UnconfirmedEmailRepository.html",[0,0.26,1204,3.572]],["body/classes/UnconfirmedEmailRepository.html",[0,0.335,2,0.867,3,0.064,4,0.064,5,0.056,10,0.146,15,0.879,20,0.22,21,0.007,26,0.48,34,0.294,36,0.934,42,0.861,43,0.613,44,0.879,45,1.892,48,0.149,49,1.288,50,0.064,55,0.005,56,0.005,85,3.472,134,1.265,214,1.648,294,3.761,869,2.602,974,4.989,985,3.626,1204,5.781,1221,3.933,1244,4.923,1319,4.119,2123,5.18,2138,5.453,2331,4.923,2702,5.36,2845,8.286,2846,6.023,2847,7.575,2848,7.575,2849,6.023,2850,6.023,2851,6.023]],["title/injectables/UnconfirmedEmailService.html",[626,1.432,845,3.201]],["body/injectables/UnconfirmedEmailService.html",[0,0.216,3,0.042,4,0.042,5,0.036,10,0.094,11,0.422,12,1.364,15,0.653,17,1.416,20,0.21,21,0.007,22,0.789,23,1.297,24,1.439,26,0.509,32,0.877,34,0.299,36,0.918,42,0.825,43,0.587,44,0.768,45,1.579,48,0.172,50,0.042,51,0.697,55,0.004,56,0.004,89,2.737,127,2.221,128,2.015,134,0.817,137,1.42,144,1.697,145,1.739,146,0.722,162,1.363,184,1.783,185,2.047,186,2.181,193,1.723,194,1.601,208,2.888,212,2.649,214,1.676,294,2.796,597,1.783,598,3.843,626,1.723,628,1.739,637,2.764,644,5.411,645,4.544,647,4.766,659,3.678,660,2.8,668,3.179,669,2.54,680,2.8,684,3.413,686,2.968,688,2.112,690,3.179,691,3.179,708,2.66,711,2.047,712,2.968,815,3.461,845,3.852,869,2.494,991,2.72,992,1.829,1040,2.66,1046,3.526,1204,6.129,1221,2.54,1228,4.603,1243,3.461,1244,3.179,1251,3.461,1411,5.012,1415,5.012,1659,3.461,1910,3.179,2852,8.031,2853,3.89,2854,5.632,2855,6.621,2856,3.89,2857,5.632,2858,5.632,2859,3.89,2860,3.89,2861,3.89,2862,3.89,2863,5.632,2864,3.89,2865,3.89,2866,3.89,2867,5.632,2868,5.012,2869,3.89,2870,3.89,2871,3.89,2872,3.89,2873,3.89,2874,3.89,2875,3.89,2876,3.89,2877,3.89]],["title/classes/UpdateContactAndCheckPhoneDTO.html",[0,0.26,2878,3.825]],["body/classes/UpdateContactAndCheckPhoneDTO.html",[0,0.284,2,0.736,3,0.055,4,0.055,5,0.047,10,0.124,11,0.51,20,0.263,21,0.007,26,0.432,34,0.346,36,0.963,48,0.134,50,0.055,55,0.005,56,0.005,82,3.479,83,4.657,84,4.176,85,3.121,87,5.237,88,3.479,89,2.123,90,2.539,91,2.084,92,3.121,93,1.659,94,4.093,95,5.184,96,5.196,97,4.635,98,3.056,99,4.176,100,2.486,101,5.983,103,3.199,105,3.819,107,3.199,108,2.866,109,3.494,111,1.832,112,3.076,115,2.486,116,1.172,118,3.678,348,3.337,1018,6.613,2878,5.565,2879,6.059,2880,5.11,2881,5.11,2882,5.11,2883,5.11,2884,5.11,2885,5.11]],["title/controllers/UpdateContactController.html",[119,1.173,948,3.825]],["body/controllers/UpdateContactController.html",[0,0.282,3,0.036,4,0.036,5,0.031,10,0.082,12,0.864,15,0.59,17,1.366,20,0.25,21,0.007,24,1.094,26,0.387,34,0.237,42,0.694,43,0.494,44,0.708,48,0.184,50,0.036,51,1.094,55,0.004,56,0.004,82,4.26,83,4.176,87,2.316,90,2.277,93,0.944,111,2.285,116,0.777,118,2.438,119,1.274,121,1.163,123,2.768,127,2.599,128,3.085,129,2.023,132,2.961,133,2.331,134,1.836,137,2.23,142,1.514,143,1.409,144,1.477,145,1.514,146,0.629,147,1.347,148,2.116,149,2.893,150,2.429,151,1.377,152,1.442,153,1.937,154,1.409,155,2.116,156,1.377,157,1.477,158,1.097,159,3.544,160,2.438,161,1.442,162,1.187,169,3.013,170,1.681,171,1.782,172,1.409,173,1.318,174,2.541,175,1.514,176,3.881,177,2.584,178,4.156,179,2.768,180,2.768,182,2.768,183,2.768,184,1.552,185,1.782,186,1.899,187,2.438,188,2.438,189,1.442,190,1.442,191,1.477,192,2.584,193,1.036,194,1.014,195,2.768,196,2.768,197,2.768,198,2.478,199,2.023,200,2.116,202,2.676,204,3.881,205,2.768,206,2.768,207,2.768,208,1.477,209,2.768,212,1.593,213,2.584,214,1.329,241,0.895,270,2.585,348,4.432,838,2.438,932,4.66,936,3.013,943,3.013,948,4.156,1001,5.434,1006,7.141,1018,5.705,1024,3.477,1069,2.316,1072,3.822,1073,2.316,1074,2.316,1078,3.661,1085,3.013,2878,5.548,2886,6.788,2887,6.106,2888,6.106,2889,3.386,2890,3.386,2891,3.386,2892,5.085,2893,3.386,2894,3.386,2895,3.386,2896,3.386,2897,3.386,2898,3.386,2899,3.881,2900,3.386,2901,3.386,2902,3.386,2903,5.085,2904,3.386,2905,3.386,2906,3.386,2907,3.386]],["title/classes/UpdateContactDTO.html",[0,0.26,1018,3.369]],["body/classes/UpdateContactDTO.html",[0,0.276,2,0.715,3,0.053,4,0.053,5,0.046,10,0.121,11,0.501,20,0.272,21,0.007,26,0.479,34,0.336,36,0.978,48,0.098,50,0.053,55,0.005,56,0.005,88,3.856,89,2.354,90,2.815,91,2.31,92,3.46,93,1.612,94,3.977,95,5.357,97,4.791,98,3.159,100,2.948,103,4.182,105,4.528,107,4.182,108,3.746,109,4.568,111,2.173,112,4.021,115,3.238,116,1.139,219,4.418,220,4.418,221,4.418,222,4.418,223,4.418,224,4.418,225,4.418,1018,4.809,2879,7.891]],["title/controllers/UpdateTimeSlotController.html",[119,1.173,2736,3.825]],["body/controllers/UpdateTimeSlotController.html",[0,0.342,3,0.047,4,0.047,5,0.041,10,0.107,15,0.714,17,1.162,20,0.234,21,0.007,24,0.79,26,0.279,34,0.171,42,0.501,43,0.356,44,0.511,48,0.186,50,0.047,51,1.103,55,0.004,56,0.004,91,1.348,93,0.818,111,1.908,116,1.01,119,1.104,121,1.513,127,2.349,128,2.746,129,1.752,132,2.684,133,2.019,134,1.697,137,1.609,142,1.969,143,1.833,144,1.921,145,1.969,146,0.818,147,1.752,148,2.561,149,2.821,150,2.448,151,1.792,152,1.876,153,2.344,154,1.833,155,2.561,156,1.792,157,1.921,158,1.427,161,1.876,162,1.544,170,2.187,171,2.318,172,1.833,173,1.714,174,2.561,175,1.969,189,1.876,190,1.876,191,1.921,194,0.878,198,2.247,199,1.752,200,1.833,202,2.318,212,2.894,214,0.959,241,1.164,270,2.344,348,4.018,449,3.055,450,3.667,452,3.6,457,4.385,460,3.572,461,3.171,462,2.877,464,3.6,465,3.362,467,3.92,471,3.362,474,5.105,781,2.391,838,3.171,1024,3.012,1069,3.012,1072,3.852,1073,3.012,1074,3.012,1078,3.171,1091,5.859,1093,3.92,1094,3.92,1095,3.92,1629,4.696,1633,3.92,1635,3.92,2736,5.029,2752,6.311,2899,3.362,2908,6.154,2909,4.405,2910,6.275,2911,4.405,2912,4.405,2913,4.405,2914,4.405,2915,4.405,2916,4.405,2917,4.405,2918,4.405,2919,4.405,2920,4.405]],["title/classes/UpdateTimeSlotDTO.html",[0,0.26,2910,3.825]],["body/classes/UpdateTimeSlotDTO.html",[0,0.319,2,0.827,3,0.061,4,0.061,5,0.053,10,0.139,11,0.551,20,0.256,21,0.007,32,1.826,34,0.342,36,0.828,43,0.691,48,0.113,50,0.061,55,0.005,56,0.005,85,3.368,88,3.754,93,1.64,94,4.047,97,4.511,98,2.73,100,2.683,101,6.039,108,3.22,117,4.382,303,4.265,304,3.594,305,4.424,449,2.851,450,3.296,455,6.695,465,4.382,481,5.11,482,4.6,483,3.648,486,4.365,2910,6.006,2921,5.742,2922,5.742,2923,5.742,2924,5.742,2925,5.742,2926,5.742]],["title/classes/UpdateUserDeviceIdDTO.html",[0,0.26,2927,3.825]],["body/classes/UpdateUserDeviceIdDTO.html",[0,0.37,2,0.959,3,0.071,4,0.071,5,0.062,10,0.162,11,0.604,20,0.234,21,0.007,34,0.258,36,0.92,48,0.131,50,0.071,55,0.006,56,0.006,93,1.237,94,3.052,95,4.678,97,4.117,98,2.714,115,2.943,116,1.527,134,1.693,270,3.069,1759,5.217,2927,6.587,2928,6.587,2929,6.587,2930,6.659,2931,6.659]],["title/controllers/UpdateUserDeviceIdentifierController.html",[119,1.173,2932,3.825]],["body/controllers/UpdateUserDeviceIdentifierController.html",[0,0.357,3,0.05,4,0.05,5,0.043,10,0.114,15,0.746,17,1.201,20,0.24,21,0.007,26,0.298,34,0.182,42,0.533,43,0.38,44,0.544,48,0.186,50,0.05,51,0.841,55,0.004,56,0.004,91,1.435,93,0.871,116,1.076,119,1.175,121,1.612,127,2.413,128,2.623,129,1.866,132,2.803,133,2.15,134,1.869,137,1.713,142,2.097,143,1.952,146,0.871,147,1.866,148,2.674,149,2.916,150,2.556,151,1.908,152,1.998,153,2.448,154,1.952,155,2.674,156,1.908,157,2.046,158,1.52,161,1.998,162,1.644,170,2.329,171,2.469,172,1.952,173,1.825,174,2.674,175,2.097,189,1.998,190,1.998,191,2.046,194,0.935,198,2.347,199,1.866,200,1.952,202,2.469,210,1.409,214,1.021,270,2.448,711,2.469,770,2.723,777,3.283,778,2.546,781,2.546,785,2.329,798,3.64,838,3.377,839,3.063,848,3.063,849,3.208,859,2.631,860,4.174,1024,3.208,2899,3.58,2927,6.446,2929,6.974,2932,6.752,2933,5.719,2934,4.691,2935,4.691,2936,5.719,2937,6.427,2938,4.691,2939,4.691,2940,5.719,2941,4.691,2942,4.691,2943,4.691,2944,4.691,2945,4.691,2946,4.691,2947,4.174,2948,4.691]],["title/classes/UpdateUserProfileAndCheckPhoneDTO.html",[0,0.26,2949,3.825]],["body/classes/UpdateUserProfileAndCheckPhoneDTO.html",[0,0.158,2,0.411,3,0.031,4,0.031,5,0.026,10,0.069,11,0.334,20,0.274,21,0.007,26,0.283,34,0.365,36,0.96,37,1.773,43,0.502,48,0.088,50,0.031,55,0.003,56,0.003,83,3.049,84,2.331,85,2.043,87,3.753,89,1.39,90,1.662,91,1.364,92,2.043,93,1.75,94,4.317,95,4.875,96,3.402,97,4.824,98,3.181,99,2.331,100,3.412,101,6.426,103,1.786,105,2.5,107,1.786,108,3.078,109,1.951,111,1.921,112,1.717,115,1.628,116,0.654,134,1.153,270,2.09,348,1.863,355,2.588,400,2.684,483,2.213,1665,2.684,1666,2.791,1667,3.049,1668,2.684,1669,3.049,1670,2.791,1671,3.049,1672,2.791,1673,3.049,1674,2.791,1675,2.791,1676,3.049,1677,2.791,1678,2.791,2218,3.209,2219,3.209,2220,3.209,2221,3.209,2222,3.209,2223,3.209,2224,3.209,2225,3.209,2232,2.331,2239,2.331,2354,6.813,2358,2.331,2928,3.644,2949,3.644,2950,2.852,2951,2.852,2952,2.852,2953,3.967,2954,2.852,2955,2.852,2956,2.852,2957,2.852,2958,2.852,2959,2.852,2960,2.852,2961,2.852,2962,2.852,2963,2.852,2964,2.852,2965,2.852,2966,2.852,2967,2.852,2968,2.852,2969,2.852,2970,2.852,2971,2.852,2972,2.852,2973,2.852,2974,2.852,2975,2.852,2976,2.852,2977,2.852,2978,2.852,2979,2.852,2980,2.852]],["title/controllers/UpdateUserProfileController.html",[119,1.173,2981,3.825]],["body/controllers/UpdateUserProfileController.html",[0,0.154,3,0.03,4,0.03,5,0.026,10,0.067,12,1.252,15,0.505,17,1.287,20,0.221,21,0.007,24,0.496,26,0.421,32,0.623,34,0.257,37,3.404,42,0.693,43,0.494,44,0.708,48,0.185,50,0.03,51,1.263,55,0.003,56,0.003,83,3.679,87,1.891,89,1.902,90,2.006,93,0.514,98,0.932,100,1.01,111,0.744,116,0.634,119,1.09,121,0.95,127,2.46,128,3.062,129,1.1,132,1.898,133,1.268,134,1.835,137,1.589,142,1.236,143,1.151,144,1.206,145,1.236,146,0.514,147,1.1,148,1.811,149,2.14,150,1.731,151,1.125,152,1.178,153,1.657,154,1.151,155,1.811,156,1.125,161,1.178,162,0.969,170,1.373,171,1.455,172,1.151,173,1.076,174,1.811,175,1.236,176,3.321,177,2.111,178,3.557,179,2.26,180,2.26,182,2.26,183,2.26,184,1.268,185,1.455,186,1.551,187,1.991,188,1.991,189,1.178,190,1.178,191,1.206,193,0.846,194,1.469,195,2.26,196,2.26,197,2.26,198,1.589,199,1.1,200,1.151,202,1.455,204,3.321,205,2.26,206,2.26,207,2.26,208,1.206,209,2.26,210,1.616,212,1.301,213,3.321,214,1.328,241,0.731,270,1.657,294,1.373,309,1.605,363,1.125,597,1.268,598,1.605,645,2.724,669,1.806,708,1.891,798,2.671,838,1.991,839,1.806,845,3.679,846,2.26,847,2.26,848,1.806,852,2.111,869,0.95,1024,2.976,1042,4.987,1215,4.615,1351,3.239,1352,2.111,1353,3.017,1354,1.806,1355,2.26,1356,2.461,1357,2.26,1358,2.976,1367,3.557,1368,2.461,1371,2.461,1372,3.321,1373,2.26,1651,2.461,1652,2.461,1693,3.513,1695,2.111,1700,2.461,1843,2.26,1848,2.461,1851,2.461,1855,2.26,2279,3.321,2354,5.788,2358,2.26,2899,3.321,2933,5.904,2936,3.873,2940,5.429,2947,2.461,2949,4.987,2981,3.557,2982,2.766,2983,5.38,2984,6.635,2985,4.352,2986,5.38,2987,2.766,2988,2.766,2989,2.766,2990,2.766,2991,4.352,2992,2.766,2993,2.766,2994,2.766,2995,2.766,2996,2.766,2997,2.766,2998,2.766,2999,2.766,3000,2.766,3001,2.766,3002,2.766,3003,2.766,3004,2.766,3005,2.766,3006,2.766,3007,2.766,3008,2.766,3009,2.766,3010,5.38,3011,2.766,3012,2.766,3013,4.352,3014,4.352,3015,2.766,3016,2.766,3017,2.766,3018,2.766,3019,2.766,3020,2.766,3021,2.766,3022,2.766,3023,2.766,3024,2.766,3025,2.766,3026,2.766,3027,2.766,3028,2.766,3029,2.766,3030,2.766,3031,2.766,3032,2.766,3033,2.766,3034,2.766,3035,2.766]],["title/classes/UpdateUserProfileDTO.html",[0,0.26,2354,3.369]],["body/classes/UpdateUserProfileDTO.html",[0,0.126,2,0.326,3,0.024,4,0.024,5,0.021,10,0.055,11,0.278,20,0.279,21,0.007,26,0.298,34,0.354,36,0.977,43,0.44,48,0.044,50,0.024,55,0.003,56,0.003,89,1.467,90,1.754,91,1.44,92,2.156,93,1.697,94,4.187,95,5.039,97,4.925,98,3.247,100,3.506,103,2.32,105,3.049,107,2.32,108,3.612,109,2.534,111,2.125,112,2.231,115,3.347,116,0.519,134,1.926,270,2.453,355,2.731,400,2.832,483,2.336,1665,2.832,1666,2.945,1667,3.217,1668,2.832,1669,3.217,1670,2.945,1671,3.217,1672,2.945,1673,3.217,1674,2.945,1675,2.945,1676,3.217,1677,2.945,1678,2.945,2218,3.387,2219,3.387,2220,3.387,2221,3.387,2222,3.387,2223,3.387,2224,3.387,2225,3.387,2232,3.029,2239,3.029,2354,2.668,2928,7.492,2953,4.838,3036,2.264,3037,2.264,3038,2.264,3039,2.264,3040,2.264,3041,2.264,3042,2.264,3043,2.264,3044,2.264,3045,2.264,3046,2.264,3047,2.264,3048,2.264,3049,2.264,3050,2.264,3051,2.264,3052,2.264,3053,2.264,3054,2.264,3055,2.264,3056,2.264,3057,2.264,3058,2.264,3059,2.264,3060,2.264,3061,2.264,3062,2.264,3063,2.264,3064,2.264,3065,2.264,3066,2.264]],["title/controllers/UploadFileController.html",[119,1.173,1463,3.825]],["body/controllers/UploadFileController.html",[0,0.325,3,0.044,4,0.044,5,0.073,10,0.1,11,0.307,12,0.994,15,0.679,17,1.118,20,0.228,21,0.007,24,0.736,26,0.26,34,0.159,36,0.419,42,0.466,43,0.332,44,0.476,48,0.186,50,0.044,51,1.333,55,0.004,56,0.004,91,1.256,93,0.762,116,0.941,119,1.028,121,1.41,127,2.276,128,2.661,129,1.632,132,2.553,134,1.652,137,1.499,141,3.398,142,1.834,143,1.708,145,1.834,146,0.762,147,1.632,148,2.436,149,2.328,150,2.328,151,1.669,152,1.748,153,2.229,154,1.708,155,2.436,156,1.669,157,1.79,158,1.329,161,1.748,162,1.438,165,3.354,166,2.954,168,3.354,170,2.037,171,2.16,172,1.708,173,1.597,174,2.436,175,1.834,184,1.881,189,1.748,190,1.748,191,1.79,193,1.256,194,1.167,198,1.499,199,1.632,200,1.708,202,2.16,208,1.79,210,2.234,212,2.753,214,0.893,299,6.08,302,4.271,303,2.382,307,3.652,311,3.652,350,3.652,351,3.354,788,2.68,1052,3.132,1063,3.652,1070,4.108,1071,3.132,1075,3.354,1076,3.354,1125,3.652,1212,3.664,1331,3.354,1407,4.666,1443,3.354,1451,3.354,1452,3.354,1463,4.784,1497,3.652,1506,6.072,2047,3.354,3067,5.853,3068,4.104,3069,7.439,3070,4.104,3071,4.104,3072,5.853,3073,4.104,3074,4.104,3075,4.104,3076,5.853,3077,4.104,3078,5.853,3079,4.104,3080,4.104,3081,3.652,3082,3.652,3083,4.104,3084,4.104,3085,4.104,3086,4.104,3087,4.104,3088,4.104,3089,5.853,3090,4.104,3091,4.104,3092,4.104,3093,4.104,3094,4.104,3095,4.104,3096,4.104,3097,4.104,3098,4.104,3099,4.104,3100,4.104,3101,4.104]],["title/interfaces/UploadResult.html",[1378,2.391,1531,3.825]],["body/interfaces/UploadResult.html",[3,0.074,4,0.074,5,0.064,10,0.169,11,0.62,20,0.24,21,0.007,22,1.412,36,0.967,50,0.074,55,0.006,56,0.006,326,5.968,1378,3.556,1379,4.357,1531,6.764,1574,8.132,3102,6.96,3103,6.96]],["title/entities/UserEntity.html",[127,1.432,864,1.948]],["body/entities/UserEntity.html",[0,0.221,3,0.043,4,0.043,5,0.062,10,0.139,11,0.429,20,0.275,21,0.007,26,0.465,29,2.795,34,0.346,36,0.827,37,3.093,48,0.159,49,0.852,50,0.061,55,0.004,56,0.004,60,2.919,62,3.126,82,2.928,89,2.425,93,1.66,127,1.753,134,0.837,153,2.556,241,1.774,248,3.201,249,2.845,250,3.214,251,2.768,254,3.587,269,5.1,270,2.182,303,4.513,305,2.399,341,2.399,435,4.831,486,3.749,601,2.234,788,4.382,852,4.373,855,5.1,864,1.658,865,4.792,867,3.428,868,3.896,870,2.602,872,2.494,881,3.256,887,3.587,890,3.587,891,4.684,940,4.59,1212,4.594,1215,4.594,1221,4.792,1223,5.972,1236,3.545,1246,3.545,1389,5.485,1394,5.601,1759,4.04,1829,2.868,2098,5.283,2117,5.485,2156,3.256,2204,6.355,2271,3.545,2844,3.545,3104,3.545,3105,5.731,3106,3.984,3107,3.984,3108,3.984,3109,3.984,3110,5.731,3111,3.984,3112,3.984,3113,3.984,3114,5.731,3115,5.731,3116,3.984,3117,5.731,3118,3.984,3119,3.984,3120,3.984,3121,3.984,3122,5.731,3123,3.984,3124,3.984]],["title/classes/UserEntitySubscriber.html",[0,0.26,3125,4.165]],["body/classes/UserEntitySubscriber.html",[0,0.288,2,0.746,3,0.055,4,0.055,5,0.048,8,2.065,10,0.126,11,0.515,12,1.31,15,0.798,20,0.238,21,0.007,22,1.052,23,1.015,26,0.489,34,0.331,42,0.877,43,0.624,44,0.953,45,1.788,48,0.152,49,1.109,50,0.055,55,0.005,56,0.005,89,2.144,127,2.616,194,1.538,214,1.128,748,5.352,864,2.158,897,4.238,898,5.887,899,5.887,900,5.247,901,5.247,902,5.247,903,6.27,904,4.238,905,5.247,907,5.247,908,6.27,910,5.247,911,5.247,912,6.27,915,5.247,916,3.957,917,3.957,918,3.957,919,3.386,921,5.247,922,5.887,923,3.957,2265,4.238,3125,6.119,3126,8.786,3127,5.185,3128,5.185,3129,5.185,3130,5.185]],["title/modules/UserModule.html",[554,2.042,568,2.818]],["body/modules/UserModule.html",[0,0.204,3,0.058,4,0.039,5,0.034,21,0.007,48,0.189,50,0.039,55,0.004,56,0.004,89,1.146,90,1.37,121,1.856,134,1.484,146,0.682,450,2.198,554,2.357,556,1.934,557,2.844,561,5.141,562,5.141,564,4.739,565,4.928,567,4.739,568,5.776,569,3.03,570,2.061,571,1.995,573,3.136,579,3.003,582,3.136,583,2.133,584,2.645,588,2.804,591,2.212,592,2.513,593,2.645,594,3.003,596,2.212,597,1.684,605,2.804,623,2.212,624,2.212,625,3.136,720,3.253,725,4.808,726,3.27,727,3.27,728,3.27,729,3.383,730,2.3,731,3.003,798,4.412,829,5.238,839,2.4,845,5.383,846,3.003,847,3.003,952,5.392,957,4.416,958,2.804,959,4.808,960,3.27,961,3.27,1097,5.238,1192,6.398,1342,5.238,1351,5.351,1352,2.804,1641,5.238,1693,5.804,1695,2.804,1745,3.27,1747,3.27,1827,5.238,1829,2.645,1843,3.003,2641,5.238,2929,3.003,2932,5.238,2981,5.238,3131,3.27,3132,3.27,3133,3.27,3134,3.675,3135,3.675,3136,5.403,3137,3.675,3138,6.408,3139,3.675,3140,5.403,3141,3.675,3142,3.675,3143,3.675,3144,3.675,3145,3.675,3146,3.675,3147,3.675,3148,3.675,3149,3.675,3150,3.675,3151,3.675,3152,3.675,3153,6.408,3154,3.675]],["title/classes/UserRO.html",[0,0.26,1649,3.825]],["body/classes/UserRO.html",[0,0.23,2,0.373,3,0.028,4,0.028,5,0.024,10,0.063,11,0.31,20,0.277,21,0.007,22,0.526,23,0.507,26,0.262,34,0.367,36,0.974,43,0.682,48,0.126,50,0.028,55,0.003,56,0.003,85,1.894,89,1.607,90,1.541,91,1.264,92,1.894,93,1.759,94,3.814,100,3.421,101,6.407,111,2.122,115,2.725,116,0.594,153,1.963,158,0.839,241,1.362,303,3.414,305,3.103,355,2.399,400,2.488,435,3.711,483,2.052,659,1.692,789,4.935,793,3.096,794,3.927,867,2.633,868,2.992,869,1.771,1233,1.977,1649,3.378,1665,2.488,1666,2.587,1667,2.826,1668,2.488,1669,2.826,1670,2.587,1671,2.826,1672,2.587,1673,2.826,1674,2.587,1675,2.587,1676,2.826,1677,2.587,1678,2.587,1759,2.488,2218,2.975,2219,2.975,2220,2.975,2221,2.975,2222,2.975,2223,2.975,2224,2.975,2225,2.975,2279,7.199,2281,7.406,3155,2.591,3156,5.155,3157,5.155,3158,2.591,3159,2.591,3160,2.591,3161,2.591,3162,2.591,3163,2.591,3164,2.591,3165,2.591,3166,2.591,3167,2.591,3168,2.591,3169,2.591,3170,2.591,3171,2.591,3172,2.591,3173,2.591,3174,2.591,3175,2.591,3176,2.591,3177,2.591,3178,2.591,3179,2.591,3180,2.591,3181,2.591,3182,2.591,3183,2.591,3184,2.591,3185,2.591,3186,2.591,3187,2.591,3188,2.591,3189,2.591,3190,2.591,3191,2.591,3192,2.591,3193,2.591,3194,2.591,3195,2.591,3196,2.591,3197,2.591,3198,2.591,3199,2.591]],["title/classes/UserRepository.html",[0,0.26,1201,3.572]],["body/classes/UserRepository.html",[0,0.277,2,0.718,3,0.053,4,0.053,5,0.046,10,0.121,11,0.502,15,0.777,20,0.219,21,0.007,22,1.011,23,0.976,24,1.512,26,0.48,34,0.313,36,0.934,37,2.664,42,0.86,43,0.612,44,0.878,45,1.89,48,0.149,49,1.066,50,0.053,55,0.005,56,0.005,85,3.07,89,2.089,127,1.525,146,0.926,194,1.508,214,1.646,241,1.77,636,4.106,637,3.08,688,4.106,974,4.554,985,3.001,989,4.242,990,4.735,991,3.654,992,3.558,997,5.475,1009,5.475,1201,5.112,1233,3.805,1319,4.581,1759,4.032,2331,6.183,3200,4.986,3201,5.96,3202,5.96,3203,6.698,3204,4.986,3205,5.96,3206,4.986,3207,5.96,3208,4.986,3209,4.986,3210,4.986]],["title/injectables/UserService.html",[626,1.432,798,2.324]],["body/injectables/UserService.html",[0,0.167,3,0.032,4,0.032,5,0.028,10,0.073,11,0.349,12,1.335,15,0.54,17,1.442,20,0.239,21,0.007,22,0.611,23,0.59,24,1.446,26,0.522,34,0.325,36,0.972,42,0.936,43,0.667,44,0.936,45,1.932,48,0.165,49,0.644,50,0.032,51,0.54,55,0.003,56,0.003,89,2.515,127,1.955,128,1.664,134,0.633,144,1.314,145,1.347,146,0.56,184,1.381,185,1.586,186,1.69,193,1.423,194,1.566,208,3.184,212,1.417,214,1.792,241,2.011,348,3.038,597,1.381,598,3.299,626,1.423,628,1.347,637,2.434,643,2.681,644,4.645,645,4.001,647,3.349,659,3.038,660,2.169,668,2.463,669,1.967,680,2.169,684,3.006,686,2.299,688,1.636,690,2.463,691,2.463,708,2.06,711,1.586,712,2.299,798,2.31,869,2.196,919,1.967,991,3.087,992,3.248,997,3.802,1009,3.802,1021,2.299,1022,2.299,1040,2.06,1201,5.807,1202,5.204,1230,2.681,1231,2.463,1233,2.299,1248,2.681,1313,1.967,1759,4.158,1882,5.204,1923,2.299,2200,2.681,2574,4.14,2868,2.681,3201,4.14,3202,4.14,3205,4.14,3207,4.14,3211,3.013,3212,4.652,3213,4.652,3214,4.652,3215,5.683,3216,4.652,3217,4.652,3218,4.652,3219,3.013,3220,4.652,3221,3.013,3222,3.013,3223,3.013,3224,3.013,3225,4.652,3226,3.013,3227,4.652,3228,3.013,3229,3.013,3230,3.013,3231,4.652,3232,3.013,3233,4.652,3234,3.013,3235,3.013,3236,3.013,3237,3.013,3238,3.013,3239,3.013,3240,3.013,3241,3.013,3242,3.013,3243,3.013,3244,3.013,3245,3.013,3246,3.013,3247,5.683,3248,3.013,3249,3.013,3250,3.013,3251,3.013,3252,3.013,3253,3.013,3254,3.013,3255,3.013]],["title/injectables/ValidationPipe.html",[170,2.324,626,1.432]],["body/injectables/ValidationPipe.html",[0,0.396,3,0.059,4,0.059,5,0.051,8,1.644,10,0.133,12,0.93,15,0.827,16,2.517,17,1.298,20,0.243,21,0.007,23,1.395,24,0.981,26,0.452,34,0.276,42,0.81,43,0.577,44,0.635,45,1.55,48,0.171,50,0.059,55,0.005,56,0.005,100,1.999,146,1.017,157,2.388,158,1.773,170,3.537,193,1.675,194,1.42,208,2.388,210,1.644,214,1.191,626,2.18,628,2.447,684,3.946,781,2.971,1026,4.177,1046,3.426,1052,6.045,1058,5.129,1122,3.94,1681,5.437,2047,5.823,2048,6.475,2051,6.475,2052,7.467,2054,7.049,2055,6.34,2056,4.871,2057,4.871,2058,4.871,2061,4.871,2068,7.049,3256,5.474,3257,5.474,3258,5.474,3259,7.125,3260,5.474,3261,7.922,3262,5.474,3263,5.474,3264,5.474]],["title/classes/addRegularNotificationDateToProfileTable1633344018695.html",[0,0.26,3265,4.165]],["body/classes/addRegularNotificationDateToProfileTable1633344018695.html",[0,0.298,2,0.772,3,0.057,4,0.057,5,0.05,8,2.112,9,2.75,10,0.13,11,0.527,12,1.507,14,2.696,15,0.816,16,2.819,17,1.453,18,2.465,19,2.416,20,0.251,21,0.007,22,1.427,23,1.377,24,1.261,25,3.422,26,0.528,31,2.568,32,1.585,34,0.323,36,0.548,37,2.798,39,2.465,40,3.251,42,0.799,43,0.569,44,0.816,45,1.812,46,2.465,48,0.105,49,1.147,50,0.057,51,1.261,55,0.005,56,0.005,60,3.121,62,2.996,68,2.741,69,3.593,70,2.741,2253,5.748,3265,6.259,3266,8.645,3267,5.366,3268,5.366,3269,5.366,3270,5.366,3271,5.366]],["title/dependencies.html",[557,2.967,3272,3.466]],["body/dependencies.html",[0,0.312,21,0.007,49,1.202,55,0.005,56,0.005,116,1.29,146,1.044,156,2.287,158,1.822,173,2.188,176,4.292,177,4.292,486,2.873,557,2.96,576,5.004,581,5.004,587,4.048,597,2.577,638,5.004,659,3.672,660,4.048,663,5.004,664,4.292,665,5.004,755,4.292,803,5.926,1058,4.048,1227,5.004,1229,3.846,1756,4.596,1803,4.596,1804,4.596,1880,5.004,2051,4.596,2412,4.596,2413,4.596,3081,5.004,3082,6.452,3273,5.624,3274,5.624,3275,7.251,3276,8.025,3277,5.624,3278,5.624,3279,5.624,3280,5.624,3281,5.624,3282,5.624,3283,5.624,3284,5.624,3285,5.624,3286,5.624,3287,5.624,3288,5.624,3289,5.004,3290,5.624,3291,5.624,3292,5.624,3293,5.624,3294,5.624,3295,5.624,3296,5.624,3297,5.624,3298,5.624,3299,5.624,3300,5.624,3301,5.624,3302,5.624,3303,5.624,3304,5.624,3305,5.624,3306,5.624,3307,5.624,3308,5.624,3309,5.624,3310,5.624,3311,5.624,3312,5.624,3313,5.624,3314,5.624,3315,5.624,3316,5.624]],["title/miscellaneous/enumerations.html",[3317,2.972,3318,5.016]],["body/miscellaneous/enumerations.html",[10,0.106,21,0.007,23,1.94,26,0.278,30,4.21,55,0.004,56,0.004,89,1.912,90,1.634,91,1.341,92,2.008,96,3.344,112,2.638,134,0.921,153,2.335,185,4.605,252,2.743,302,3.838,336,3.899,338,3.899,339,3.344,400,2.638,449,2.175,450,1.782,490,4.678,598,2.543,616,3.899,765,3.838,767,3.558,1241,3.581,1513,3.899,1666,2.743,1670,2.743,1672,2.743,1674,2.743,1675,2.743,1678,2.743,1723,4.678,1725,4.678,1756,3.581,1945,4.678,2447,5.514,2754,3.899,3104,3.899,3317,3.344,3318,3.899,3319,4.382,3320,4.382,3321,6.131,3322,7.659,3323,6.131,3324,4.382,3325,6.131,3326,4.382,3327,6.131,3328,6.131,3329,6.131,3330,4.382,3331,6.131,3332,4.382,3333,4.382,3334,4.382,3335,4.382,3336,4.382,3337,4.382,3338,4.382,3339,4.382,3340,4.382,3341,4.382,3342,4.382,3343,4.382,3344,4.382,3345,3.899,3346,4.382,3347,4.382,3348,4.382,3349,4.382,3350,4.382,3351,4.382,3352,4.382,3353,4.382,3354,4.382,3355,4.382,3356,4.382,3357,4.382,3358,4.382,3359,4.382,3360,6.131,3361,4.382,3362,4.382,3363,4.382,3364,4.382,3365,4.382,3366,4.382,3367,4.382,3368,4.382,3369,4.382,3370,4.382,3371,4.382,3372,4.382,3373,4.382,3374,6.131,3375,6.131,3376,6.131,3377,6.131,3378,4.382,3379,4.382,3380,4.382,3381,4.382,3382,4.382,3383,4.382,3384,4.382,3385,4.382]],["title/miscellaneous/functions.html",[3317,2.972,3386,5.016]],["body/miscellaneous/functions.html",[10,0.177,21,0.006,26,0.464,42,0.831,43,0.592,55,0.006,56,0.006,3317,5.58,3386,6.507,3387,9.015,3388,8.519,3389,8.519,3390,7.312,3391,7.312,3392,7.312]],["title/index.html",[10,0.095,2517,3.466,3393,3.894]],["body/index.html",[19,2.483,21,0.006,55,0.006,56,0.006,1697,6.43,3394,8.971,3395,7.226,3396,7.226,3397,7.226,3398,7.226,3399,7.226,3400,8.461,3401,8.461,3402,8.461,3403,7.226,3404,7.226,3405,7.226,3406,7.226,3407,7.226]],["title/modules.html",[556,3.377]],["body/modules.html",[21,0.006,55,0.006,56,0.006,555,4.781,556,3.495,560,4.781,561,4.337,562,4.337,563,4.337,564,3.998,565,4.157,566,4.781,567,3.998,568,3.998,3408,9.684,3409,9.684,3410,9.684,3411,9.684]],["title/overview.html",[3412,5.711]],["body/overview.html",[2,0.565,21,0.007,30,1.8,55,0.004,56,0.004,121,1.349,159,4.822,460,4.822,555,6.802,556,2.067,557,2.985,558,3.494,559,3.494,560,6.122,561,5.553,562,5.817,563,5.658,564,5.363,565,5.324,566,6.333,567,5.001,568,5.811,569,3.181,570,2.202,571,2.132,601,2.202,614,3.494,628,1.755,634,5.424,713,3.494,714,3.494,715,3.494,716,5.08,775,4.776,798,4.124,845,4.552,944,3.494,945,3.494,946,3.494,1070,5.001,1192,5.98,1351,5.001,1353,4.659,1379,2.458,1407,5.681,1459,3.494,1460,3.494,1461,3.494,1693,5.424,1738,3.494,1739,3.494,1740,3.494,1858,3.494,1859,3.494,1860,3.494,2391,3.494,2405,3.494,2407,3.494,2408,3.494,2409,6.339,2732,3.494,2733,3.494,2734,3.494,3131,3.494,3132,3.494,3133,3.494,3345,3.494,3412,3.494,3413,3.927,3414,3.927,3415,3.927,3416,3.927]],["title/properties.html",[11,0.422,3272,3.466]],["body/properties.html",[11,0.556,21,0.007,55,0.006,56,0.006,2004,6.605,3289,6.605,3417,7.423,3418,7.423,3419,7.423,3420,7.423,3421,7.423]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileDTO.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDTO.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"modules/AuthorizationModule.html":{},"classes/BasicConsumer.html":{},"controllers/CancelEmergencyMessageController.html":{},"classes/CategoryRO.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ConfirmUserEmailDTO.html":{},"entities/ContactEntity.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactIdRO.html":{},"controllers/ContactListController.html":{},"modules/ContactModule.html":{},"classes/ContactRO.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/Encrypter.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"classes/ExportUserDataDTO.html":{},"interfaces/File.html":{},"entities/FileCategoryEntity.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"entities/FileEntity.html":{},"classes/FileIdRO.html":{},"controllers/FileListController.html":{},"modules/FileModule.html":{},"classes/FileRO.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"classes/GetAccessTokenDTO.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"interfaces/ICognito.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"interfaces/ITimeSlotData.html":{},"interfaces/IUserData.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"controllers/NotePositiveInfoController.html":{},"classes/NotePositiveInfoDTO.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"modules/QueueModule.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"guards/RolesGuard.html":{},"modules/SchedulerModule.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"classes/SendEmergencyMessageDTO.html":{},"controllers/SendSMSController.html":{},"classes/SendSmsDTO.html":{},"controllers/SendTestMessageController.html":{},"classes/SuccessRO.html":{},"entities/TimeSlotDayEntity.html":{},"classes/TimeSlotDayRepository.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TimeSlotRepository.html":{},"classes/TokenRO.html":{},"modules/TriggerTimeSlotModule.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"classes/UpdateContactDTO.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"controllers/UploadFileController.html":{},"interfaces/UploadResult.html":{},"entities/UserEntity.html":{},"classes/UserEntitySubscriber.html":{},"modules/UserModule.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":341,"title":{},"body":{"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"injectables/ExportService.html":{},"injectables/NotificationService.html":{},"classes/PositiveInfoRepository.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UserEntity.html":{}}}],["0.0.1",{"_index":3289,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.1.13",{"_index":3307,"title":{},"body":{"dependencies.html":{}}}],["0.2.45",{"_index":3316,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":3284,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":3275,"title":{},"body":{"dependencies.html":{}}}],["0.6.4",{"_index":3303,"title":{},"body":{"dependencies.html":{}}}],["000z",{"_index":2463,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["1",{"_index":30,"title":{"controllers/DeleteContactController-1.html":{},"injectables/MessageService-1.html":{}},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"injectables/AuthenticationService.html":{},"injectables/MessageService.html":{},"injectables/NotificationService.html":{},"classes/PositiveInfoRepository.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRepository.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.1.6",{"_index":3277,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":614,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["10.0.2",{"_index":3288,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":105,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"classes/AddContactDTO.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"entities/ContactEntity.html":{},"entities/FileEntity.html":{},"entities/ProfileEntity.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateContactDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{}}}],["1000",{"_index":2232,"title":{},"body":{"entities/ProfileEntity.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{}}}],["1024",{"_index":1569,"title":{},"body":{"injectables/FileService.html":{}}}],["12",{"_index":107,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"classes/AddContactDTO.html":{},"entities/ContactEntity.html":{},"entities/ProfileEntity.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateContactDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{}}}],["12/08/1986",{"_index":2953,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{}}}],["123456789",{"_index":109,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"classes/AddContactDTO.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateContactDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{}}}],["13",{"_index":2591,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["16",{"_index":2484,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["16.0.0",{"_index":3286,"title":{},"body":{"dependencies.html":{}}}],["17.6.0",{"_index":3297,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":3415,"title":{},"body":{"overview.html":{}}}],["19",{"_index":2462,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["2",{"_index":96,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"miscellaneous/enumerations.html":{}}}],["2.0.0",{"_index":3280,"title":{},"body":{"dependencies.html":{}}}],["2.0.1",{"_index":3274,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":3299,"title":{},"body":{"dependencies.html":{}}}],["2.1088.0",{"_index":3282,"title":{},"body":{"dependencies.html":{}}}],["2.18.1",{"_index":3302,"title":{},"body":{"dependencies.html":{}}}],["2.29.2",{"_index":3300,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":270,"title":{},"body":{"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"entities/ProfileEntity.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"entities/UserEntity.html":{}}}],["200})@apioperation({summary",{"_index":1600,"title":{},"body":{"controllers/GetAccessTokenController.html":{},"controllers/LogoutController.html":{}}}],["201",{"_index":130,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{}}}],["24",{"_index":3413,"title":{},"body":{"overview.html":{}}}],["255",{"_index":325,"title":{},"body":{"classes/AddFileTable1630406751456.html":{},"entities/FileEntity.html":{}}}],["256",{"_index":1114,"title":{},"body":{"classes/Encrypter.html":{}}}],["2880",{"_index":1856,"title":{},"body":{"classes/NotePositiveInfoDTO.html":{}}}],["3",{"_index":112,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"classes/AddContactDTO.html":{},"entities/ContactEntity.html":{},"entities/ProfileEntity.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateContactDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"miscellaneous/enumerations.html":{}}}],["3.0.2",{"_index":3309,"title":{},"body":{"dependencies.html":{}}}],["3.2.27",{"_index":3291,"title":{},"body":{"dependencies.html":{}}}],["3.3.7",{"_index":3304,"title":{},"body":{"dependencies.html":{}}}],["3.75.0",{"_index":3315,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":2239,"title":{},"body":{"entities/ProfileEntity.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{}}}],["3051696",{"_index":3363,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["3057128",{"_index":3365,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["3057200",{"_index":3367,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["3144840",{"_index":3369,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["320",{"_index":103,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"classes/AddContactDTO.html":{},"entities/ContactEntity.html":{},"classes/ExportUserDataDTO.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateContactDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{}}}],["36",{"_index":249,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"classes/ConfirmUserEmailDTO.html":{},"entities/ContactEntity.html":{},"entities/FileEntity.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{},"entities/UserEntity.html":{}}}],["4",{"_index":3341,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["4.0.0",{"_index":3305,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":3314,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":3283,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":132,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"classes/CustomError.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["404",{"_index":1185,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["5",{"_index":339,"title":{},"body":{"classes/AddLimitToFileCategoryTable1634809042779.html":{},"injectables/SchedulerService.html":{},"classes/TimeSlotRepository.html":{},"miscellaneous/enumerations.html":{}}}],["5.0.2",{"_index":3293,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":3279,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1434,"title":{},"body":{"entities/FileEntity.html":{}}}],["6",{"_index":252,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"miscellaneous/enumerations.html":{}}}],["7",{"_index":3345,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["7.1.0",{"_index":3296,"title":{},"body":{"dependencies.html":{}}}],["7.5.4",{"_index":3311,"title":{},"body":{"dependencies.html":{}}}],["78",{"_index":3416,"title":{},"body":{"overview.html":{}}}],["8.0.3",{"_index":3281,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":3278,"title":{},"body":{"dependencies.html":{}}}],["8.4.0",{"_index":3276,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":3298,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":3414,"title":{},"body":{"overview.html":{}}}],["_",{"_index":1586,"title":{},"body":{"injectables/FileService.html":{}}}],["__dirname}/**/*.entity",{"_index":609,"title":{},"body":{"modules/AppModule.html":{}}}],["__dirname}/**/*.entity{.ts,.js",{"_index":602,"title":{},"body":{"modules/AppModule.html":{}}}],["__dirname}/migrations/*{.ts,.js",{"_index":607,"title":{},"body":{"modules/AppModule.html":{}}}],["_location",{"_index":2039,"title":{},"body":{"injectables/NotificationService.html":{}}}],["access",{"_index":732,"title":{},"body":{"modules/AuthorizationModule.html":{},"controllers/GetAccessTokenController.html":{},"classes/GetAccessTokenDTO.html":{}}}],["accesstoken",{"_index":2731,"title":{},"body":{"classes/TokenRO.html":{}}}],["accesstoken'})@apiproperty({type",{"_index":2729,"title":{},"body":{"classes/TokenRO.html":{}}}],["according",{"_index":2453,"title":{},"body":{"injectables/SchedulerService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["account",{"_index":1102,"title":{},"body":{"controllers/DeleteUserController.html":{}}}],["account.controller",{"_index":3146,"title":{},"body":{"modules/UserModule.html":{}}}],["account.controller.ts",{"_index":1099,"title":{},"body":{"controllers/DeleteUserController.html":{}}}],["account.controller.ts:33",{"_index":1104,"title":{},"body":{"controllers/DeleteUserController.html":{}}}],["active",{"_index":88,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddTimeSlotDTO.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"entities/ContactEntity.html":{},"classes/ContactRO.html":{},"interfaces/IContactData.html":{},"interfaces/ITimeSlotData.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotRO.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateContactDTO.html":{},"classes/UpdateTimeSlotDTO.html":{}}}],["activeslot",{"_index":2207,"title":{},"body":{"injectables/PositiveInfoService.html":{},"injectables/SchedulerService.html":{}}}],["activeslot.to",{"_index":2209,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["add",{"_index":117,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"classes/UpdateTimeSlotDTO.html":{}}}],["add(jobname",{"_index":1815,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["add(this.config.get('cloudfrontsigner.validitytime",{"_index":1553,"title":{},"body":{"injectables/FileService.html":{}}}],["addaccountsettingscolumnstoprofiletable.ts",{"_index":7,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{}}}],["addaccountsettingscolumnstoprofiletable.ts:22",{"_index":47,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{}}}],["addaccountsettingscolumnstoprofiletable.ts:26",{"_index":41,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{}}}],["addaccountsettingscolumnstoprofiletable.ts:6",{"_index":38,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{}}}],["addaccountsettingscolumnstoprofiletable.ts:7",{"_index":35,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{}}}],["addaccountsettingscolumnstoprofiletable1626771292134",{"_index":1,"title":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{}},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{}}}],["addalerttimetopositiveinfotable.ts",{"_index":59,"title":{},"body":{"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{}}}],["addalerttimetopositiveinfotable.ts:13",{"_index":67,"title":{},"body":{"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{}}}],["addalerttimetopositiveinfotable.ts:17",{"_index":66,"title":{},"body":{"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{}}}],["addalerttimetopositiveinfotable.ts:6",{"_index":65,"title":{},"body":{"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{}}}],["addalerttimetopositiveinfotable.ts:7",{"_index":63,"title":{},"body":{"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{}}}],["addalerttimetopositiveinfotable1650544527662",{"_index":57,"title":{"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{}},"body":{"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{}}}],["addautomatedemergencysettings.ts",{"_index":73,"title":{},"body":{"classes/AddAutomatedEmergencySettings1628507521688.html":{}}}],["addautomatedemergencysettings.ts:22",{"_index":79,"title":{},"body":{"classes/AddAutomatedEmergencySettings1628507521688.html":{}}}],["addautomatedemergencysettings.ts:26",{"_index":78,"title":{},"body":{"classes/AddAutomatedEmergencySettings1628507521688.html":{}}}],["addautomatedemergencysettings.ts:6",{"_index":77,"title":{},"body":{"classes/AddAutomatedEmergencySettings1628507521688.html":{}}}],["addautomatedemergencysettings.ts:7",{"_index":76,"title":{},"body":{"classes/AddAutomatedEmergencySettings1628507521688.html":{}}}],["addautomatedemergencysettings1628507521688",{"_index":71,"title":{"classes/AddAutomatedEmergencySettings1628507521688.html":{}},"body":{"classes/AddAutomatedEmergencySettings1628507521688.html":{}}}],["addcontactandcheckphonedto",{"_index":80,"title":{"classes/AddContactAndCheckPhoneDTO.html":{}},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{}}}],["addcontactandcheckphonenumber",{"_index":124,"title":{},"body":{"controllers/AddContactController.html":{}}}],["addcontactandcheckphonenumber(user",{"_index":126,"title":{},"body":{"controllers/AddContactController.html":{}}}],["addcontactandcheckphoneschema",{"_index":181,"title":{},"body":{"controllers/AddContactController.html":{}}}],["addcontactcontroller",{"_index":120,"title":{"controllers/AddContactController.html":{}},"body":{"controllers/AddContactController.html":{},"modules/ContactModule.html":{}}}],["addcontactdto",{"_index":86,"title":{"classes/AddContactDTO.html":{}},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"classes/AddContactDTO.html":{},"injectables/ContactService.html":{}}}],["addcontactdto:11",{"_index":104,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{}}}],["addcontactdto:14",{"_index":113,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{}}}],["addcontactdto:22",{"_index":110,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{}}}],["addcontactdto:25",{"_index":102,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{}}}],["addcontactdto:5",{"_index":106,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{}}}],["addcontactdto:8",{"_index":114,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{}}}],["addcontactschema",{"_index":167,"title":{},"body":{"controllers/AddContactController.html":{}}}],["addcontacttable.ts",{"_index":228,"title":{},"body":{"classes/AddContactTable1625819654567.html":{}}}],["addcontacttable.ts:10",{"_index":232,"title":{},"body":{"classes/AddContactTable1625819654567.html":{}}}],["addcontacttable.ts:11",{"_index":231,"title":{},"body":{"classes/AddContactTable1625819654567.html":{}}}],["addcontacttable.ts:13",{"_index":234,"title":{},"body":{"classes/AddContactTable1625819654567.html":{}}}],["addcontacttable.ts:98",{"_index":233,"title":{},"body":{"classes/AddContactTable1625819654567.html":{}}}],["addcontacttable1625819654567",{"_index":226,"title":{"classes/AddContactTable1625819654567.html":{}},"body":{"classes/AddContactTable1625819654567.html":{}}}],["addcontactwithoutphonenumberverification",{"_index":125,"title":{},"body":{"controllers/AddContactController.html":{}}}],["addcontactwithoutphonenumberverification(user",{"_index":138,"title":{},"body":{"controllers/AddContactController.html":{}}}],["adddeviceidtousertable.ts",{"_index":268,"title":{},"body":{"classes/AddDeviceIdToUserTable1632482760947.html":{}}}],["adddeviceidtousertable.ts:12",{"_index":274,"title":{},"body":{"classes/AddDeviceIdToUserTable1632482760947.html":{}}}],["adddeviceidtousertable.ts:16",{"_index":273,"title":{},"body":{"classes/AddDeviceIdToUserTable1632482760947.html":{}}}],["adddeviceidtousertable.ts:4",{"_index":272,"title":{},"body":{"classes/AddDeviceIdToUserTable1632482760947.html":{}}}],["adddeviceidtousertable.ts:5",{"_index":271,"title":{},"body":{"classes/AddDeviceIdToUserTable1632482760947.html":{}}}],["adddeviceidtousertable1632482760947",{"_index":266,"title":{"classes/AddDeviceIdToUserTable1632482760947.html":{}},"body":{"classes/AddDeviceIdToUserTable1632482760947.html":{}}}],["addedslot",{"_index":2796,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["addedslot.id",{"_index":2800,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["addemergencybuttoncolumnstoprofiletable.ts",{"_index":277,"title":{},"body":{"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{}}}],["addemergencybuttoncolumnstoprofiletable.ts:38",{"_index":286,"title":{},"body":{"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{}}}],["addemergencybuttoncolumnstoprofiletable.ts:42",{"_index":285,"title":{},"body":{"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{}}}],["addemergencybuttoncolumnstoprofiletable.ts:5",{"_index":284,"title":{},"body":{"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{}}}],["addemergencybuttoncolumnstoprofiletable.ts:6",{"_index":283,"title":{},"body":{"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{}}}],["addemergencybuttoncolumnstoprofiletable1626779640972",{"_index":275,"title":{"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{}},"body":{"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{}}}],["addfilecategorytablewithvalues.ts",{"_index":289,"title":{},"body":{"classes/AddFileCategoryTableWithValues1630406730426.html":{}}}],["addfilecategorytablewithvalues.ts:42",{"_index":292,"title":{},"body":{"classes/AddFileCategoryTableWithValues1630406730426.html":{}}}],["addfilecategorytablewithvalues.ts:6",{"_index":291,"title":{},"body":{"classes/AddFileCategoryTableWithValues1630406730426.html":{}}}],["addfilecategorytablewithvalues.ts:8",{"_index":293,"title":{},"body":{"classes/AddFileCategoryTableWithValues1630406730426.html":{}}}],["addfilecategorytablewithvalues1630406730426",{"_index":287,"title":{"classes/AddFileCategoryTableWithValues1630406730426.html":{}},"body":{"classes/AddFileCategoryTableWithValues1630406730426.html":{}}}],["addfiledto",{"_index":299,"title":{"classes/AddFileDTO.html":{}},"body":{"classes/AddFileDTO.html":{},"controllers/UploadFileController.html":{}}}],["addfileschema",{"_index":3084,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["addfiletable.ts",{"_index":315,"title":{},"body":{"classes/AddFileTable1630406751456.html":{}}}],["addfiletable.ts:10",{"_index":321,"title":{},"body":{"classes/AddFileTable1630406751456.html":{}}}],["addfiletable.ts:107",{"_index":322,"title":{},"body":{"classes/AddFileTable1630406751456.html":{}}}],["addfiletable.ts:11",{"_index":318,"title":{},"body":{"classes/AddFileTable1630406751456.html":{}}}],["addfiletable.ts:12",{"_index":320,"title":{},"body":{"classes/AddFileTable1630406751456.html":{}}}],["addfiletable.ts:14",{"_index":323,"title":{},"body":{"classes/AddFileTable1630406751456.html":{}}}],["addfiletable1630406751456",{"_index":313,"title":{"classes/AddFileTable1630406751456.html":{}},"body":{"classes/AddFileTable1630406751456.html":{}}}],["addjobtoqueue",{"_index":1785,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["addjobtoqueue(jobname",{"_index":1792,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["addlimittofilecategorytable.ts",{"_index":334,"title":{},"body":{"classes/AddLimitToFileCategoryTable1634809042779.html":{}}}],["addlimittofilecategorytable.ts:13",{"_index":340,"title":{},"body":{"classes/AddLimitToFileCategoryTable1634809042779.html":{}}}],["addlimittofilecategorytable.ts:28",{"_index":346,"title":{},"body":{"classes/AddLimitToFileCategoryTable1634809042779.html":{}}}],["addlimittofilecategorytable.ts:39",{"_index":345,"title":{},"body":{"classes/AddLimitToFileCategoryTable1634809042779.html":{}}}],["addlimittofilecategorytable.ts:6",{"_index":344,"title":{},"body":{"classes/AddLimitToFileCategoryTable1634809042779.html":{}}}],["addlimittofilecategorytable.ts:7",{"_index":343,"title":{},"body":{"classes/AddLimitToFileCategoryTable1634809042779.html":{}}}],["addlimittofilecategorytable1634809042779",{"_index":332,"title":{"classes/AddLimitToFileCategoryTable1634809042779.html":{}},"body":{"classes/AddLimitToFileCategoryTable1634809042779.html":{}}}],["addlocationtopositiveinfotable.ts",{"_index":354,"title":{},"body":{"classes/AddLocationToPositiveInfoTable1633335269397.html":{}}}],["addlocationtopositiveinfotable.ts:12",{"_index":359,"title":{},"body":{"classes/AddLocationToPositiveInfoTable1633335269397.html":{}}}],["addlocationtopositiveinfotable.ts:16",{"_index":358,"title":{},"body":{"classes/AddLocationToPositiveInfoTable1633335269397.html":{}}}],["addlocationtopositiveinfotable.ts:5",{"_index":357,"title":{},"body":{"classes/AddLocationToPositiveInfoTable1633335269397.html":{}}}],["addlocationtopositiveinfotable.ts:6",{"_index":356,"title":{},"body":{"classes/AddLocationToPositiveInfoTable1633335269397.html":{}}}],["addlocationtopositiveinfotable1633335269397",{"_index":352,"title":{"classes/AddLocationToPositiveInfoTable1633335269397.html":{}},"body":{"classes/AddLocationToPositiveInfoTable1633335269397.html":{}}}],["addlocationurltoprofile.ts",{"_index":362,"title":{},"body":{"classes/AddLocationUrlToProfile1651485257652.html":{}}}],["addlocationurltoprofile.ts:14",{"_index":367,"title":{},"body":{"classes/AddLocationUrlToProfile1651485257652.html":{}}}],["addlocationurltoprofile.ts:18",{"_index":366,"title":{},"body":{"classes/AddLocationUrlToProfile1651485257652.html":{}}}],["addlocationurltoprofile.ts:5",{"_index":365,"title":{},"body":{"classes/AddLocationUrlToProfile1651485257652.html":{}}}],["addlocationurltoprofile.ts:7",{"_index":364,"title":{},"body":{"classes/AddLocationUrlToProfile1651485257652.html":{}}}],["addlocationurltoprofile1651485257652",{"_index":360,"title":{"classes/AddLocationUrlToProfile1651485257652.html":{}},"body":{"classes/AddLocationUrlToProfile1651485257652.html":{}}}],["addmedicalinfocolumnstoprofiletable.ts",{"_index":370,"title":{},"body":{"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{}}}],["addmedicalinfocolumnstoprofiletable.ts:34",{"_index":379,"title":{},"body":{"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{}}}],["addmedicalinfocolumnstoprofiletable.ts:38",{"_index":378,"title":{},"body":{"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{}}}],["addmedicalinfocolumnstoprofiletable.ts:5",{"_index":377,"title":{},"body":{"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{}}}],["addmedicalinfocolumnstoprofiletable.ts:6",{"_index":376,"title":{},"body":{"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{}}}],["addmedicalinfocolumnstoprofiletable1626332132301",{"_index":368,"title":{"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{}},"body":{"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{}}}],["addpositiveinfotable.ts",{"_index":382,"title":{},"body":{"classes/AddPositiveInfoTable1632807482818.html":{}}}],["addpositiveinfotable.ts:10",{"_index":385,"title":{},"body":{"classes/AddPositiveInfoTable1632807482818.html":{}}}],["addpositiveinfotable.ts:11",{"_index":384,"title":{},"body":{"classes/AddPositiveInfoTable1632807482818.html":{}}}],["addpositiveinfotable.ts:13",{"_index":387,"title":{},"body":{"classes/AddPositiveInfoTable1632807482818.html":{}}}],["addpositiveinfotable.ts:72",{"_index":386,"title":{},"body":{"classes/AddPositiveInfoTable1632807482818.html":{}}}],["addpositiveinfotable1632807482818",{"_index":380,"title":{"classes/AddPositiveInfoTable1632807482818.html":{}},"body":{"classes/AddPositiveInfoTable1632807482818.html":{}}}],["addprofiletable.ts",{"_index":394,"title":{},"body":{"classes/AddProfileTable1626246168913.html":{}}}],["addprofiletable.ts:10",{"_index":397,"title":{},"body":{"classes/AddProfileTable1626246168913.html":{}}}],["addprofiletable.ts:11",{"_index":396,"title":{},"body":{"classes/AddProfileTable1626246168913.html":{}}}],["addprofiletable.ts:13",{"_index":399,"title":{},"body":{"classes/AddProfileTable1626246168913.html":{}}}],["addprofiletable.ts:97",{"_index":398,"title":{},"body":{"classes/AddProfileTable1626246168913.html":{}}}],["addprofiletable1626246168913",{"_index":392,"title":{"classes/AddProfileTable1626246168913.html":{}},"body":{"classes/AddProfileTable1626246168913.html":{}}}],["addpulsebasedcolumnstoprofiletable.ts",{"_index":404,"title":{},"body":{"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{}}}],["addpulsebasedcolumnstoprofiletable.ts:40",{"_index":413,"title":{},"body":{"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{}}}],["addpulsebasedcolumnstoprofiletable.ts:44",{"_index":412,"title":{},"body":{"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{}}}],["addpulsebasedcolumnstoprofiletable.ts:6",{"_index":411,"title":{},"body":{"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{}}}],["addpulsebasedcolumnstoprofiletable.ts:7",{"_index":410,"title":{},"body":{"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{}}}],["addpulsebasedcolumnstoprofiletable1635501555344",{"_index":402,"title":{"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{}},"body":{"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{}}}],["addpushnotificationtimetopositiveinfotable.ts",{"_index":416,"title":{},"body":{"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{}}}],["addpushnotificationtimetopositiveinfotable.ts:13",{"_index":421,"title":{},"body":{"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{}}}],["addpushnotificationtimetopositiveinfotable.ts:17",{"_index":420,"title":{},"body":{"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{}}}],["addpushnotificationtimetopositiveinfotable.ts:6",{"_index":419,"title":{},"body":{"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{}}}],["addpushnotificationtimetopositiveinfotable.ts:7",{"_index":418,"title":{},"body":{"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{}}}],["addpushnotificationtimetopositiveinfotable1632979503392",{"_index":414,"title":{"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{}},"body":{"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{}}}],["addregularnotificationdatetoprofiletable.ts",{"_index":3267,"title":{},"body":{"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["addregularnotificationdatetoprofiletable.ts:13",{"_index":3271,"title":{},"body":{"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["addregularnotificationdatetoprofiletable.ts:17",{"_index":3270,"title":{},"body":{"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["addregularnotificationdatetoprofiletable.ts:6",{"_index":3269,"title":{},"body":{"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["addregularnotificationdatetoprofiletable.ts:7",{"_index":3268,"title":{},"body":{"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["addregularnotificationdatetoprofiletable1633344018695",{"_index":3265,"title":{"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}},"body":{"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["addregularpushnotificationandfrequencysettingstoprofiletable.ts",{"_index":424,"title":{},"body":{"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{}}}],["addregularpushnotificationandfrequencysettingstoprofiletable.ts:28",{"_index":431,"title":{},"body":{"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{}}}],["addregularpushnotificationandfrequencysettingstoprofiletable.ts:32",{"_index":430,"title":{},"body":{"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{}}}],["addregularpushnotificationandfrequencysettingstoprofiletable.ts:6",{"_index":429,"title":{},"body":{"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{}}}],["addregularpushnotificationandfrequencysettingstoprofiletable.ts:7",{"_index":428,"title":{},"body":{"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{}}}],["addregularpushnotificationandfrequencysettingstoprofiletable1632733981245",{"_index":422,"title":{"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{}},"body":{"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{}}}],["address",{"_index":400,"title":{},"body":{"classes/AddProfileTable1626246168913.html":{},"interfaces/IProfileData.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{},"miscellaneous/enumerations.html":{}}}],["addroletousertable.ts",{"_index":434,"title":{},"body":{"classes/AddRoleToUserTable1625843279739.html":{}}}],["addroletousertable.ts:13",{"_index":439,"title":{},"body":{"classes/AddRoleToUserTable1625843279739.html":{}}}],["addroletousertable.ts:17",{"_index":438,"title":{},"body":{"classes/AddRoleToUserTable1625843279739.html":{}}}],["addroletousertable.ts:4",{"_index":437,"title":{},"body":{"classes/AddRoleToUserTable1625843279739.html":{}}}],["addroletousertable.ts:5",{"_index":436,"title":{},"body":{"classes/AddRoleToUserTable1625843279739.html":{}}}],["addroletousertable1625843279739",{"_index":432,"title":{"classes/AddRoleToUserTable1625843279739.html":{}},"body":{"classes/AddRoleToUserTable1625843279739.html":{}}}],["addselect('date_add(ts.from",{"_index":2709,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["addselect('date_sub(ts.to",{"_index":2707,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["addselect('dayofweek(now",{"_index":2711,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["addselect('now",{"_index":2181,"title":{},"body":{"classes/PositiveInfoRepository.html":{},"classes/ProfileRepository.html":{},"classes/TimeSlotRepository.html":{}}}],["addselect('profile.timezone",{"_index":2337,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["addselect('user.device_id",{"_index":2336,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["addsmstimetopositiveinfotable.ts",{"_index":442,"title":{},"body":{"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{}}}],["addsmstimetopositiveinfotable.ts:13",{"_index":447,"title":{},"body":{"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{}}}],["addsmstimetopositiveinfotable.ts:17",{"_index":446,"title":{},"body":{"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{}}}],["addsmstimetopositiveinfotable.ts:6",{"_index":445,"title":{},"body":{"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{}}}],["addsmstimetopositiveinfotable.ts:7",{"_index":444,"title":{},"body":{"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{}}}],["addsmstimetopositiveinfotable1632995635641",{"_index":440,"title":{"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{}},"body":{"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{}}}],["addtimeslot",{"_index":453,"title":{},"body":{"controllers/AddTimeSlotController.html":{}}}],["addtimeslot(user",{"_index":454,"title":{},"body":{"controllers/AddTimeSlotController.html":{}}}],["addtimeslotcontroller",{"_index":448,"title":{"controllers/AddTimeSlotController.html":{}},"body":{"controllers/AddTimeSlotController.html":{},"modules/TriggerTimeSlotModule.html":{}}}],["addtimeslotdaytable.ts",{"_index":497,"title":{},"body":{"classes/AddTimeSlotDayTable1629364845785.html":{}}}],["addtimeslotdaytable.ts:10",{"_index":501,"title":{},"body":{"classes/AddTimeSlotDayTable1629364845785.html":{}}}],["addtimeslotdaytable.ts:11",{"_index":499,"title":{},"body":{"classes/AddTimeSlotDayTable1629364845785.html":{}}}],["addtimeslotdaytable.ts:13",{"_index":503,"title":{},"body":{"classes/AddTimeSlotDayTable1629364845785.html":{}}}],["addtimeslotdaytable.ts:58",{"_index":502,"title":{},"body":{"classes/AddTimeSlotDayTable1629364845785.html":{}}}],["addtimeslotdaytable1629364845785",{"_index":495,"title":{"classes/AddTimeSlotDayTable1629364845785.html":{}},"body":{"classes/AddTimeSlotDayTable1629364845785.html":{}}}],["addtimeslotdto",{"_index":455,"title":{"classes/AddTimeSlotDTO.html":{}},"body":{"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDTO.html":{},"injectables/TriggerTimeSlotService.html":{},"classes/UpdateTimeSlotDTO.html":{}}}],["addtimeslotdto:10",{"_index":2924,"title":{},"body":{"classes/UpdateTimeSlotDTO.html":{}}}],["addtimeslotdto:13",{"_index":2926,"title":{},"body":{"classes/UpdateTimeSlotDTO.html":{}}}],["addtimeslotdto:16",{"_index":2925,"title":{},"body":{"classes/UpdateTimeSlotDTO.html":{}}}],["addtimeslotdto:25",{"_index":2923,"title":{},"body":{"classes/UpdateTimeSlotDTO.html":{}}}],["addtimeslotdto:7",{"_index":2922,"title":{},"body":{"classes/UpdateTimeSlotDTO.html":{}}}],["addtimeslotschema",{"_index":466,"title":{},"body":{"controllers/AddTimeSlotController.html":{}}}],["addtimeslottable.ts",{"_index":510,"title":{},"body":{"classes/AddTimeSlotTable1629364182226.html":{}}}],["addtimeslottable.ts:10",{"_index":513,"title":{},"body":{"classes/AddTimeSlotTable1629364182226.html":{}}}],["addtimeslottable.ts:11",{"_index":512,"title":{},"body":{"classes/AddTimeSlotTable1629364182226.html":{}}}],["addtimeslottable.ts:13",{"_index":515,"title":{},"body":{"classes/AddTimeSlotTable1629364182226.html":{}}}],["addtimeslottable.ts:78",{"_index":514,"title":{},"body":{"classes/AddTimeSlotTable1629364182226.html":{}}}],["addtimeslottable1629364182226",{"_index":508,"title":{"classes/AddTimeSlotTable1629364182226.html":{}},"body":{"classes/AddTimeSlotTable1629364182226.html":{}}}],["addtimezonetoprofile.ts",{"_index":519,"title":{},"body":{"classes/AddTimezoneToProfile1651485422367.html":{}}}],["addtimezonetoprofile.ts:15",{"_index":523,"title":{},"body":{"classes/AddTimezoneToProfile1651485422367.html":{}}}],["addtimezonetoprofile.ts:19",{"_index":522,"title":{},"body":{"classes/AddTimezoneToProfile1651485422367.html":{}}}],["addtimezonetoprofile.ts:5",{"_index":521,"title":{},"body":{"classes/AddTimezoneToProfile1651485422367.html":{}}}],["addtimezonetoprofile.ts:7",{"_index":520,"title":{},"body":{"classes/AddTimezoneToProfile1651485422367.html":{}}}],["addtimezonetoprofile1651485422367",{"_index":517,"title":{"classes/AddTimezoneToProfile1651485422367.html":{}},"body":{"classes/AddTimezoneToProfile1651485422367.html":{}}}],["addtimezonetoslots.ts",{"_index":526,"title":{},"body":{"classes/AddTimezoneToSlots1651485422366.html":{}}}],["addtimezonetoslots.ts:16",{"_index":530,"title":{},"body":{"classes/AddTimezoneToSlots1651485422366.html":{}}}],["addtimezonetoslots.ts:20",{"_index":529,"title":{},"body":{"classes/AddTimezoneToSlots1651485422366.html":{}}}],["addtimezonetoslots.ts:6",{"_index":528,"title":{},"body":{"classes/AddTimezoneToSlots1651485422366.html":{}}}],["addtimezonetoslots.ts:8",{"_index":527,"title":{},"body":{"classes/AddTimezoneToSlots1651485422366.html":{}}}],["addtimezonetoslots1651485422366",{"_index":524,"title":{"classes/AddTimezoneToSlots1651485422366.html":{}},"body":{"classes/AddTimezoneToSlots1651485422366.html":{}}}],["addtriggertimetopositiveinfotable.ts",{"_index":533,"title":{},"body":{"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{}}}],["addtriggertimetopositiveinfotable.ts:13",{"_index":538,"title":{},"body":{"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{}}}],["addtriggertimetopositiveinfotable.ts:17",{"_index":537,"title":{},"body":{"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{}}}],["addtriggertimetopositiveinfotable.ts:6",{"_index":536,"title":{},"body":{"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{}}}],["addtriggertimetopositiveinfotable.ts:7",{"_index":535,"title":{},"body":{"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{}}}],["addtriggertimetopositiveinfotable1633099510340",{"_index":531,"title":{"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{}},"body":{"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{}}}],["addunconfirmedemailtable.ts",{"_index":541,"title":{},"body":{"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["addunconfirmedemailtable.ts:11",{"_index":545,"title":{},"body":{"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["addunconfirmedemailtable.ts:12",{"_index":543,"title":{},"body":{"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["addunconfirmedemailtable.ts:14",{"_index":547,"title":{},"body":{"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["addunconfirmedemailtable.ts:72",{"_index":546,"title":{},"body":{"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["addunconfirmedemailtable1626421452168",{"_index":539,"title":{"classes/AddUnconfirmedEmailTable1626421452168.html":{}},"body":{"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["addusertable.ts",{"_index":550,"title":{},"body":{"classes/AddUserTable1625563196521.html":{}}}],["addusertable.ts:4",{"_index":551,"title":{},"body":{"classes/AddUserTable1625563196521.html":{}}}],["addusertable.ts:41",{"_index":552,"title":{},"body":{"classes/AddUserTable1625563196521.html":{}}}],["addusertable.ts:6",{"_index":553,"title":{},"body":{"classes/AddUserTable1625563196521.html":{}}}],["addusertable1625563196521",{"_index":548,"title":{"classes/AddUserTable1625563196521.html":{}},"body":{"classes/AddUserTable1625563196521.html":{}}}],["admin",{"_index":3287,"title":{},"body":{"dependencies.html":{}}}],["aes",{"_index":1113,"title":{},"body":{"classes/Encrypter.html":{}}}],["aes256",{"_index":1579,"title":{},"body":{"injectables/FileService.html":{}}}],["afterload",{"_index":900,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["afterload(entity",{"_index":905,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["alert",{"_index":2565,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["alert_time",{"_index":61,"title":{},"body":{"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"entities/PositiveInfoEntity.html":{},"injectables/SchedulerService.html":{}}}],["alerttime",{"_index":2101,"title":{},"body":{"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{}}}],["algorithm",{"_index":1110,"title":{},"body":{"classes/Encrypter.html":{}}}],["aliasexistsexception",{"_index":2876,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["allow_notifications",{"_index":27,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"entities/ProfileEntity.html":{}}}],["allownotifications",{"_index":2218,"title":{},"body":{"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{}}}],["alter",{"_index":1824,"title":{},"body":{"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{}}}],["andwhere",{"_index":2344,"title":{},"body":{"classes/ProfileRepository.html":{},"classes/TimeSlotRepository.html":{}}}],["andwhere('automated_emergency",{"_index":2343,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["andwhere('now",{"_index":2169,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["andwhere('positive_info_period",{"_index":2166,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["andwhere('positiveinfo.push_notification_time",{"_index":2339,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["andwhere('positiveinfo.sms_time",{"_index":2340,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["andwhere('prefix",{"_index":2170,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["andwhere('regular_push_notification",{"_index":2342,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["andwhere('sms_time",{"_index":2167,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["andwhere('trigger_time",{"_index":2178,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["andwhere('ts.active",{"_index":2714,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["andwhere('user.device_id",{"_index":2341,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["andwhere(`now",{"_index":2177,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["any).validate(+data",{"_index":2060,"title":{},"body":{"injectables/NumericIdValidationPipe.html":{}}}],["any).validate(obj",{"_index":3264,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["apibearerauth",{"_index":148,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["apibody",{"_index":3078,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["apiconsumes",{"_index":3079,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["apiconsumes('multipart/form",{"_index":3088,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["apioperation",{"_index":150,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["apiproperty",{"_index":115,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"classes/AddContactDTO.html":{},"classes/AddFileDTO.html":{},"classes/AddTimeSlotDTO.html":{},"classes/CategoryRO.html":{},"classes/ConfirmUserEmailDTO.html":{},"classes/ContactIdRO.html":{},"classes/ContactRO.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExportUserDataDTO.html":{},"classes/FileIdRO.html":{},"classes/FileRO.html":{},"classes/GetAccessTokenDTO.html":{},"classes/NotePositiveInfoDTO.html":{},"classes/ProfileRO.html":{},"classes/SendEmergencyMessageDTO.html":{},"classes/SendSmsDTO.html":{},"classes/SuccessRO.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TokenRO.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateContactDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{}}}],["apiproperty({type",{"_index":94,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"classes/AddContactDTO.html":{},"classes/AddFileDTO.html":{},"classes/AddTimeSlotDTO.html":{},"classes/ConfirmUserEmailDTO.html":{},"classes/ExportUserDataDTO.html":{},"classes/GetAccessTokenDTO.html":{},"classes/NotePositiveInfoDTO.html":{},"classes/ProfileRO.html":{},"classes/SendEmergencyMessageDTO.html":{},"classes/SendSmsDTO.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateContactDTO.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{}}}],["apiresponse",{"_index":149,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["apiresponse({status",{"_index":129,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["apitags",{"_index":147,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["apitags(\"message",{"_index":2603,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{}}}],["apitags(\"user",{"_index":2648,"title":{},"body":{"controllers/SendTestMessageController.html":{}}}],["apitags('auth",{"_index":1611,"title":{},"body":{"controllers/GetAccessTokenController.html":{},"controllers/LogoutController.html":{}}}],["apitags('contact",{"_index":192,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/UpdateContactController.html":{}}}],["apitags('file",{"_index":1075,"title":{},"body":{"controllers/DeleteContactController.html":{},"controllers/FileListController.html":{},"controllers/UploadFileController.html":{}}}],["apitags('message",{"_index":779,"title":{},"body":{"controllers/CancelEmergencyMessageController.html":{},"controllers/SendSMSController.html":{}}}],["apitags('time",{"_index":471,"title":{},"body":{"controllers/AddTimeSlotController.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["apitags('user",{"_index":848,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/GetUserController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["app",{"_index":3392,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app.module",{"_index":2415,"title":{},"body":{"modules/SchedulerModule.html":{}}}],["application",{"_index":1697,"title":{},"body":{"controllers/LogoutController.html":{},"index.html":{}}}],["application'})@post('logout",{"_index":1690,"title":{},"body":{"controllers/LogoutController.html":{}}}],["application/msword",{"_index":1562,"title":{},"body":{"injectables/FileService.html":{}}}],["application/pdf",{"_index":1561,"title":{},"body":{"injectables/FileService.html":{}}}],["application/vnd.ms",{"_index":1978,"title":{},"body":{"injectables/NotificationService.html":{}}}],["application/vnd.openxmlformats",{"_index":1563,"title":{},"body":{"injectables/FileService.html":{}}}],["appmodule",{"_index":555,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchedulerModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":627,"title":{"injectables/AppService.html":{}},"body":{"injectables/AppService.html":{}}}],["argumentmetadata",{"_index":2052,"title":{},"body":{"injectables/NumericIdValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["argumentshost",{"_index":1162,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["array.isarray(slot",{"_index":2457,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["asc",{"_index":1423,"title":{},"body":{"injectables/FileCategoryService.html":{}}}],["async",{"_index":17,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"controllers/AddContactController.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"injectables/AuthenticationService.html":{},"controllers/CancelEmergencyMessageController.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"injectables/ContactService.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"injectables/FileCategoryService.html":{},"controllers/FileListController.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"classes/PassportStrategy.html":{},"injectables/PositiveInfoService.html":{},"injectables/ProfileService.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["attachment",{"_index":1995,"title":{},"body":{"injectables/NotificationService.html":{}}}],["attachment's",{"_index":1986,"title":{},"body":{"injectables/NotificationService.html":{}}}],["attachments",{"_index":1983,"title":{},"body":{"injectables/NotificationService.html":{}}}],["attachments.push",{"_index":1990,"title":{},"body":{"injectables/NotificationService.html":{}}}],["attachments.push(attachment",{"_index":1997,"title":{},"body":{"injectables/NotificationService.html":{}}}],["attempts",{"_index":2375,"title":{},"body":{"modules/QueueModule.html":{}}}],["attribute",{"_index":700,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["attribute.value",{"_index":702,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["attributes",{"_index":698,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["attributes[attribute.name",{"_index":701,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auth",{"_index":811,"title":{},"body":{"injectables/CognitoStrategy.html":{},"controllers/GetAccessTokenController.html":{},"controllers/LogoutController.html":{},"classes/PassportStrategy.html":{}}}],["authenticate",{"_index":639,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/PassportStrategy.html":{}}}],["authenticate(request",{"_index":2077,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["authenticate(token",{"_index":648,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/PassportStrategy.html":{}}}],["authentication/authenticaiton.module",{"_index":577,"title":{},"body":{"modules/AppModule.html":{}}}],["authentication/decorator/roles.decorator",{"_index":154,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["authentication/decorator/user.decorator",{"_index":161,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["authentication/roles.guard",{"_index":152,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["authentication/service/authentication.service",{"_index":1608,"title":{},"body":{"controllers/GetAccessTokenController.html":{}}}],["authenticationservice",{"_index":634,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AuthenticationService.html":{},"modules/AuthorizationModule.html":{},"injectables/CognitoStrategy.html":{},"controllers/GetAccessTokenController.html":{},"classes/PassportStrategy.html":{},"overview.html":{}}}],["authflow",{"_index":705,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authguard",{"_index":172,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["author",{"_index":3421,"title":{},"body":{"properties.html":{}}}],["authorizationmodule",{"_index":560,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationModule.html":{},"modules.html":{},"overview.html":{}}}],["authparameters",{"_index":707,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authservice",{"_index":799,"title":{},"body":{"injectables/CognitoStrategy.html":{}}}],["automated",{"_index":2488,"title":{},"body":{"injectables/SchedulerService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["automated_emergency",{"_index":75,"title":{},"body":{"classes/AddAutomatedEmergencySettings1628507521688.html":{},"entities/ProfileEntity.html":{}}}],["automated_voice_call",{"_index":279,"title":{},"body":{"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{}}}],["automatedemergency",{"_index":1665,"title":{},"body":{"interfaces/IProfileData.html":{},"controllers/LogoutController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/SchedulerService.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{}}}],["available",{"_index":1947,"title":{},"body":{"injectables/NotificationService.html":{}}}],["await",{"_index":51,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"controllers/AddContactController.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"injectables/AuthenticationService.html":{},"controllers/CancelEmergencyMessageController.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"injectables/ContactService.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"injectables/MessageService.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"classes/PassportStrategy.html":{},"injectables/PositiveInfoService.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"injectables/UserService.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["aws",{"_index":659,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/FileService.html":{},"interfaces/ITimeSlotData.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UserRO.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["aws.cloudfront.signer",{"_index":1511,"title":{},"body":{"injectables/FileService.html":{}}}],["aws.cognitoidentityserviceprovider",{"_index":644,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UnconfirmedEmailService.html":{},"injectables/UserService.html":{}}}],["aws.s3",{"_index":1509,"title":{},"body":{"injectables/FileService.html":{}}}],["awscloudfrontsignerprovider",{"_index":1469,"title":{},"body":{"modules/FileModule.html":{}}}],["awss3provider",{"_index":1466,"title":{},"body":{"modules/FileModule.html":{}}}],["axios",{"_index":661,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["backend",{"_index":1769,"title":{},"body":{"injectables/MessageService.html":{}}}],["badrequestexception",{"_index":145,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/CancelEmergencyMessageController.html":{},"injectables/ContactService.html":{},"injectables/FileCategoryService.html":{},"injectables/FileService.html":{},"injectables/MessageService-1.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"injectables/PositiveInfoService.html":{},"injectables/ProfileService.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"injectables/UserService.html":{}}}],["badrequestexception(contact_not_found",{"_index":1036,"title":{},"body":{"injectables/ContactService.html":{}}}],["badrequestexception(delete_contact_failed",{"_index":1039,"title":{},"body":{"injectables/ContactService.html":{}}}],["badrequestexception(delete_file_from_db_failed",{"_index":1594,"title":{},"body":{"injectables/FileService.html":{}}}],["badrequestexception(delete_file_from_s3_failed",{"_index":1592,"title":{},"body":{"injectables/FileService.html":{}}}],["badrequestexception(delete_time_slot_failed",{"_index":2786,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["badrequestexception(delete_user_from_cognito_failed",{"_index":3253,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception(delete_user_from_db_failed",{"_index":3255,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception(email_and_sms_not_allowed",{"_index":2015,"title":{},"body":{"injectables/NotificationService.html":{}}}],["badrequestexception(export_data_failed",{"_index":1976,"title":{},"body":{"injectables/NotificationService.html":{}}}],["badrequestexception(file_category_not_found",{"_index":1425,"title":{},"body":{"injectables/FileCategoryService.html":{}}}],["badrequestexception(file_is_required",{"_index":1557,"title":{},"body":{"injectables/FileService.html":{}}}],["badrequestexception(file_is_too_big",{"_index":1570,"title":{},"body":{"injectables/FileService.html":{}}}],["badrequestexception(file_not_found",{"_index":1589,"title":{},"body":{"injectables/FileService.html":{}}}],["badrequestexception(file_type_is_invalid",{"_index":1566,"title":{},"body":{"injectables/FileService.html":{}}}],["badrequestexception(file_upload_failed",{"_index":1572,"title":{},"body":{"injectables/FileService.html":{}}}],["badrequestexception(get_file_content_failed",{"_index":1989,"title":{},"body":{"injectables/NotificationService.html":{}}}],["badrequestexception(get_file_url_failed",{"_index":1556,"title":{},"body":{"injectables/FileService.html":{}}}],["badrequestexception(get_job_failed",{"_index":1812,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["badrequestexception(job_remove_failed",{"_index":1814,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["badrequestexception(limit_of_number_of_files_reached",{"_index":3096,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["badrequestexception(minutes_to_next_message_are_required",{"_index":1850,"title":{},"body":{"controllers/NotePositiveInfoController.html":{}}}],["badrequestexception(phone_number_is_invalid",{"_index":209,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["badrequestexception(phone_number_is_needed",{"_index":2635,"title":{},"body":{"controllers/SendSMSController.html":{}}}],["badrequestexception(retrieving_time_slots_failed",{"_index":2792,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["badrequestexception(save_contact_failed",{"_index":1041,"title":{},"body":{"injectables/ContactService.html":{}}}],["badrequestexception(save_file_failed",{"_index":1588,"title":{},"body":{"injectables/FileService.html":{}}}],["badrequestexception(save_positive_info_failed",{"_index":2216,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["badrequestexception(save_profile_failed",{"_index":2361,"title":{},"body":{"injectables/ProfileService.html":{}}}],["badrequestexception(save_time_slot_failed",{"_index":2799,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["badrequestexception(save_unconfirmed_email_failed",{"_index":2871,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["badrequestexception(save_user_failed",{"_index":3248,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception(time_slot_not_found",{"_index":2784,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["badrequestexception(unconfirmed_email_not_found",{"_index":2873,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["badrequestexception(update_contact_failed",{"_index":1045,"title":{},"body":{"injectables/ContactService.html":{}}}],["badrequestexception(update_time_slot_failed",{"_index":2821,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["badrequestexception(update_user_device_id_failed",{"_index":3250,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception(update_user_email_failed",{"_index":3249,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception(user_not_found",{"_index":3246,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception(validation_failed",{"_index":1043,"title":{},"body":{"injectables/ContactService.html":{}}}],["base64",{"_index":1340,"title":{},"body":{"injectables/ExportService.html":{}}}],["base64content",{"_index":1335,"title":{},"body":{"injectables/ExportService.html":{},"injectables/NotificationService.html":{}}}],["based",{"_index":2515,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["basic.consumer",{"_index":1727,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["basicconsumer",{"_index":737,"title":{"classes/BasicConsumer.html":{}},"body":{"classes/BasicConsumer.html":{},"classes/MessageConsumer.html":{}}}],["basicconsumer:13",{"_index":1720,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["basicconsumer:16",{"_index":1721,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["basicconsumer:19",{"_index":1722,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["basicconsumer:6",{"_index":1710,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["beforeinsert",{"_index":901,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["beforeinsert(event",{"_index":907,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["beforeupdate",{"_index":902,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["beforeupdate(event",{"_index":911,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["between",{"_index":2719,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["binary",{"_index":3090,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["biostasis",{"_index":2487,"title":{},"body":{"injectables/SchedulerService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["body",{"_index":142,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ExceptionsFilter.html":{},"controllers/ExportUserDataController.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"injectables/MessageService.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["body(new",{"_index":202,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ExportUserDataController.html":{},"controllers/GetAccessTokenController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["boolean",{"_index":100,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddTimeSlotDTO.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"entities/ContactEntity.html":{},"classes/ContactRO.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"interfaces/ITimeSlotData.html":{},"injectables/NotificationService.html":{},"classes/PositiveInfoRepository.html":{},"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"guards/RolesGuard.html":{},"injectables/SchedulerService.html":{},"classes/SendEmergencyMessageDTO.html":{},"classes/SuccessRO.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotRO.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateContactDTO.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{},"injectables/ValidationPipe.html":{}}}],["bootstrap",{"_index":3387,"title":{},"body":{"miscellaneous/functions.html":{}}}],["brackets",{"_index":2154,"title":{},"body":{"classes/PositiveInfoRepository.html":{},"classes/ProfileRepository.html":{},"classes/TimeSlotRepository.html":{}}}],["brackets((qb",{"_index":2173,"title":{},"body":{"classes/PositiveInfoRepository.html":{},"classes/TimeSlotRepository.html":{}}}],["browse",{"_index":3411,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3408,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":1574,"title":{},"body":{"injectables/FileService.html":{},"interfaces/UploadResult.html":{}}}],["buffer",{"_index":1381,"title":{},"body":{"interfaces/File.html":{}}}],["buffer.concat",{"_index":1141,"title":{},"body":{"classes/Encrypter.html":{}}}],["buffer.concat([cipher.update(text",{"_index":1135,"title":{},"body":{"classes/Encrypter.html":{}}}],["buffer.from(iv",{"_index":1131,"title":{},"body":{"classes/Encrypter.html":{}}}],["buildafter",{"_index":3405,"title":{},"body":{"index.html":{}}}],["bull",{"_index":755,"title":{},"body":{"classes/BasicConsumer.html":{},"classes/MessageConsumer.html":{},"injectables/MessageService-1.html":{},"dependencies.html":{}}}],["bull.queue",{"_index":1789,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["bullmodule",{"_index":586,"title":{},"body":{"modules/AppModule.html":{},"modules/QueueModule.html":{}}}],["bullmodule.forroot",{"_index":615,"title":{},"body":{"modules/AppModule.html":{}}}],["bullmodule.registerqueue",{"_index":2371,"title":{},"body":{"modules/QueueModule.html":{}}}],["canactivate",{"_index":2394,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":2397,"title":{},"body":{"guards/RolesGuard.html":{}}}],["cancel",{"_index":771,"title":{},"body":{"controllers/CancelEmergencyMessageController.html":{}}}],["cancelemergencymessage",{"_index":768,"title":{},"body":{"controllers/CancelEmergencyMessageController.html":{}}}],["cancelemergencymessage(@user",{"_index":783,"title":{},"body":{"controllers/CancelEmergencyMessageController.html":{}}}],["cancelemergencymessage(user",{"_index":769,"title":{},"body":{"controllers/CancelEmergencyMessageController.html":{}}}],["cancelemergencymessagecontroller",{"_index":763,"title":{"controllers/CancelEmergencyMessageController.html":{}},"body":{"controllers/CancelEmergencyMessageController.html":{},"modules/MessageModule.html":{}}}],["cascade",{"_index":263,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"entities/TimeSlotEntity.html":{}}}],["catch",{"_index":827,"title":{},"body":{"injectables/CognitoStrategy.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/NotificationService.html":{},"classes/PassportStrategy.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["catch((err",{"_index":824,"title":{},"body":{"injectables/CognitoStrategy.html":{}}}],["catch((error",{"_index":991,"title":{},"body":{"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/FileCategoryRepository.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/PassportStrategy.html":{},"classes/PositiveInfoRepository.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["catch(async",{"_index":1959,"title":{},"body":{"injectables/NotificationService.html":{}}}],["catch(exception",{"_index":1161,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["categories",{"_index":335,"title":{},"body":{"classes/AddLimitToFileCategoryTable1634809042779.html":{},"controllers/FileListController.html":{}}}],["category",{"_index":302,"title":{},"body":{"classes/AddFileDTO.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"injectables/ExportService.html":{},"entities/FileEntity.html":{},"modules/FileModule.html":{},"classes/FileRepository.html":{},"controllers/UploadFileController.html":{},"miscellaneous/enumerations.html":{}}}],["category.code",{"_index":351,"title":{},"body":{"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/FileRepository.html":{},"controllers/UploadFileController.html":{}}}],["category.entity",{"_index":1405,"title":{},"body":{"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"entities/FileEntity.html":{}}}],["category.entity.ts",{"_index":1386,"title":{},"body":{"entities/FileCategoryEntity.html":{}}}],["category.entity.ts:15",{"_index":1392,"title":{},"body":{"entities/FileCategoryEntity.html":{}}}],["category.entity.ts:18",{"_index":1387,"title":{},"body":{"entities/FileCategoryEntity.html":{}}}],["category.entity.ts:21",{"_index":1393,"title":{},"body":{"entities/FileCategoryEntity.html":{}}}],["category.entity.ts:24",{"_index":1391,"title":{},"body":{"entities/FileCategoryEntity.html":{}}}],["category.entity.ts:27",{"_index":1388,"title":{},"body":{"entities/FileCategoryEntity.html":{}}}],["category.files",{"_index":1428,"title":{},"body":{"entities/FileEntity.html":{}}}],["category.id",{"_index":1497,"title":{},"body":{"classes/FileRepository.html":{},"controllers/UploadFileController.html":{}}}],["category.limit",{"_index":350,"title":{},"body":{"classes/AddLimitToFileCategoryTable1634809042779.html":{},"controllers/UploadFileController.html":{}}}],["category.medical_directive",{"_index":312,"title":{},"body":{"classes/AddFileDTO.html":{}}}],["category.repository",{"_index":1420,"title":{},"body":{"injectables/FileCategoryService.html":{}}}],["category.repository.ts",{"_index":1399,"title":{},"body":{"classes/FileCategoryRepository.html":{}}}],["category.repository.ts:19",{"_index":1403,"title":{},"body":{"classes/FileCategoryRepository.html":{}}}],["category.repository.ts:7",{"_index":1401,"title":{},"body":{"classes/FileCategoryRepository.html":{}}}],["category.repository.ts:9",{"_index":1402,"title":{},"body":{"classes/FileCategoryRepository.html":{}}}],["category.service",{"_index":1452,"title":{},"body":{"controllers/FileListController.html":{},"modules/FileModule.html":{},"controllers/UploadFileController.html":{}}}],["category.service.ts",{"_index":1409,"title":{},"body":{"injectables/FileCategoryService.html":{}}}],["category.service.ts:10",{"_index":1413,"title":{},"body":{"injectables/FileCategoryService.html":{}}}],["category.service.ts:15",{"_index":1414,"title":{},"body":{"injectables/FileCategoryService.html":{}}}],["category.service.ts:21",{"_index":1416,"title":{},"body":{"injectables/FileCategoryService.html":{}}}],["category_id",{"_index":324,"title":{},"body":{"classes/AddFileTable1630406751456.html":{},"entities/FileEntity.html":{}}}],["category_id'})@manytoone(undefined",{"_index":1427,"title":{},"body":{"entities/FileEntity.html":{}}}],["categoryid",{"_index":1310,"title":{},"body":{"injectables/ExportService.html":{},"entities/FileEntity.html":{},"injectables/FileService.html":{}}}],["categoryid'])).foreach",{"_index":1303,"title":{},"body":{"injectables/ExportService.html":{}}}],["categoryro",{"_index":786,"title":{"classes/CategoryRO.html":{}},"body":{"classes/CategoryRO.html":{},"controllers/FileListController.html":{}}}],["changeuseremailincognito",{"_index":2854,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["changeuseremailincognito(user",{"_index":2858,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["check",{"_index":83,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{}}}],["check'})@roles(['undefined'])@patch('api/v2/contact/:id",{"_index":2893,"title":{},"body":{"controllers/UpdateContactController.html":{}}}],["check'})@roles(['undefined'])@patch('api/v2/user",{"_index":2995,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["check'})@roles(['undefined'])@post('api/v2/contact",{"_index":135,"title":{},"body":{"controllers/AddContactController.html":{}}}],["checknotregularpositiveinfo",{"_index":2419,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["checkphonenumber",{"_index":178,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["checkregularpositiveinfo",{"_index":2420,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["cipher",{"_index":1127,"title":{},"body":{"classes/Encrypter.html":{}}}],["cipher.final",{"_index":1136,"title":{},"body":{"classes/Encrypter.html":{}}}],["class",{"_index":0,"title":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactAndCheckPhoneDTO.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileDTO.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimeSlotDTO.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"classes/BasicConsumer.html":{},"classes/CategoryRO.html":{},"classes/ConfirmUserEmailDTO.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactIdRO.html":{},"classes/ContactRO.html":{},"classes/ContactRepository.html":{},"classes/CustomError.html":{},"classes/Encrypter.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{},"classes/ExportUserDataDTO.html":{},"classes/FileCategoryRepository.html":{},"classes/FileIdRO.html":{},"classes/FileRO.html":{},"classes/FileRepository.html":{},"classes/GetAccessTokenDTO.html":{},"classes/MessageConsumer.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"classes/NotePositiveInfoDTO.html":{},"classes/PassportStrategy.html":{},"classes/PositiveInfoRepository.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"classes/SendEmergencyMessageDTO.html":{},"classes/SendSmsDTO.html":{},"classes/SuccessRO.html":{},"classes/TimeSlotDayRepository.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TimeSlotRepository.html":{},"classes/TokenRO.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateContactDTO.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserEntitySubscriber.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileDTO.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDTO.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"modules/AuthorizationModule.html":{},"classes/BasicConsumer.html":{},"controllers/CancelEmergencyMessageController.html":{},"classes/CategoryRO.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ConfirmUserEmailDTO.html":{},"entities/ContactEntity.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactIdRO.html":{},"controllers/ContactListController.html":{},"modules/ContactModule.html":{},"classes/ContactRO.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/Encrypter.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"classes/ExportUserDataDTO.html":{},"entities/FileCategoryEntity.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"entities/FileEntity.html":{},"classes/FileIdRO.html":{},"controllers/FileListController.html":{},"modules/FileModule.html":{},"classes/FileRO.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"classes/GetAccessTokenDTO.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"controllers/NotePositiveInfoController.html":{},"classes/NotePositiveInfoDTO.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"modules/QueueModule.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"guards/RolesGuard.html":{},"modules/SchedulerModule.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"classes/SendEmergencyMessageDTO.html":{},"controllers/SendSMSController.html":{},"classes/SendSmsDTO.html":{},"controllers/SendTestMessageController.html":{},"classes/SuccessRO.html":{},"entities/TimeSlotDayEntity.html":{},"classes/TimeSlotDayRepository.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TimeSlotRepository.html":{},"classes/TokenRO.html":{},"modules/TriggerTimeSlotModule.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"classes/UpdateContactDTO.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"controllers/UploadFileController.html":{},"entities/UserEntity.html":{},"classes/UserEntitySubscriber.html":{},"modules/UserModule.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactAndCheckPhoneDTO.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileDTO.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimeSlotDTO.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"classes/BasicConsumer.html":{},"classes/CategoryRO.html":{},"classes/ConfirmUserEmailDTO.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactIdRO.html":{},"classes/ContactRO.html":{},"classes/ContactRepository.html":{},"classes/CustomError.html":{},"classes/Encrypter.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{},"classes/ExportUserDataDTO.html":{},"classes/FileCategoryRepository.html":{},"classes/FileIdRO.html":{},"classes/FileRO.html":{},"classes/FileRepository.html":{},"classes/GetAccessTokenDTO.html":{},"classes/MessageConsumer.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"classes/NotePositiveInfoDTO.html":{},"classes/PassportStrategy.html":{},"classes/PositiveInfoRepository.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"classes/SendEmergencyMessageDTO.html":{},"classes/SendSmsDTO.html":{},"classes/SuccessRO.html":{},"classes/TimeSlotDayRepository.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TimeSlotRepository.html":{},"classes/TokenRO.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateContactDTO.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserEntitySubscriber.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{},"overview.html":{}}}],["clearalerttime",{"_index":2121,"title":{},"body":{"classes/PositiveInfoRepository.html":{},"injectables/SchedulerService.html":{}}}],["clearalerttime(userids",{"_index":2133,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["cleareverythingforusers",{"_index":2122,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["cleareverythingforusers(userids",{"_index":2136,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["clearpositiveinfo",{"_index":2574,"title":{},"body":{"injectables/SchedulerService.html":{},"injectables/UserService.html":{}}}],["clearpositiveinfo(userid",{"_index":3218,"title":{},"body":{"injectables/UserService.html":{}}}],["clientid",{"_index":709,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["cloud",{"_index":1470,"title":{},"body":{"modules/FileModule.html":{}}}],["cloud_front_signer",{"_index":3355,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cloud_front_signer_provider",{"_index":3356,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cloudfrontsigner",{"_index":1510,"title":{},"body":{"injectables/FileService.html":{}}}],["cluster_appmodule",{"_index":558,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":559,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":713,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":714,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":715,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_contactmodule",{"_index":944,"title":{},"body":{"modules/ContactModule.html":{},"overview.html":{}}}],["cluster_contactmodule_exports",{"_index":945,"title":{},"body":{"modules/ContactModule.html":{},"overview.html":{}}}],["cluster_contactmodule_providers",{"_index":946,"title":{},"body":{"modules/ContactModule.html":{},"overview.html":{}}}],["cluster_filemodule",{"_index":1459,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_filemodule_exports",{"_index":1461,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_filemodule_providers",{"_index":1460,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_messagemodule",{"_index":1738,"title":{},"body":{"modules/MessageModule.html":{},"overview.html":{}}}],["cluster_messagemodule_exports",{"_index":1740,"title":{},"body":{"modules/MessageModule.html":{},"overview.html":{}}}],["cluster_messagemodule_imports",{"_index":1741,"title":{},"body":{"modules/MessageModule.html":{}}}],["cluster_messagemodule_providers",{"_index":1739,"title":{},"body":{"modules/MessageModule.html":{},"overview.html":{}}}],["cluster_notificationmodule",{"_index":1858,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_notificationmodule_exports",{"_index":1860,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_notificationmodule_imports",{"_index":1861,"title":{},"body":{"modules/NotificationModule.html":{}}}],["cluster_notificationmodule_providers",{"_index":1859,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_queuemodule",{"_index":2362,"title":{},"body":{"modules/QueueModule.html":{}}}],["cluster_queuemodule_exports",{"_index":2364,"title":{},"body":{"modules/QueueModule.html":{}}}],["cluster_queuemodule_providers",{"_index":2363,"title":{},"body":{"modules/QueueModule.html":{}}}],["cluster_schedulermodule",{"_index":2405,"title":{},"body":{"modules/SchedulerModule.html":{},"overview.html":{}}}],["cluster_schedulermodule_exports",{"_index":2407,"title":{},"body":{"modules/SchedulerModule.html":{},"overview.html":{}}}],["cluster_schedulermodule_imports",{"_index":2406,"title":{},"body":{"modules/SchedulerModule.html":{}}}],["cluster_schedulermodule_providers",{"_index":2408,"title":{},"body":{"modules/SchedulerModule.html":{},"overview.html":{}}}],["cluster_triggertimeslotmodule",{"_index":2732,"title":{},"body":{"modules/TriggerTimeSlotModule.html":{},"overview.html":{}}}],["cluster_triggertimeslotmodule_exports",{"_index":2733,"title":{},"body":{"modules/TriggerTimeSlotModule.html":{},"overview.html":{}}}],["cluster_triggertimeslotmodule_providers",{"_index":2734,"title":{},"body":{"modules/TriggerTimeSlotModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":3131,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":3132,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":3134,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":3133,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":294,"title":{},"body":{"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/CategoryRO.html":{},"classes/ConfirmUserEmailDTO.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"entities/FileCategoryEntity.html":{},"injectables/FileCategoryService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateUserProfileController.html":{}}}],["code'])).foreach",{"_index":1296,"title":{},"body":{"injectables/ExportService.html":{}}}],["codes",{"_index":1490,"title":{},"body":{"classes/FileRepository.html":{},"injectables/FileService.html":{}}}],["cognito",{"_index":647,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/AuthorizationModule.html":{},"injectables/CognitoStrategy.html":{},"injectables/UnconfirmedEmailService.html":{},"injectables/UserService.html":{}}}],["cognitoidentityserviceprovider",{"_index":725,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/UserModule.html":{}}}],["cognitostrategy",{"_index":716,"title":{"injectables/CognitoStrategy.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/CognitoStrategy.html":{},"overview.html":{}}}],["column",{"_index":60,"title":{},"body":{"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"entities/ContactEntity.html":{},"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"entities/ProfileEntity.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"entities/TimeSlotDayEntity.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{},"entities/UserEntity.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["column({name",{"_index":887,"title":{},"body":{"entities/ContactEntity.html":{},"entities/FileEntity.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"entities/TimeSlotDayEntity.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{},"entities/UserEntity.html":{}}}],["column({type",{"_index":870,"title":{},"body":{"entities/ContactEntity.html":{},"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"entities/ProfileEntity.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{},"entities/UserEntity.html":{}}}],["columname",{"_index":1819,"title":{},"body":{"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{}}}],["columnnames",{"_index":257,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["columns",{"_index":240,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{}}}],["command",{"_index":3400,"title":{},"body":{"index.html":{}}}],["common/constant/dictionary.constant",{"_index":186,"title":{},"body":{"controllers/AddContactController.html":{},"injectables/AuthenticationService.html":{},"injectables/FileService.html":{},"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{},"controllers/SendSMSController.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{},"injectables/UserService.html":{}}}],["common/error/custom",{"_index":1910,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{}}}],["common/error/keys",{"_index":184,"title":{},"body":{"controllers/AddContactController.html":{},"injectables/ContactService.html":{},"injectables/FileCategoryService.html":{},"injectables/FileService.html":{},"injectables/MessageService-1.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"classes/PassportStrategy.html":{},"injectables/PositiveInfoService.html":{},"injectables/ProfileService.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"injectables/UserService.html":{}}}],["common/helper/check",{"_index":179,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["common/helper/encrypter",{"_index":3239,"title":{},"body":{"injectables/UserService.html":{}}}],["common/helper/entity",{"_index":918,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["common/helper/get",{"_index":309,"title":{},"body":{"classes/AddFileDTO.html":{},"classes/AddTimeSlotDTO.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendTestMessageController.html":{},"injectables/TriggerTimeSlotService.html":{},"controllers/UpdateUserProfileController.html":{}}}],["common/helper/is",{"_index":3005,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["common/helper/modify",{"_index":2452,"title":{},"body":{"injectables/SchedulerService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["common/helper/omit",{"_index":188,"title":{},"body":{"controllers/AddContactController.html":{},"injectables/ExportService.html":{},"injectables/TriggerTimeSlotService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["common/pipe/numeric",{"_index":1073,"title":{},"body":{"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["common/pipe/validation.pipe",{"_index":171,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ExportUserDataController.html":{},"controllers/GetAccessTokenController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["common/provider/cognito",{"_index":726,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/UserModule.html":{}}}],["common/provider/config.provider",{"_index":730,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/ContactModule.html":{},"modules/FileModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/UserModule.html":{}}}],["common/provider/connection.provider",{"_index":2743,"title":{},"body":{"modules/TriggerTimeSlotModule.html":{}}}],["common/provider/google",{"_index":960,"title":{},"body":{"modules/ContactModule.html":{},"modules/UserModule.html":{}}}],["common/provider/redis.provider",{"_index":590,"title":{},"body":{"modules/AppModule.html":{}}}],["common/response/error.ro",{"_index":175,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["common/response/success.ro",{"_index":778,"title":{},"body":{"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{}}}],["common_di",{"_index":1534,"title":{},"body":{"injectables/FileService.html":{}}}],["compose",{"_index":3402,"title":{},"body":{"index.html":{}}}],["concise",{"_index":3419,"title":{},"body":{"properties.html":{}}}],["config",{"_index":598,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/FileService.html":{},"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{},"controllers/SendSMSController.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateUserProfileController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["config.database",{"_index":600,"title":{},"body":{"modules/AppModule.html":{}}}],["config.redis.host",{"_index":618,"title":{},"body":{"modules/AppModule.html":{}}}],["config.redis.password",{"_index":622,"title":{},"body":{"modules/AppModule.html":{}}}],["config.redis.port",{"_index":620,"title":{},"body":{"modules/AppModule.html":{}}}],["config/default",{"_index":583,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationModule.html":{},"modules/ContactModule.html":{},"classes/Encrypter.html":{},"modules/FileModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/UserModule.html":{}}}],["config_provider",{"_index":3348,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["configmodule",{"_index":596,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationModule.html":{},"modules/ContactModule.html":{},"modules/FileModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/UserModule.html":{}}}],["configmodule.forroot",{"_index":623,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationModule.html":{},"modules/ContactModule.html":{},"modules/FileModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/UserModule.html":{}}}],["configprovider",{"_index":729,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/ContactModule.html":{},"modules/FileModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/UserModule.html":{}}}],["configservice",{"_index":645,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/FileService.html":{},"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{},"controllers/SendSMSController.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateUserProfileController.html":{},"injectables/UserService.html":{}}}],["configuration",{"_index":582,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationModule.html":{},"modules/ContactModule.html":{},"classes/Encrypter.html":{},"modules/FileModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/UserModule.html":{}}}],["configuration().queue.numberofattempts",{"_index":2376,"title":{},"body":{"modules/QueueModule.html":{}}}],["configuration()?.application?.encryptioniv",{"_index":1132,"title":{},"body":{"classes/Encrypter.html":{}}}],["configuration()?.application?.encryptionkey",{"_index":1130,"title":{},"body":{"classes/Encrypter.html":{}}}],["confirm",{"_index":835,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{}}}],["confirmuseremail",{"_index":832,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{}}}],["confirmuseremail(data",{"_index":833,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{}}}],["confirmuseremailcontroller",{"_index":829,"title":{"controllers/ConfirmUserEmailController.html":{}},"body":{"controllers/ConfirmUserEmailController.html":{},"modules/UserModule.html":{}}}],["confirmuseremaildto",{"_index":834,"title":{"classes/ConfirmUserEmailDTO.html":{}},"body":{"controllers/ConfirmUserEmailController.html":{},"classes/ConfirmUserEmailDTO.html":{}}}],["confirmuseremailschema",{"_index":842,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{}}}],["connection",{"_index":2754,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{},"miscellaneous/enumerations.html":{}}}],["connection_provider",{"_index":3352,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["connectionprovider",{"_index":2742,"title":{},"body":{"modules/TriggerTimeSlotModule.html":{}}}],["const",{"_index":210,"title":{},"body":{"controllers/AddContactController.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"injectables/ContactService.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/Encrypter.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"classes/MessageConsumer.html":{},"injectables/MessageService.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"injectables/PositiveInfoService.html":{},"classes/ProfileEntitySubscriber.html":{},"guards/RolesGuard.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"injectables/ValidationPipe.html":{}}}],["constant/dictionary.constant",{"_index":1533,"title":{},"body":{"injectables/FileService.html":{},"injectables/MessageService.html":{},"injectables/NotificationService.html":{}}}],["constant/process.constant",{"_index":1728,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["constant/queue.constant",{"_index":1726,"title":{},"body":{"classes/MessageConsumer.html":{},"injectables/MessageService-1.html":{},"modules/QueueModule.html":{}}}],["constructor",{"_index":193,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"injectables/AuthenticationService.html":{},"classes/BasicConsumer.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"injectables/FileCategoryService.html":{},"controllers/FileListController.html":{},"injectables/FileService.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"injectables/PositiveInfoService.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["constructor(cognito",{"_index":643,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["constructor(config",{"_index":1878,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{}}}],["constructor(contactrepository",{"_index":1002,"title":{},"body":{"injectables/ContactService.html":{},"injectables/ExportService.html":{}}}],["constructor(filecategoryrepository",{"_index":1412,"title":{},"body":{"injectables/FileCategoryService.html":{}}}],["constructor(firebase",{"_index":1754,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(logger",{"_index":742,"title":{},"body":{"classes/BasicConsumer.html":{}}}],["constructor(message",{"_index":1051,"title":{},"body":{"classes/CustomError.html":{}}}],["constructor(messagequeue",{"_index":1788,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["constructor(notificationservice",{"_index":1708,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["constructor(options",{"_index":2065,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["constructor(positiveinforepository",{"_index":2193,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["constructor(private",{"_index":781,"title":{},"body":{"controllers/CancelEmergencyMessageController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/GetAccessTokenController.html":{},"classes/MessageConsumer.html":{},"guards/RolesGuard.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"injectables/ValidationPipe.html":{}}}],["constructor(profilerepository",{"_index":2350,"title":{},"body":{"injectables/ProfileService.html":{}}}],["constructor(reflector",{"_index":2395,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(s3",{"_index":1508,"title":{},"body":{"injectables/FileService.html":{}}}],["constructor(schema",{"_index":3257,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["constructor(timeslotrepository",{"_index":2753,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["constructor(unconfirmedemailrepository",{"_index":2856,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["constructor(userservice",{"_index":797,"title":{},"body":{"injectables/CognitoStrategy.html":{}}}],["consumer/message.consumer",{"_index":2366,"title":{},"body":{"modules/QueueModule.html":{}}}],["contact",{"_index":82,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"classes/AddContactTable1625819654567.html":{},"controllers/ContactListController.html":{},"injectables/ContactService.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"injectables/ExportService.html":{},"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"entities/UserEntity.html":{}}}],["contact.active",{"_index":1034,"title":{},"body":{"injectables/ContactService.html":{},"injectables/SchedulerService.html":{}}}],["contact.controller",{"_index":954,"title":{},"body":{"modules/ContactModule.html":{}}}],["contact.controller.ts",{"_index":123,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/UpdateContactController.html":{}}}],["contact.controller.ts:33",{"_index":1084,"title":{},"body":{"controllers/DeleteContactController-1.html":{}}}],["contact.controller.ts:53",{"_index":136,"title":{},"body":{"controllers/AddContactController.html":{}}}],["contact.controller.ts:55",{"_index":2894,"title":{},"body":{"controllers/UpdateContactController.html":{}}}],["contact.controller.ts:81",{"_index":2897,"title":{},"body":{"controllers/UpdateContactController.html":{}}}],["contact.controller.ts:83",{"_index":140,"title":{},"body":{"controllers/AddContactController.html":{}}}],["contact.controller.ts:90",{"_index":2890,"title":{},"body":{"controllers/UpdateContactController.html":{}}}],["contact.dto",{"_index":118,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"injectables/ContactService.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{}}}],["contact.dto.ts",{"_index":219,"title":{},"body":{"classes/AddContactDTO.html":{},"classes/UpdateContactDTO.html":{}}}],["contact.dto.ts:11",{"_index":221,"title":{},"body":{"classes/AddContactDTO.html":{},"classes/UpdateContactDTO.html":{}}}],["contact.dto.ts:14",{"_index":224,"title":{},"body":{"classes/AddContactDTO.html":{},"classes/UpdateContactDTO.html":{}}}],["contact.dto.ts:22",{"_index":223,"title":{},"body":{"classes/AddContactDTO.html":{},"classes/UpdateContactDTO.html":{}}}],["contact.dto.ts:25",{"_index":220,"title":{},"body":{"classes/AddContactDTO.html":{},"classes/UpdateContactDTO.html":{}}}],["contact.dto.ts:5",{"_index":222,"title":{},"body":{"classes/AddContactDTO.html":{},"classes/UpdateContactDTO.html":{}}}],["contact.dto.ts:8",{"_index":225,"title":{},"body":{"classes/AddContactDTO.html":{},"classes/UpdateContactDTO.html":{}}}],["contact.email",{"_index":2040,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{}}}],["contact.entity",{"_index":920,"title":{},"body":{"classes/ContactEntitySubscriber.html":{}}}],["contact.id",{"_index":1044,"title":{},"body":{"injectables/ContactService.html":{}}}],["contact.name",{"_index":2033,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{}}}],["contact.phone",{"_index":2024,"title":{},"body":{"injectables/NotificationService.html":{}}}],["contact.prefix",{"_index":2579,"title":{},"body":{"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{}}}],["contact.prefix}${contact.phone",{"_index":2580,"title":{},"body":{"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{}}}],["contact.schema",{"_index":169,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/UpdateContactController.html":{}}}],["contact.surname",{"_index":2578,"title":{},"body":{"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{}}}],["contact.user",{"_index":3105,"title":{},"body":{"entities/UserEntity.html":{}}}],["contact/contact.module",{"_index":579,"title":{},"body":{"modules/AppModule.html":{},"modules/MessageModule.html":{},"modules/UserModule.html":{}}}],["contact/entity/contact.entity",{"_index":1236,"title":{},"body":{"injectables/ExportService.html":{},"entities/UserEntity.html":{}}}],["contact/repository/contact.repository",{"_index":1235,"title":{},"body":{"injectables/ExportService.html":{}}}],["contact/service/contact.service",{"_index":1232,"title":{},"body":{"injectables/ExportService.html":{},"controllers/SendEmergencyMessageController.html":{}}}],["contact_not_found",{"_index":1025,"title":{},"body":{"injectables/ContactService.html":{}}}],["contactentity",{"_index":865,"title":{"entities/ContactEntity.html":{}},"body":{"entities/ContactEntity.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"injectables/ExportService.html":{},"entities/UserEntity.html":{}}}],["contactentitysubscriber",{"_index":895,"title":{"classes/ContactEntitySubscriber.html":{}},"body":{"classes/ContactEntitySubscriber.html":{}}}],["contactid",{"_index":1006,"title":{},"body":{"injectables/ContactService.html":{},"controllers/DeleteContactController-1.html":{},"controllers/UpdateContactController.html":{}}}],["contactidro",{"_index":163,"title":{"classes/ContactIdRO.html":{}},"body":{"controllers/AddContactController.html":{},"classes/ContactIdRO.html":{}}}],["contactidro})@apiresponse({status",{"_index":131,"title":{},"body":{"controllers/AddContactController.html":{}}}],["contactkeys",{"_index":1273,"title":{},"body":{"injectables/ExportService.html":{}}}],["contactkeys[index",{"_index":1276,"title":{},"body":{"injectables/ExportService.html":{}}}],["contactlistcontroller",{"_index":927,"title":{"controllers/ContactListController.html":{}},"body":{"controllers/ContactListController.html":{},"modules/ContactModule.html":{}}}],["contactmodule",{"_index":561,"title":{"modules/ContactModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules/MessageModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["contactname",{"_index":2032,"title":{},"body":{"injectables/NotificationService.html":{}}}],["contactrepository",{"_index":972,"title":{"classes/ContactRepository.html":{}},"body":{"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"injectables/ExportService.html":{}}}],["contactrepositoryprovider",{"_index":950,"title":{},"body":{"modules/ContactModule.html":{}}}],["contactro",{"_index":932,"title":{"classes/ContactRO.html":{}},"body":{"controllers/ContactListController.html":{},"classes/ContactRO.html":{},"controllers/UpdateContactController.html":{}}}],["contactro})@apiresponse({status",{"_index":2892,"title":{},"body":{"controllers/UpdateContactController.html":{}}}],["contacts",{"_index":940,"title":{},"body":{"controllers/ContactListController.html":{},"injectables/ContactService.html":{},"injectables/ExportService.html":{},"classes/PositiveInfoRepository.html":{},"controllers/SendEmergencyMessageController.html":{},"entities/UserEntity.html":{}}}],["contacts.filter((contact",{"_index":1033,"title":{},"body":{"injectables/ContactService.html":{}}}],["contacts.length",{"_index":1327,"title":{},"body":{"injectables/ExportService.html":{},"controllers/SendEmergencyMessageController.html":{}}}],["contacts.map((contact",{"_index":942,"title":{},"body":{"controllers/ContactListController.html":{}}}],["contactservice",{"_index":159,"title":{"injectables/ContactService.html":{}},"body":{"controllers/AddContactController.html":{},"controllers/ContactListController.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"controllers/DeleteContactController-1.html":{},"injectables/ExportService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/UpdateContactController.html":{},"overview.html":{}}}],["contains",{"_index":1952,"title":{},"body":{"injectables/NotificationService.html":{}}}],["content",{"_index":1972,"title":{},"body":{"injectables/NotificationService.html":{}}}],["contenttype",{"_index":1977,"title":{},"body":{"injectables/NotificationService.html":{}}}],["context",{"_index":2400,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":2402,"title":{},"body":{"guards/RolesGuard.html":{}}}],["continue",{"_index":2493,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["continues",{"_index":2554,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["controller",{"_index":119,"title":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["controller(\"message",{"_index":2604,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{}}}],["controller(\"user",{"_index":2649,"title":{},"body":{"controllers/SendTestMessageController.html":{}}}],["controller('auth",{"_index":1612,"title":{},"body":{"controllers/GetAccessTokenController.html":{},"controllers/LogoutController.html":{}}}],["controller('contact",{"_index":937,"title":{},"body":{"controllers/ContactListController.html":{},"controllers/DeleteContactController-1.html":{}}}],["controller('file",{"_index":1076,"title":{},"body":{"controllers/DeleteContactController.html":{},"controllers/FileListController.html":{},"controllers/UploadFileController.html":{}}}],["controller('message",{"_index":780,"title":{},"body":{"controllers/CancelEmergencyMessageController.html":{},"controllers/SendSMSController.html":{}}}],["controller('time",{"_index":1093,"title":{},"body":{"controllers/DeleteTimeSlotController.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["controller('user",{"_index":849,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/GetUserController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{}}}],["controller/add",{"_index":953,"title":{},"body":{"modules/ContactModule.html":{},"modules/TriggerTimeSlotModule.html":{}}}],["controller/cancel",{"_index":1748,"title":{},"body":{"modules/MessageModule.html":{}}}],["controller/confirm",{"_index":3144,"title":{},"body":{"modules/UserModule.html":{}}}],["controller/contact",{"_index":955,"title":{},"body":{"modules/ContactModule.html":{}}}],["controller/delete",{"_index":958,"title":{},"body":{"modules/ContactModule.html":{},"modules/FileModule.html":{},"modules/TriggerTimeSlotModule.html":{},"modules/UserModule.html":{}}}],["controller/export",{"_index":3147,"title":{},"body":{"modules/UserModule.html":{}}}],["controller/file",{"_index":1476,"title":{},"body":{"modules/FileModule.html":{}}}],["controller/get",{"_index":731,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/TriggerTimeSlotModule.html":{},"modules/UserModule.html":{}}}],["controller/logout.controller",{"_index":734,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["controller/note",{"_index":3151,"title":{},"body":{"modules/UserModule.html":{}}}],["controller/send",{"_index":1745,"title":{},"body":{"modules/MessageModule.html":{},"modules/UserModule.html":{}}}],["controller/update",{"_index":957,"title":{},"body":{"modules/ContactModule.html":{},"modules/TriggerTimeSlotModule.html":{},"modules/UserModule.html":{}}}],["controller/upload",{"_index":1464,"title":{},"body":{"modules/FileModule.html":{}}}],["controllers",{"_index":121,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"modules/AuthorizationModule.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"modules/ContactModule.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"modules/FileModule.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"modules/MessageModule.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"modules/TriggerTimeSlotModule.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["copy.ts",{"_index":2838,"title":{},"body":{"classes/UnconfirmedEmailEntitySubscriber.html":{}}}],["copy.ts:13",{"_index":2841,"title":{},"body":{"classes/UnconfirmedEmailEntitySubscriber.html":{}}}],["copy.ts:17",{"_index":2842,"title":{},"body":{"classes/UnconfirmedEmailEntitySubscriber.html":{}}}],["copy.ts:21",{"_index":2840,"title":{},"body":{"classes/UnconfirmedEmailEntitySubscriber.html":{}}}],["copy.ts:7",{"_index":2839,"title":{},"body":{"classes/UnconfirmedEmailEntitySubscriber.html":{}}}],["copy.ts:9",{"_index":2843,"title":{},"body":{"classes/UnconfirmedEmailEntitySubscriber.html":{}}}],["countrycode",{"_index":87,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{}}}],["create(params.data",{"_index":1941,"title":{},"body":{"injectables/NotificationService.html":{}}}],["created_at",{"_index":251,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"entities/ContactEntity.html":{},"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{},"entities/UserEntity.html":{}}}],["createdat",{"_index":867,"title":{},"body":{"entities/ContactEntity.html":{},"classes/ContactRO.html":{},"injectables/ExportService.html":{},"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"classes/FileRO.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotRO.html":{},"entities/UnconfirmedEmailEntity.html":{},"entities/UserEntity.html":{},"classes/UserRO.html":{}}}],["createdatecolumn",{"_index":890,"title":{},"body":{"entities/ContactEntity.html":{},"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{},"entities/UserEntity.html":{}}}],["createdatecolumn({name",{"_index":872,"title":{},"body":{"entities/ContactEntity.html":{},"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{},"entities/UserEntity.html":{}}}],["credentials",{"_index":676,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["cron",{"_index":2444,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["cron(\"0",{"_index":2454,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["cron('0",{"_index":2429,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["crypto",{"_index":1126,"title":{},"body":{"classes/Encrypter.html":{}}}],["crypto.createcipheriv",{"_index":1128,"title":{},"body":{"classes/Encrypter.html":{}}}],["crypto.createdecipheriv",{"_index":1139,"title":{},"body":{"classes/Encrypter.html":{}}}],["ctr",{"_index":1115,"title":{},"body":{"classes/Encrypter.html":{}}}],["ctx",{"_index":1168,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["ctx.getrequest",{"_index":1172,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":1171,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["current_timestamp",{"_index":390,"title":{},"body":{"classes/AddPositiveInfoTable1632807482818.html":{}}}],["current_timestamp(6",{"_index":253,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{}}}],["currentdatetime",{"_index":2587,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["custom",{"_index":1167,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["customerror",{"_index":1046,"title":{"classes/CustomError.html":{}},"body":{"classes/CustomError.html":{},"classes/ExceptionsFilter.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"injectables/ValidationPipe.html":{}}}],["customerror(send_mail_failed",{"_index":2012,"title":{},"body":{"injectables/NotificationService.html":{}}}],["customerror(send_sms_failed",{"_index":1938,"title":{},"body":{"injectables/NotificationService.html":{}}}],["customerror(validation_failed",{"_index":2061,"title":{},"body":{"injectables/NumericIdValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["d",{"_index":2723,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["d.day_of_week",{"_index":2724,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["data",{"_index":128,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"injectables/AuthenticationService.html":{},"controllers/ConfirmUserEmailController.html":{},"injectables/ContactService.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"injectables/FileCategoryService.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"classes/MessageConsumer.html":{},"injectables/MessageService.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"injectables/PositiveInfoService.html":{},"injectables/ProfileService.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"injectables/UserService.html":{}}}],["data')@apioperation({summary",{"_index":3071,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["data'})@roles(['undefined'])@post('/export",{"_index":1349,"title":{},"body":{"controllers/ExportUserDataController.html":{}}}],["data.automatedemergency",{"_index":3018,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["data.category",{"_index":3094,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["data.controller",{"_index":3148,"title":{},"body":{"modules/UserModule.html":{}}}],["data.controller.ts",{"_index":1344,"title":{},"body":{"controllers/ExportUserDataController.html":{}}}],["data.controller.ts:39",{"_index":1350,"title":{},"body":{"controllers/ExportUserDataController.html":{}}}],["data.countrycode",{"_index":207,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["data.days",{"_index":2817,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["data.days.includes(value",{"_index":2814,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["data.days.map((value",{"_index":2797,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["data.delayed",{"_index":2030,"title":{},"body":{"injectables/NotificationService.html":{}}}],["data.deviceid",{"_index":2948,"title":{},"body":{"controllers/UpdateUserDeviceIdentifierController.html":{}}}],["data.dto",{"_index":1360,"title":{},"body":{"controllers/ExportUserDataController.html":{}}}],["data.dto.ts",{"_index":1376,"title":{},"body":{"classes/ExportUserDataDTO.html":{}}}],["data.dto.ts:5",{"_index":1377,"title":{},"body":{"classes/ExportUserDataDTO.html":{}}}],["data.email",{"_index":1042,"title":{},"body":{"injectables/ContactService.html":{},"controllers/ExportUserDataController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["data.frequencyofregularnotification",{"_index":3016,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["data.from",{"_index":475,"title":{},"body":{"controllers/AddTimeSlotController.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["data.interface.ts",{"_index":1662,"title":{},"body":{"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"interfaces/ITimeSlotData.html":{},"interfaces/IUserData.html":{}}}],["data.isfromqueue",{"_index":2031,"title":{},"body":{"injectables/NotificationService.html":{}}}],["data.length",{"_index":2794,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["data.locationurl",{"_index":2028,"title":{},"body":{"injectables/NotificationService.html":{}}}],["data.message",{"_index":1768,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.minutestonext",{"_index":1849,"title":{},"body":{"controllers/NotePositiveInfoController.html":{},"injectables/PositiveInfoService.html":{}}}],["data.name",{"_index":3030,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["data.phone",{"_index":204,"title":{},"body":{"controllers/AddContactController.html":{},"injectables/ContactService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["data.pop",{"_index":2185,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["data.positiveinfoperiod",{"_index":3014,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["data.prefix",{"_index":206,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["data.push",{"_index":1259,"title":{},"body":{"injectables/ExportService.html":{}}}],["data.push(contactkeys",{"_index":1277,"title":{},"body":{"injectables/ExportService.html":{}}}],["data.push(filekeys",{"_index":1305,"title":{},"body":{"injectables/ExportService.html":{}}}],["data.push(profilekeys",{"_index":1267,"title":{},"body":{"injectables/ExportService.html":{}}}],["data.push(timeslotkeys",{"_index":1284,"title":{},"body":{"injectables/ExportService.html":{}}}],["data.push(unconfirmedemailkeys",{"_index":1298,"title":{},"body":{"injectables/ExportService.html":{}}}],["data.push(usekeys",{"_index":1258,"title":{},"body":{"injectables/ExportService.html":{}}}],["data.regularpushnotification",{"_index":3011,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["data.schema",{"_index":1363,"title":{},"body":{"controllers/ExportUserDataController.html":{}}}],["data.sound",{"_index":1771,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.surname",{"_index":3032,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["data.timezone",{"_index":2805,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["data.title",{"_index":1767,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.type",{"_index":1770,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.users.length",{"_index":694,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["data.users[0].attributes.foreach",{"_index":699,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["data.xls",{"_index":1982,"title":{},"body":{"injectables/NotificationService.html":{}}}],["data?.authenticationresult",{"_index":1619,"title":{},"body":{"controllers/GetAccessTokenController.html":{}}}],["data_export",{"_index":3368,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dataasarray",{"_index":1321,"title":{},"body":{"injectables/ExportService.html":{}}}],["dataasstring",{"_index":1320,"title":{},"body":{"injectables/ExportService.html":{}}}],["date",{"_index":486,"title":{},"body":{"classes/AddTimeSlotDTO.html":{},"entities/ContactEntity.html":{},"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"interfaces/IProfileData.html":{},"interfaces/ITimeSlotData.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"entities/TimeSlotEntity.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UpdateTimeSlotDTO.html":{},"entities/UserEntity.html":{},"dependencies.html":{}}}],["date().toisostring",{"_index":2519,"title":{},"body":{"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{}}}],["date().toisostring().slice(0",{"_index":2461,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["date().toisostring().slice(0,19).replace('t",{"_index":2703,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["date().tolocalestring",{"_index":1179,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["date(entity.dateofbirth",{"_index":2278,"title":{},"body":{"classes/ProfileEntitySubscriber.html":{}}}],["date(entity.lasthospitalvisit",{"_index":2276,"title":{},"body":{"classes/ProfileEntitySubscriber.html":{}}}],["date_add(positiveinfo.updated_at",{"_index":2161,"title":{},"body":{"classes/PositiveInfoRepository.html":{},"classes/ProfileRepository.html":{}}}],["date_of_birth",{"_index":401,"title":{},"body":{"classes/AddProfileTable1626246168913.html":{},"entities/ProfileEntity.html":{}}}],["dateimported",{"_index":1682,"title":{},"body":{"interfaces/ITimeSlotData.html":{}}}],["dateofbirth",{"_index":1666,"title":{},"body":{"interfaces/IProfileData.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{},"miscellaneous/enumerations.html":{}}}],["datetime",{"_index":62,"title":{},"body":{"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"entities/ContactEntity.html":{},"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{},"entities/UserEntity.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["day",{"_index":1684,"title":{},"body":{"interfaces/ITimeSlotData.html":{},"injectables/SchedulerService.html":{},"entities/TimeSlotDayEntity.html":{},"modules/TriggerTimeSlotModule.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["day.entity",{"_index":2667,"title":{},"body":{"classes/TimeSlotDayRepository.html":{},"entities/TimeSlotEntity.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["day.entity.ts",{"_index":2658,"title":{},"body":{"entities/TimeSlotDayEntity.html":{}}}],["day.entity.ts:13",{"_index":2660,"title":{},"body":{"entities/TimeSlotDayEntity.html":{}}}],["day.entity.ts:16",{"_index":2663,"title":{},"body":{"entities/TimeSlotDayEntity.html":{}}}],["day.entity.ts:19",{"_index":2659,"title":{},"body":{"entities/TimeSlotDayEntity.html":{}}}],["day.entity.ts:23",{"_index":2662,"title":{},"body":{"entities/TimeSlotDayEntity.html":{}}}],["day.repository.ts",{"_index":2666,"title":{},"body":{"classes/TimeSlotDayRepository.html":{}}}],["day_of_week",{"_index":505,"title":{},"body":{"classes/AddTimeSlotDayTable1629364845785.html":{},"entities/TimeSlotDayEntity.html":{}}}],["dayofweek",{"_index":2712,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["dayofweek(now",{"_index":2725,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["days",{"_index":482,"title":{},"body":{"classes/AddTimeSlotDTO.html":{},"injectables/ExportService.html":{},"interfaces/ITimeSlotData.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotRO.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"classes/UpdateTimeSlotDTO.html":{}}}],["days_of_weeks",{"_index":490,"title":{},"body":{"classes/AddTimeSlotDTO.html":{},"injectables/ExportService.html":{},"injectables/TriggerTimeSlotService.html":{},"miscellaneous/enumerations.html":{}}}],["days_of_weeks[day.touppercase",{"_index":2820,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["days_of_weeks[value.touppercase",{"_index":2798,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["daysofweek",{"_index":2672,"title":{},"body":{"entities/TimeSlotEntity.html":{}}}],["daysofweek.timeslot",{"_index":2673,"title":{},"body":{"entities/TimeSlotEntity.html":{}}}],["db.yml",{"_index":3404,"title":{},"body":{"index.html":{}}}],["decipher",{"_index":1138,"title":{},"body":{"classes/Encrypter.html":{}}}],["decipher.final",{"_index":1143,"title":{},"body":{"classes/Encrypter.html":{}}}],["decipher.update(buffer.from(hash",{"_index":1142,"title":{},"body":{"classes/Encrypter.html":{}}}],["decodedtoken",{"_index":685,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/PassportStrategy.html":{}}}],["decorator/user.decorator",{"_index":1692,"title":{},"body":{"controllers/LogoutController.html":{}}}],["decorators",{"_index":93,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"classes/AddContactDTO.html":{},"classes/AddFileDTO.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDTO.html":{},"classes/BasicConsumer.html":{},"controllers/CancelEmergencyMessageController.html":{},"classes/CategoryRO.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ConfirmUserEmailDTO.html":{},"entities/ContactEntity.html":{},"classes/ContactIdRO.html":{},"controllers/ContactListController.html":{},"classes/ContactRO.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"controllers/ExportUserDataController.html":{},"classes/ExportUserDataDTO.html":{},"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"classes/FileIdRO.html":{},"controllers/FileListController.html":{},"classes/FileRO.html":{},"controllers/GetAccessTokenController.html":{},"classes/GetAccessTokenDTO.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"controllers/NotePositiveInfoController.html":{},"classes/NotePositiveInfoDTO.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"classes/SendEmergencyMessageDTO.html":{},"controllers/SendSMSController.html":{},"classes/SendSmsDTO.html":{},"controllers/SendTestMessageController.html":{},"classes/SuccessRO.html":{},"entities/TimeSlotDayEntity.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TokenRO.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"classes/UpdateContactDTO.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"controllers/UploadFileController.html":{},"entities/UserEntity.html":{},"classes/UserRO.html":{}}}],["decrpyted",{"_index":1140,"title":{},"body":{"classes/Encrypter.html":{}}}],["decrpyted.tostring",{"_index":1144,"title":{},"body":{"classes/Encrypter.html":{}}}],["decrypt",{"_index":1111,"title":{},"body":{"classes/Encrypter.html":{}}}],["decrypt(hash",{"_index":1117,"title":{},"body":{"classes/Encrypter.html":{}}}],["decryptentity",{"_index":916,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["decryptentity(entity",{"_index":923,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["default",{"_index":22,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"injectables/AuthenticationService.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/Encrypter.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"interfaces/File.html":{},"classes/FileCategoryRepository.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"injectables/NotificationService.html":{},"classes/PassportStrategy.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"injectables/SchedulerService.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"injectables/UnconfirmedEmailService.html":{},"interfaces/UploadResult.html":{},"classes/UserEntitySubscriber.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["defaultjoboptions",{"_index":2373,"title":{},"body":{"modules/QueueModule.html":{}}}],["defaultstrategy",{"_index":736,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["defined",{"_index":34,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileDTO.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDTO.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"classes/BasicConsumer.html":{},"controllers/CancelEmergencyMessageController.html":{},"classes/CategoryRO.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ConfirmUserEmailDTO.html":{},"entities/ContactEntity.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactIdRO.html":{},"controllers/ContactListController.html":{},"classes/ContactRO.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/Encrypter.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"classes/ExportUserDataDTO.html":{},"entities/FileCategoryEntity.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"entities/FileEntity.html":{},"classes/FileIdRO.html":{},"controllers/FileListController.html":{},"classes/FileRO.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"classes/GetAccessTokenDTO.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"controllers/NotePositiveInfoController.html":{},"classes/NotePositiveInfoDTO.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"guards/RolesGuard.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"classes/SendEmergencyMessageDTO.html":{},"controllers/SendSMSController.html":{},"classes/SendSmsDTO.html":{},"controllers/SendTestMessageController.html":{},"classes/SuccessRO.html":{},"entities/TimeSlotDayEntity.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TimeSlotRepository.html":{},"classes/TokenRO.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"classes/UpdateContactDTO.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"controllers/UploadFileController.html":{},"entities/UserEntity.html":{},"classes/UserEntitySubscriber.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["delay",{"_index":1795,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["delayed",{"_index":2582,"title":{},"body":{"injectables/SchedulerService.html":{},"classes/SendEmergencyMessageDTO.html":{}}}],["delete",{"_index":774,"title":{},"body":{"controllers/CancelEmergencyMessageController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{}}}],["delete(':id",{"_index":1077,"title":{},"body":{"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{}}}],["delete('cancel/emergency",{"_index":782,"title":{},"body":{"controllers/CancelEmergencyMessageController.html":{}}}],["delete_contact_failed",{"_index":1028,"title":{},"body":{"injectables/ContactService.html":{}}}],["delete_file_from_db_failed",{"_index":1542,"title":{},"body":{"injectables/FileService.html":{}}}],["delete_file_from_s3_failed",{"_index":1543,"title":{},"body":{"injectables/FileService.html":{}}}],["delete_time_slot_failed",{"_index":2777,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["delete_user_from_cognito_failed",{"_index":3236,"title":{},"body":{"injectables/UserService.html":{}}}],["delete_user_from_db_failed",{"_index":3237,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteaccount",{"_index":1100,"title":{},"body":{"controllers/DeleteUserController.html":{}}}],["deleteaccount(@user",{"_index":1106,"title":{},"body":{"controllers/DeleteUserController.html":{}}}],["deleteaccount(user",{"_index":1101,"title":{},"body":{"controllers/DeleteUserController.html":{}}}],["deletecontact",{"_index":995,"title":{},"body":{"injectables/ContactService.html":{},"controllers/DeleteContactController-1.html":{}}}],["deletecontact(contactid",{"_index":1004,"title":{},"body":{"injectables/ContactService.html":{}}}],["deletecontact(user",{"_index":1083,"title":{},"body":{"controllers/DeleteContactController-1.html":{}}}],["deletecontactcontroller",{"_index":949,"title":{"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{}},"body":{"modules/ContactModule.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"modules/FileModule.html":{}}}],["deletefile",{"_index":1064,"title":{},"body":{"controllers/DeleteContactController.html":{},"injectables/FileService.html":{}}}],["deletefile(file",{"_index":1514,"title":{},"body":{"injectables/FileService.html":{}}}],["deletefile(user",{"_index":1065,"title":{},"body":{"controllers/DeleteContactController.html":{}}}],["deleteresult",{"_index":1022,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FileService.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UserService.html":{}}}],["deletetimeslot",{"_index":1089,"title":{},"body":{"controllers/DeleteTimeSlotController.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["deletetimeslot(timeslotid",{"_index":2756,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["deletetimeslot(user",{"_index":1090,"title":{},"body":{"controllers/DeleteTimeSlotController.html":{}}}],["deletetimeslotcontroller",{"_index":1087,"title":{"controllers/DeleteTimeSlotController.html":{}},"body":{"controllers/DeleteTimeSlotController.html":{},"modules/TriggerTimeSlotModule.html":{}}}],["deleteuser",{"_index":3212,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(user",{"_index":3220,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteusercontroller",{"_index":1097,"title":{"controllers/DeleteUserController.html":{}},"body":{"controllers/DeleteUserController.html":{},"modules/UserModule.html":{}}}],["delivered",{"_index":1950,"title":{},"body":{"injectables/NotificationService.html":{}}}],["dependencies",{"_index":557,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationModule.html":{},"modules/ContactModule.html":{},"modules/FileModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/TriggerTimeSlotModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":3417,"title":{},"body":{"properties.html":{}}}],["details",{"_index":1654,"title":{},"body":{"controllers/GetUserController.html":{}}}],["development",{"_index":3395,"title":{},"body":{"index.html":{}}}],["device",{"_index":2929,"title":{},"body":{"classes/UpdateUserDeviceIdDTO.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"modules/UserModule.html":{}}}],["device_id",{"_index":269,"title":{},"body":{"classes/AddDeviceIdToUserTable1632482760947.html":{},"entities/UserEntity.html":{}}}],["deviceid",{"_index":1759,"title":{},"body":{"injectables/MessageService.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"entities/UserEntity.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["dictionary",{"_index":185,"title":{},"body":{"controllers/AddContactController.html":{},"injectables/AuthenticationService.html":{},"injectables/FileService.html":{},"injectables/MessageService.html":{},"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{},"controllers/SendSMSController.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["directory",{"_index":3399,"title":{},"body":{"index.html":{}}}],["disable",{"_index":2575,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["disableautomatedemergencyforusers",{"_index":2319,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["disableautomatedemergencyforusers(userids",{"_index":2324,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["disabled",{"_index":2490,"title":{},"body":{"injectables/SchedulerService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["docker",{"_index":3401,"title":{},"body":{"index.html":{}}}],["domain",{"_index":3033,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["done",{"_index":814,"title":{},"body":{"injectables/CognitoStrategy.html":{},"classes/PassportStrategy.html":{}}}],["done(null",{"_index":818,"title":{},"body":{"injectables/CognitoStrategy.html":{}}}],["done(user",{"_index":828,"title":{},"body":{"injectables/CognitoStrategy.html":{}}}],["dotenv",{"_index":3285,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":18,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["down(queryrunner",{"_index":39,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["e",{"_index":2093,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["edit",{"_index":2936,"title":{},"body":{"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["email",{"_index":89,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"injectables/AuthenticationService.html":{},"controllers/ConfirmUserEmailController.html":{},"entities/ContactEntity.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactRO.html":{},"controllers/ExportUserDataController.html":{},"classes/ExportUserDataDTO.html":{},"classes/GetAccessTokenDTO.html":{},"interfaces/ICognito.html":{},"interfaces/IContactData.html":{},"interfaces/IUserData.html":{},"injectables/MessageService-1.html":{},"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendTestMessageController.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateContactDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"entities/UserEntity.html":{},"classes/UserEntitySubscriber.html":{},"modules/UserModule.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["email.attachment",{"_index":1984,"title":{},"body":{"injectables/NotificationService.html":{}}}],["email.client",{"_index":1879,"title":{},"body":{"injectables/NotificationService.html":{}}}],["email.controller",{"_index":3145,"title":{},"body":{"modules/UserModule.html":{}}}],["email.controller.ts",{"_index":831,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{}}}],["email.controller.ts:27",{"_index":837,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{}}}],["email.dto",{"_index":841,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{}}}],["email.dto.ts",{"_index":862,"title":{},"body":{"classes/ConfirmUserEmailDTO.html":{}}}],["email.dto.ts:5",{"_index":863,"title":{},"body":{"classes/ConfirmUserEmailDTO.html":{}}}],["email.entity",{"_index":2836,"title":{},"body":{"classes/UnconfirmedEmailEntitySubscriber.html":{}}}],["email.repository",{"_index":1243,"title":{},"body":{"injectables/ExportService.html":{},"injectables/UnconfirmedEmailService.html":{}}}],["email.repository.ts",{"_index":2846,"title":{},"body":{"classes/UnconfirmedEmailRepository.html":{}}}],["email.repository.ts:10",{"_index":2849,"title":{},"body":{"classes/UnconfirmedEmailRepository.html":{}}}],["email.repository.ts:6",{"_index":2850,"title":{},"body":{"classes/UnconfirmedEmailRepository.html":{}}}],["email.schema",{"_index":844,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{}}}],["email.sendparams",{"_index":1793,"title":{},"body":{"injectables/MessageService-1.html":{},"injectables/NotificationService.html":{}}}],["email.service",{"_index":847,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{},"controllers/UpdateUserProfileController.html":{},"modules/UserModule.html":{}}}],["email.service.ts",{"_index":2853,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["email.service.ts:24",{"_index":2857,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["email.service.ts:34",{"_index":2862,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["email.service.ts:46",{"_index":2860,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["email.service.ts:56",{"_index":2859,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["email_already_in_use",{"_index":2867,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["email_and_sms_not_allowed",{"_index":1907,"title":{},"body":{"injectables/NotificationService.html":{}}}],["email_verified",{"_index":1659,"title":{},"body":{"interfaces/ICognito.html":{},"injectables/UnconfirmedEmailService.html":{}}}],["emaildata",{"_index":1367,"title":{},"body":{"controllers/ExportUserDataController.html":{},"injectables/NotificationService.html":{},"controllers/UpdateUserProfileController.html":{}}}],["emergency",{"_index":765,"title":{},"body":{"controllers/CancelEmergencyMessageController.html":{},"modules/MessageModule.html":{},"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"classes/SendEmergencyMessageDTO.html":{},"controllers/SendTestMessageController.html":{},"miscellaneous/enumerations.html":{}}}],["emergency_alert",{"_index":3376,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["emergency_email_and_sms",{"_index":278,"title":{},"body":{"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"entities/ProfileEntity.html":{}}}],["emergency_message",{"_index":282,"title":{},"body":{"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"entities/ProfileEntity.html":{}}}],["emergency_message_with${user.profile?.locationaccess",{"_index":2038,"title":{},"body":{"injectables/NotificationService.html":{}}}],["emergency_message_with_location",{"_index":3366,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["emergency_message_without_location",{"_index":3364,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["emergency_pulse_based_check",{"_index":3374,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["emergency_time_based_check",{"_index":3375,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["emergencyemailandsms",{"_index":1667,"title":{},"body":{"interfaces/IProfileData.html":{},"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{}}}],["emergencymessage",{"_index":1668,"title":{},"body":{"interfaces/IProfileData.html":{},"classes/MessageConsumer.html":{},"injectables/NotificationService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{}}}],["emergencytrigger.custommessageprefix",{"_index":2026,"title":{},"body":{"injectables/NotificationService.html":{}}}],["emergencytrigger.ifthereareattachments",{"_index":2035,"title":{},"body":{"injectables/NotificationService.html":{}}}],["empty",{"_index":1975,"title":{},"body":{"injectables/NotificationService.html":{}}}],["en",{"_index":3372,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["en_mail_template",{"_index":3323,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["encoding",{"_index":1339,"title":{},"body":{"injectables/ExportService.html":{}}}],["encrypt",{"_index":1112,"title":{},"body":{"classes/Encrypter.html":{}}}],["encrypt(text",{"_index":1123,"title":{},"body":{"classes/Encrypter.html":{}}}],["encrypted",{"_index":1134,"title":{},"body":{"classes/Encrypter.html":{}}}],["encrypted.tostring('hex",{"_index":1137,"title":{},"body":{"classes/Encrypter.html":{}}}],["encryptentity",{"_index":917,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["encryptentity(event.entity",{"_index":921,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["encrypter",{"_index":919,"title":{"classes/Encrypter.html":{}},"body":{"classes/ContactEntitySubscriber.html":{},"classes/Encrypter.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{},"injectables/UserService.html":{}}}],["encrypter.algorithm",{"_index":1129,"title":{},"body":{"classes/Encrypter.html":{}}}],["encryptioncolumns",{"_index":899,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["ends",{"_index":2573,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["english",{"_index":3371,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["entities",{"_index":601,"title":{},"body":{"modules/AppModule.html":{},"entities/ContactEntity.html":{},"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"entities/TimeSlotDayEntity.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{},"entities/UserEntity.html":{},"overview.html":{}}}],["entity",{"_index":864,"title":{"entities/ContactEntity.html":{},"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"entities/TimeSlotDayEntity.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{},"entities/UserEntity.html":{}},"body":{"entities/ContactEntity.html":{},"classes/ContactEntitySubscriber.html":{},"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"entities/TimeSlotDayEntity.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"entities/UserEntity.html":{},"classes/UserEntitySubscriber.html":{}}}],["entity(\"positive_info",{"_index":2118,"title":{},"body":{"entities/PositiveInfoEntity.html":{}}}],["entity(\"profile",{"_index":2266,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["entity('contact",{"_index":894,"title":{},"body":{"entities/ContactEntity.html":{}}}],["entity('file",{"_index":1442,"title":{},"body":{"entities/FileEntity.html":{}}}],["entity('file_category",{"_index":1396,"title":{},"body":{"entities/FileCategoryEntity.html":{}}}],["entity('time_slot",{"_index":2681,"title":{},"body":{"entities/TimeSlotEntity.html":{}}}],["entity('time_slot_day",{"_index":2664,"title":{},"body":{"entities/TimeSlotDayEntity.html":{}}}],["entity('unconfirmed_email",{"_index":2833,"title":{},"body":{"entities/UnconfirmedEmailEntity.html":{}}}],["entity('user",{"_index":3123,"title":{},"body":{"entities/UserEntity.html":{}}}],["entity.dateofbirth",{"_index":2277,"title":{},"body":{"classes/ProfileEntitySubscriber.html":{}}}],["entity.lasthospitalvisit",{"_index":2275,"title":{},"body":{"classes/ProfileEntitySubscriber.html":{}}}],["entity.prefix",{"_index":2273,"title":{},"body":{"classes/ProfileEntitySubscriber.html":{}}}],["entity.seriousmedicalissues",{"_index":2272,"title":{},"body":{"classes/ProfileEntitySubscriber.html":{}}}],["entity/contact.entity",{"_index":986,"title":{},"body":{"classes/ContactRepository.html":{},"injectables/ContactService.html":{}}}],["entity/file",{"_index":1404,"title":{},"body":{"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{}}}],["entity/file.entity",{"_index":1493,"title":{},"body":{"classes/FileRepository.html":{},"injectables/FileService.html":{}}}],["entity/positive",{"_index":2155,"title":{},"body":{"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{}}}],["entity/profile.entity",{"_index":1234,"title":{},"body":{"injectables/ExportService.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{}}}],["entity/time",{"_index":469,"title":{},"body":{"controllers/AddTimeSlotController.html":{},"classes/TimeSlotDayRepository.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["entity/unconfirmed_email.entity",{"_index":1244,"title":{},"body":{"injectables/ExportService.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{}}}],["entity/user.entity",{"_index":1233,"title":{},"body":{"injectables/ExportService.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["entitymanager",{"_index":2809,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["entitymanager.delete(timeslotdayentity",{"_index":2812,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["entitymanager.save",{"_index":2816,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["entitymanager.update",{"_index":2810,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["entityrepository",{"_index":985,"title":{},"body":{"classes/ContactRepository.html":{},"classes/FileCategoryRepository.html":{},"classes/FileRepository.html":{},"classes/PositiveInfoRepository.html":{},"classes/ProfileRepository.html":{},"classes/TimeSlotDayRepository.html":{},"classes/TimeSlotRepository.html":{},"classes/UnconfirmedEmailRepository.html":{},"classes/UserRepository.html":{}}}],["entityrepository(contactentity",{"_index":987,"title":{},"body":{"classes/ContactRepository.html":{}}}],["entityrepository(filecategoryentity",{"_index":1406,"title":{},"body":{"classes/FileCategoryRepository.html":{}}}],["entityrepository(fileentity",{"_index":1494,"title":{},"body":{"classes/FileRepository.html":{}}}],["entityrepository(positiveinfoentity",{"_index":2157,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["entityrepository(profileentity",{"_index":2330,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["entityrepository(timeslotdayentity",{"_index":2668,"title":{},"body":{"classes/TimeSlotDayRepository.html":{}}}],["entityrepository(timeslotentity",{"_index":2701,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["entityrepository(unconfirmedemailentity",{"_index":2851,"title":{},"body":{"classes/UnconfirmedEmailRepository.html":{}}}],["entityrepository(userentity",{"_index":3210,"title":{},"body":{"classes/UserRepository.html":{}}}],["entitysubscriberinterface",{"_index":898,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["enum",{"_index":303,"title":{},"body":{"classes/AddFileDTO.html":{},"classes/AddTimeSlotDTO.html":{},"injectables/ExportService.html":{},"classes/SendEmergencyMessageDTO.html":{},"classes/SendSmsDTO.html":{},"injectables/TriggerTimeSlotService.html":{},"classes/UpdateTimeSlotDTO.html":{},"controllers/UploadFileController.html":{},"entities/UserEntity.html":{},"classes/UserRO.html":{}}}],["enum/category.enum",{"_index":307,"title":{},"body":{"classes/AddFileDTO.html":{},"controllers/UploadFileController.html":{}}}],["enum/days",{"_index":491,"title":{},"body":{"classes/AddTimeSlotDTO.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["enum/message",{"_index":2620,"title":{},"body":{"classes/SendEmergencyMessageDTO.html":{},"classes/SendSmsDTO.html":{}}}],["enumerations",{"_index":3318,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":3396,"title":{},"body":{"index.html":{}}}],["error",{"_index":684,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/BasicConsumer.html":{},"classes/CustomError.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"injectables/FileService.html":{},"classes/MessageConsumer.html":{},"injectables/MessageService-1.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["error.code",{"_index":2875,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["error.message",{"_index":761,"title":{},"body":{"classes/BasicConsumer.html":{}}}],["error.stack",{"_index":762,"title":{},"body":{"classes/BasicConsumer.html":{}}}],["error.ts",{"_index":1048,"title":{},"body":{"classes/CustomError.html":{}}}],["error.ts:19",{"_index":1057,"title":{},"body":{"classes/CustomError.html":{}}}],["error.ts:4",{"_index":1055,"title":{},"body":{"classes/CustomError.html":{}}}],["error.ts:5",{"_index":1056,"title":{},"body":{"classes/CustomError.html":{}}}],["error.ts:6",{"_index":1054,"title":{},"body":{"classes/CustomError.html":{}}}],["error/custom",{"_index":2057,"title":{},"body":{"injectables/NumericIdValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["error/keys",{"_index":2056,"title":{},"body":{"injectables/NumericIdValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["error?.stack",{"_index":696,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["errormessagero",{"_index":174,"title":{"classes/ErrorMessageRO.html":{}},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["errormessagero})@apiconsumes('multipart/form",{"_index":3070,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["errormessagero})@apioperation({summary",{"_index":133,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["errorresponse",{"_index":1178,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["errorro",{"_index":1146,"title":{"classes/ErrorRO.html":{}},"body":{"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{}}}],["escalation",{"_index":2516,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["escapedvariables",{"_index":1961,"title":{},"body":{"injectables/NotificationService.html":{}}}],["escapedvariables[key",{"_index":1963,"title":{},"body":{"injectables/NotificationService.html":{}}}],["escapehtml",{"_index":1913,"title":{},"body":{"injectables/NotificationService.html":{}}}],["escapehtml(value",{"_index":1965,"title":{},"body":{"injectables/NotificationService.html":{}}}],["event",{"_index":910,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["eventsubscriber",{"_index":915,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["example",{"_index":108,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"classes/AddContactDTO.html":{},"classes/AddFileDTO.html":{},"classes/AddTimeSlotDTO.html":{},"classes/SendEmergencyMessageDTO.html":{},"classes/SendSmsDTO.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateContactDTO.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{}}}],["excel",{"_index":1979,"title":{},"body":{"injectables/NotificationService.html":{}}}],["exception",{"_index":1164,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exception.error",{"_index":1177,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":1173,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exception.message",{"_index":1176,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exception.message.message",{"_index":1175,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exception.stack",{"_index":1189,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":1158,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exceptionsfilter",{"_index":1156,"title":{"classes/ExceptionsFilter.html":{}},"body":{"classes/ExceptionsFilter.html":{}}}],["exclude",{"_index":793,"title":{},"body":{"classes/CategoryRO.html":{},"classes/ContactIdRO.html":{},"classes/ContactRO.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/FileIdRO.html":{},"classes/FileRO.html":{},"classes/ProfileRO.html":{},"classes/SuccessRO.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TokenRO.html":{},"classes/UserRO.html":{}}}],["execute",{"_index":2184,"title":{},"body":{"classes/PositiveInfoRepository.html":{},"classes/ProfileRepository.html":{},"classes/TimeSlotRepository.html":{}}}],["executioncontext",{"_index":2398,"title":{},"body":{"guards/RolesGuard.html":{}}}],["expiredinformation",{"_index":2537,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["expires",{"_index":1552,"title":{},"body":{"injectables/FileService.html":{}}}],["export",{"_index":50,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileDTO.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDTO.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"modules/AuthorizationModule.html":{},"classes/BasicConsumer.html":{},"controllers/CancelEmergencyMessageController.html":{},"classes/CategoryRO.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ConfirmUserEmailDTO.html":{},"entities/ContactEntity.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactIdRO.html":{},"controllers/ContactListController.html":{},"modules/ContactModule.html":{},"classes/ContactRO.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/Encrypter.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"classes/ExportUserDataDTO.html":{},"interfaces/File.html":{},"entities/FileCategoryEntity.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"entities/FileEntity.html":{},"classes/FileIdRO.html":{},"controllers/FileListController.html":{},"modules/FileModule.html":{},"classes/FileRO.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"classes/GetAccessTokenDTO.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"interfaces/ICognito.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"interfaces/ITimeSlotData.html":{},"interfaces/IUserData.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"controllers/NotePositiveInfoController.html":{},"classes/NotePositiveInfoDTO.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"modules/QueueModule.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"guards/RolesGuard.html":{},"modules/SchedulerModule.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"classes/SendEmergencyMessageDTO.html":{},"controllers/SendSMSController.html":{},"classes/SendSmsDTO.html":{},"controllers/SendTestMessageController.html":{},"classes/SuccessRO.html":{},"entities/TimeSlotDayEntity.html":{},"classes/TimeSlotDayRepository.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TimeSlotRepository.html":{},"classes/TokenRO.html":{},"modules/TriggerTimeSlotModule.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"classes/UpdateContactDTO.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"controllers/UploadFileController.html":{},"interfaces/UploadResult.html":{},"entities/UserEntity.html":{},"classes/UserEntitySubscriber.html":{},"modules/UserModule.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["export_data_failed",{"_index":1908,"title":{},"body":{"injectables/NotificationService.html":{}}}],["exportdataasbase64",{"_index":1194,"title":{},"body":{"injectables/ExportService.html":{}}}],["exportdataasbase64(userid",{"_index":1207,"title":{},"body":{"injectables/ExportService.html":{}}}],["exported",{"_index":1981,"title":{},"body":{"injectables/NotificationService.html":{}}}],["exporteddata",{"_index":1374,"title":{},"body":{"controllers/ExportUserDataController.html":{},"injectables/NotificationService.html":{}}}],["exports",{"_index":720,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/ContactModule.html":{},"modules/FileModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/TriggerTimeSlotModule.html":{},"modules/UserModule.html":{}}}],["exportservice",{"_index":1192,"title":{"injectables/ExportService.html":{}},"body":{"injectables/ExportService.html":{},"injectables/NotificationService.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["exportuserdata",{"_index":1345,"title":{},"body":{"controllers/ExportUserDataController.html":{}}}],["exportuserdata(user",{"_index":1346,"title":{},"body":{"controllers/ExportUserDataController.html":{}}}],["exportuserdatacontroller",{"_index":1342,"title":{"controllers/ExportUserDataController.html":{}},"body":{"controllers/ExportUserDataController.html":{},"modules/UserModule.html":{}}}],["exportuserdatadto",{"_index":1347,"title":{"classes/ExportUserDataDTO.html":{}},"body":{"controllers/ExportUserDataController.html":{},"classes/ExportUserDataDTO.html":{}}}],["exportuserdataschema",{"_index":1361,"title":{},"body":{"controllers/ExportUserDataController.html":{}}}],["expose",{"_index":794,"title":{},"body":{"classes/CategoryRO.html":{},"classes/ContactIdRO.html":{},"classes/ContactRO.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/FileIdRO.html":{},"classes/FileRO.html":{},"classes/ProfileRO.html":{},"classes/SuccessRO.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TokenRO.html":{},"classes/UserRO.html":{}}}],["expose()@apiproperty({type",{"_index":789,"title":{},"body":{"classes/CategoryRO.html":{},"classes/ContactIdRO.html":{},"classes/ContactRO.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/FileIdRO.html":{},"classes/FileRO.html":{},"classes/ProfileRO.html":{},"classes/SuccessRO.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/UserRO.html":{}}}],["expose()@transform",{"_index":2281,"title":{},"body":{"classes/ProfileRO.html":{},"classes/UserRO.html":{}}}],["expose({name",{"_index":2728,"title":{},"body":{"classes/TokenRO.html":{}}}],["express",{"_index":3082,"title":{},"body":{"controllers/UploadFileController.html":{},"dependencies.html":{}}}],["extends",{"_index":85,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"injectables/CognitoStrategy.html":{},"classes/ContactRepository.html":{},"classes/CustomError.html":{},"classes/FileCategoryRepository.html":{},"classes/FileRepository.html":{},"classes/MessageConsumer.html":{},"classes/PositiveInfoRepository.html":{},"classes/ProfileRepository.html":{},"injectables/SchedulerService.html":{},"classes/TimeSlotDayRepository.html":{},"classes/TimeSlotRepository.html":{},"classes/UnconfirmedEmailRepository.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{}}}],["extractjwt",{"_index":802,"title":{},"body":{"injectables/CognitoStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":810,"title":{},"body":{"injectables/CognitoStrategy.html":{}}}],["f",{"_index":3403,"title":{},"body":{"index.html":{}}}],["fail",{"_index":2063,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["failed",{"_index":758,"title":{},"body":{"classes/BasicConsumer.html":{}}}],["false",{"_index":98,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileDTO.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddTimeSlotDTO.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"classes/ExportUserDataDTO.html":{},"controllers/LogoutController.html":{},"injectables/MessageService.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"classes/ProfileRepository.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"classes/SendEmergencyMessageDTO.html":{},"controllers/SendSMSController.html":{},"injectables/TriggerTimeSlotService.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateContactDTO.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{}}}],["file",{"_index":5,"title":{"interfaces/File.html":{}},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileDTO.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDTO.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"modules/AuthorizationModule.html":{},"classes/BasicConsumer.html":{},"controllers/CancelEmergencyMessageController.html":{},"classes/CategoryRO.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ConfirmUserEmailDTO.html":{},"entities/ContactEntity.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactIdRO.html":{},"controllers/ContactListController.html":{},"modules/ContactModule.html":{},"classes/ContactRO.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/Encrypter.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"classes/ExportUserDataDTO.html":{},"interfaces/File.html":{},"entities/FileCategoryEntity.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"entities/FileEntity.html":{},"classes/FileIdRO.html":{},"controllers/FileListController.html":{},"modules/FileModule.html":{},"classes/FileRO.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"classes/GetAccessTokenDTO.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"interfaces/ICognito.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"interfaces/ITimeSlotData.html":{},"interfaces/IUserData.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"controllers/NotePositiveInfoController.html":{},"classes/NotePositiveInfoDTO.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"modules/QueueModule.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"guards/RolesGuard.html":{},"modules/SchedulerModule.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"classes/SendEmergencyMessageDTO.html":{},"controllers/SendSMSController.html":{},"classes/SendSmsDTO.html":{},"controllers/SendTestMessageController.html":{},"classes/SuccessRO.html":{},"entities/TimeSlotDayEntity.html":{},"classes/TimeSlotDayRepository.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TimeSlotRepository.html":{},"classes/TokenRO.html":{},"modules/TriggerTimeSlotModule.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"classes/UpdateContactDTO.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"controllers/UploadFileController.html":{},"interfaces/UploadResult.html":{},"entities/UserEntity.html":{},"classes/UserEntitySubscriber.html":{},"modules/UserModule.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["file.buffer",{"_index":1577,"title":{},"body":{"injectables/FileService.html":{}}}],["file.category",{"_index":1390,"title":{},"body":{"entities/FileCategoryEntity.html":{}}}],["file.category.code",{"_index":1306,"title":{},"body":{"injectables/ExportService.html":{}}}],["file.category_id",{"_index":1498,"title":{},"body":{"classes/FileRepository.html":{}}}],["file.controller",{"_index":1465,"title":{},"body":{"modules/FileModule.html":{}}}],["file.controller.ts",{"_index":1063,"title":{},"body":{"controllers/DeleteContactController.html":{},"controllers/UploadFileController.html":{}}}],["file.controller.ts:33",{"_index":1068,"title":{},"body":{"controllers/DeleteContactController.html":{}}}],["file.controller.ts:68",{"_index":3075,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["file.dto",{"_index":3083,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["file.dto.ts",{"_index":301,"title":{},"body":{"classes/AddFileDTO.html":{}}}],["file.dto.ts:13",{"_index":306,"title":{},"body":{"classes/AddFileDTO.html":{}}}],["file.entity",{"_index":1395,"title":{},"body":{"entities/FileCategoryEntity.html":{}}}],["file.key",{"_index":1591,"title":{},"body":{"injectables/FileService.html":{}}}],["file.mimetype",{"_index":1587,"title":{},"body":{"injectables/FileService.html":{},"injectables/NotificationService.html":{}}}],["file.name",{"_index":1991,"title":{},"body":{"injectables/NotificationService.html":{}}}],["file.originalname.replace",{"_index":1584,"title":{},"body":{"injectables/FileService.html":{}}}],["file.ro",{"_index":795,"title":{},"body":{"classes/CategoryRO.html":{}}}],["file.schema",{"_index":3085,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["file.size",{"_index":1567,"title":{},"body":{"injectables/FileService.html":{}}}],["file.user",{"_index":3110,"title":{},"body":{"entities/UserEntity.html":{}}}],["file/entity/file.entity",{"_index":1246,"title":{},"body":{"injectables/ExportService.html":{},"entities/UserEntity.html":{}}}],["file/file.module",{"_index":594,"title":{},"body":{"modules/AppModule.html":{},"modules/NotificationModule.html":{},"modules/UserModule.html":{}}}],["file/repository/file.repository",{"_index":1245,"title":{},"body":{"injectables/ExportService.html":{},"injectables/NotificationService.html":{}}}],["file/service/file.service",{"_index":1247,"title":{},"body":{"injectables/ExportService.html":{},"injectables/NotificationService.html":{}}}],["file_category",{"_index":290,"title":{},"body":{"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/FileRepository.html":{}}}],["file_category_not_found",{"_index":1417,"title":{},"body":{"injectables/FileCategoryService.html":{}}}],["file_is_required",{"_index":1537,"title":{},"body":{"injectables/FileService.html":{}}}],["file_is_too_big",{"_index":1539,"title":{},"body":{"injectables/FileService.html":{}}}],["file_not_found",{"_index":1541,"title":{},"body":{"injectables/FileService.html":{}}}],["file_type_is_invalid",{"_index":1538,"title":{},"body":{"injectables/FileService.html":{}}}],["file_upload_failed",{"_index":1536,"title":{},"body":{"injectables/FileService.html":{}}}],["filecategoryentity",{"_index":1384,"title":{"entities/FileCategoryEntity.html":{}},"body":{"entities/FileCategoryEntity.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"entities/FileEntity.html":{}}}],["filecategoryrepository",{"_index":1397,"title":{"classes/FileCategoryRepository.html":{}},"body":{"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{}}}],["filecategoryrepositoryprovider",{"_index":1475,"title":{},"body":{"modules/FileModule.html":{}}}],["filecategoryservice",{"_index":1407,"title":{"injectables/FileCategoryService.html":{}},"body":{"injectables/FileCategoryService.html":{},"controllers/FileListController.html":{},"modules/FileModule.html":{},"controllers/UploadFileController.html":{},"overview.html":{}}}],["filedetails",{"_index":3069,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["fileentity",{"_index":1212,"title":{"entities/FileEntity.html":{}},"body":{"injectables/ExportService.html":{},"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/UploadFileController.html":{},"entities/UserEntity.html":{}}}],["fileid",{"_index":1066,"title":{},"body":{"controllers/DeleteContactController.html":{}}}],["fileidro",{"_index":1443,"title":{"classes/FileIdRO.html":{}},"body":{"classes/FileIdRO.html":{},"controllers/UploadFileController.html":{}}}],["fileinterceptor",{"_index":3080,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["filekeys",{"_index":1300,"title":{},"body":{"injectables/ExportService.html":{}}}],["filekeys[index",{"_index":1304,"title":{},"body":{"injectables/ExportService.html":{}}}],["filelistcontroller",{"_index":1445,"title":{"controllers/FileListController.html":{}},"body":{"controllers/FileListController.html":{},"modules/FileModule.html":{}}}],["filemodule",{"_index":562,"title":{"modules/FileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FileModule.html":{},"modules/NotificationModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["filename",{"_index":1980,"title":{},"body":{"injectables/NotificationService.html":{}}}],["filepath",{"_index":1311,"title":{},"body":{"injectables/ExportService.html":{}}}],["filerepository",{"_index":1205,"title":{"classes/FileRepository.html":{}},"body":{"injectables/ExportService.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"injectables/NotificationService.html":{}}}],["filerepositoryprovider",{"_index":1473,"title":{},"body":{"modules/FileModule.html":{}}}],["filero",{"_index":791,"title":{"classes/FileRO.html":{}},"body":{"classes/CategoryRO.html":{},"classes/FileRO.html":{}}}],["files",{"_index":788,"title":{},"body":{"classes/CategoryRO.html":{},"injectables/ExportService.html":{},"entities/FileCategoryEntity.html":{},"controllers/FileListController.html":{},"injectables/NotificationService.html":{},"controllers/UploadFileController.html":{},"entities/UserEntity.html":{}}}],["files.length",{"_index":1331,"title":{},"body":{"injectables/ExportService.html":{},"injectables/NotificationService.html":{},"controllers/UploadFileController.html":{}}}],["files.map((file",{"_index":1458,"title":{},"body":{"controllers/FileListController.html":{}}}],["fileservice",{"_index":1070,"title":{"injectables/FileService.html":{}},"body":{"controllers/DeleteContactController.html":{},"injectables/ExportService.html":{},"controllers/FileListController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/NotificationService.html":{},"controllers/UploadFileController.html":{},"overview.html":{}}}],["filesmapper",{"_index":1453,"title":{},"body":{"controllers/FileListController.html":{}}}],["filllevel",{"_index":3156,"title":{},"body":{"classes/UserRO.html":{}}}],["filter",{"_index":692,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["filter((value",{"_index":2813,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["findactivecontactsbyuserid",{"_index":996,"title":{},"body":{"injectables/ContactService.html":{}}}],["findactivecontactsbyuserid(userid",{"_index":1007,"title":{},"body":{"injectables/ContactService.html":{}}}],["findactivetimeslots",{"_index":2692,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["findactivetimeslots(userid",{"_index":2696,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["findall",{"_index":1410,"title":{},"body":{"injectables/FileCategoryService.html":{}}}],["findbycategorycodeanduserid",{"_index":1485,"title":{},"body":{"classes/FileRepository.html":{},"injectables/FileService.html":{}}}],["findbycategorycodeanduserid(codes",{"_index":1488,"title":{},"body":{"classes/FileRepository.html":{},"injectables/FileService.html":{}}}],["findbycode",{"_index":2847,"title":{},"body":{"classes/UnconfirmedEmailRepository.html":{}}}],["findbycode(code",{"_index":2848,"title":{},"body":{"classes/UnconfirmedEmailRepository.html":{}}}],["findbycodeorfail",{"_index":1411,"title":{},"body":{"injectables/FileCategoryService.html":{},"injectables/UnconfirmedEmailService.html":{}}}],["findbycodeorfail(code",{"_index":1415,"title":{},"body":{"injectables/FileCategoryService.html":{},"injectables/UnconfirmedEmailService.html":{}}}],["findbydeviceid",{"_index":3201,"title":{},"body":{"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["findbydeviceid(deviceid",{"_index":3205,"title":{},"body":{"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["findbyemail",{"_index":3202,"title":{},"body":{"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["findbyemail(email",{"_index":3207,"title":{},"body":{"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["findbyid",{"_index":997,"title":{},"body":{"injectables/ContactService.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["findbyid(id",{"_index":1009,"title":{},"body":{"injectables/ContactService.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["findbyidanduseridorfail",{"_index":998,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FileService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["findbyidanduseridorfail(id",{"_index":1011,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FileService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["findbyidorfail",{"_index":3213,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyidorfail(id",{"_index":3225,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyuserid",{"_index":2123,"title":{},"body":{"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"classes/TimeSlotRepository.html":{},"classes/UnconfirmedEmailRepository.html":{}}}],["findbyuserid(id",{"_index":2195,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["findbyuserid(userid",{"_index":2138,"title":{},"body":{"classes/PositiveInfoRepository.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"classes/TimeSlotRepository.html":{},"classes/UnconfirmedEmailRepository.html":{}}}],["findbyuseridandperiodstart",{"_index":2745,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["findbyuseridandperiodstart(userid",{"_index":2759,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["findbyuseridorfail",{"_index":2746,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["findbyuseridorfail(userid",{"_index":2761,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["findcontactsbyuserid",{"_index":999,"title":{},"body":{"injectables/ContactService.html":{}}}],["findcontactsbyuserid(userid",{"_index":1013,"title":{},"body":{"injectables/ContactService.html":{}}}],["findexpiredinformation",{"_index":2124,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["findfilesbyuserid",{"_index":1502,"title":{},"body":{"injectables/FileService.html":{}}}],["findfilesbyuserid(userid",{"_index":1518,"title":{},"body":{"injectables/FileService.html":{}}}],["findjobbyuserid",{"_index":1786,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["findjobbyuserid(userid",{"_index":1799,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["findmanybyparams",{"_index":975,"title":{},"body":{"classes/ContactRepository.html":{},"classes/FileCategoryRepository.html":{},"classes/FileRepository.html":{}}}],["findmanybyparams(params",{"_index":979,"title":{},"body":{"classes/ContactRepository.html":{},"classes/FileCategoryRepository.html":{},"classes/FileRepository.html":{}}}],["findonebyparams",{"_index":976,"title":{},"body":{"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["findonebyparams(params",{"_index":983,"title":{},"body":{"classes/ContactRepository.html":{},"classes/FileCategoryRepository.html":{},"classes/FileRepository.html":{},"classes/TimeSlotRepository.html":{}}}],["findpushnotificationwithoutreaction",{"_index":2125,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["findpushnotificationwithoutreaction(regularpushnotification",{"_index":2141,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["findslotstoinform",{"_index":2693,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["findsmswithoutreaction",{"_index":2126,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["findsmswithoutreaction(regularpushnotification",{"_index":2143,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["findwhereregularnotificationisneeded",{"_index":2320,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["firebase",{"_index":1756,"title":{},"body":{"injectables/MessageService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["firebase_provider",{"_index":3358,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["firebaseprovider",{"_index":1750,"title":{},"body":{"modules/MessageModule.html":{}}}],["fk_conversationtouser",{"_index":230,"title":{},"body":{"classes/AddContactTable1625819654567.html":{}}}],["fk_filetofilecategory",{"_index":317,"title":{},"body":{"classes/AddFileTable1630406751456.html":{}}}],["fk_filetouser",{"_index":319,"title":{},"body":{"classes/AddFileTable1630406751456.html":{}}}],["fk_positiveinfotouser",{"_index":383,"title":{},"body":{"classes/AddPositiveInfoTable1632807482818.html":{}}}],["fk_profiletouser",{"_index":395,"title":{},"body":{"classes/AddProfileTable1626246168913.html":{}}}],["fk_timeslotdaytotimeslot",{"_index":498,"title":{},"body":{"classes/AddTimeSlotDayTable1629364845785.html":{}}}],["fk_timeslottouser",{"_index":511,"title":{},"body":{"classes/AddTimeSlotTable1629364182226.html":{}}}],["fk_unconfirmedemailtouser",{"_index":542,"title":{},"body":{"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["forbiddenexception",{"_index":2080,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["forbiddenexception(missing_authentication_token",{"_index":2090,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["foreignkeycategoryid",{"_index":316,"title":{},"body":{"classes/AddFileTable1630406751456.html":{}}}],["foreignkeyuserid",{"_index":229,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["format",{"_index":3089,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["forwardref",{"_index":721,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/TriggerTimeSlotModule.html":{}}}],["frequency_of_regular_notification",{"_index":426,"title":{},"body":{"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"entities/ProfileEntity.html":{},"classes/ProfileRepository.html":{}}}],["frequencyofregularnotification",{"_index":1669,"title":{},"body":{"interfaces/IProfileData.html":{},"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{}}}],["friday",{"_index":3343,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fromtime",{"_index":2466,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["front",{"_index":1471,"title":{},"body":{"modules/FileModule.html":{}}}],["fs",{"_index":1227,"title":{},"body":{"injectables/ExportService.html":{},"dependencies.html":{}}}],["fs.appendfilesync(filepath",{"_index":1337,"title":{},"body":{"injectables/ExportService.html":{}}}],["fs.readfilesync(path.resolve(filepath",{"_index":1338,"title":{},"body":{"injectables/ExportService.html":{}}}],["fs.unlinksync(path.resolve(filepath",{"_index":1341,"title":{},"body":{"injectables/ExportService.html":{}}}],["function",{"_index":2069,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["functions",{"_index":3386,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":1585,"title":{},"body":{"injectables/FileService.html":{}}}],["generateandsendcodeconfirmingemailchange",{"_index":2983,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["generateandsendcodeconfirmingemailchange(data",{"_index":2987,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["generationstrategy",{"_index":245,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["get(\"emergencytrigger.defaultmessage",{"_index":2018,"title":{},"body":{"injectables/NotificationService.html":{}}}],["get(\"firebase.notification.message.pulsebased",{"_index":2545,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["get(\"firebase.sms",{"_index":2558,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["get('time",{"_index":1637,"title":{},"body":{"controllers/GetListOfTimeSlotsController.html":{}}}],["get(this.config.get('authorization.jwks",{"_index":670,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["get_file_categories_failed",{"_index":1418,"title":{},"body":{"injectables/FileCategoryService.html":{}}}],["get_file_content_failed",{"_index":1909,"title":{},"body":{"injectables/NotificationService.html":{}}}],["get_file_url_failed",{"_index":1544,"title":{},"body":{"injectables/FileService.html":{}}}],["get_job_failed",{"_index":1807,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["getaccesstoken",{"_index":1597,"title":{},"body":{"controllers/GetAccessTokenController.html":{}}}],["getaccesstoken(params",{"_index":1598,"title":{},"body":{"controllers/GetAccessTokenController.html":{}}}],["getaccesstokencontroller",{"_index":718,"title":{"controllers/GetAccessTokenController.html":{}},"body":{"modules/AuthorizationModule.html":{},"controllers/GetAccessTokenController.html":{}}}],["getaccesstokendto",{"_index":1599,"title":{"classes/GetAccessTokenDTO.html":{}},"body":{"controllers/GetAccessTokenController.html":{},"classes/GetAccessTokenDTO.html":{}}}],["getaccesstokenschema",{"_index":1605,"title":{},"body":{"controllers/GetAccessTokenController.html":{}}}],["getactivetimeslot",{"_index":2747,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["getactivetimeslot(userid",{"_index":2763,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["getcontactlist",{"_index":930,"title":{},"body":{"controllers/ContactListController.html":{}}}],["getcontactlist(@user",{"_index":939,"title":{},"body":{"controllers/ContactListController.html":{}}}],["getcontactlist(user",{"_index":931,"title":{},"body":{"controllers/ContactListController.html":{}}}],["getenumkeybyvalue",{"_index":1240,"title":{},"body":{"injectables/ExportService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["getenumkeybyvalue(days_of_weeks",{"_index":1289,"title":{},"body":{"injectables/ExportService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["getenumkeys",{"_index":308,"title":{},"body":{"classes/AddFileDTO.html":{},"classes/AddTimeSlotDTO.html":{}}}],["getenumkeys(days_of_weeks",{"_index":493,"title":{},"body":{"classes/AddTimeSlotDTO.html":{}}}],["getfileasbase64",{"_index":1503,"title":{},"body":{"injectables/FileService.html":{}}}],["getfileasbase64(key",{"_index":1520,"title":{},"body":{"injectables/FileService.html":{}}}],["getfilelist",{"_index":1447,"title":{},"body":{"controllers/FileListController.html":{}}}],["getfilelist(@user",{"_index":1455,"title":{},"body":{"controllers/FileListController.html":{}}}],["getfilelist(user",{"_index":1448,"title":{},"body":{"controllers/FileListController.html":{}}}],["getfileurl",{"_index":1504,"title":{},"body":{"injectables/FileService.html":{}}}],["getfileurl(key",{"_index":1522,"title":{},"body":{"injectables/FileService.html":{}}}],["gethello",{"_index":630,"title":{},"body":{"injectables/AppService.html":{}}}],["getjob(`${process.emergency}_${userid",{"_index":1811,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["getlistoftimeslots",{"_index":1627,"title":{},"body":{"controllers/GetListOfTimeSlotsController.html":{}}}],["getlistoftimeslots(@user",{"_index":1638,"title":{},"body":{"controllers/GetListOfTimeSlotsController.html":{}}}],["getlistoftimeslots(user",{"_index":1628,"title":{},"body":{"controllers/GetListOfTimeSlotsController.html":{}}}],["getlistoftimeslotscontroller",{"_index":1624,"title":{"controllers/GetListOfTimeSlotsController.html":{}},"body":{"controllers/GetListOfTimeSlotsController.html":{},"modules/TriggerTimeSlotModule.html":{}}}],["getmailtemplateid",{"_index":1355,"title":{},"body":{"controllers/ExportUserDataController.html":{},"injectables/NotificationService.html":{},"controllers/UpdateUserProfileController.html":{}}}],["getmailtemplateid('data_export",{"_index":1369,"title":{},"body":{"controllers/ExportUserDataController.html":{}}}],["getmailtemplateid('user_change_email",{"_index":3029,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["getmany",{"_index":1500,"title":{},"body":{"classes/FileRepository.html":{},"classes/PositiveInfoRepository.html":{},"classes/TimeSlotRepository.html":{}}}],["getnameoremail",{"_index":1358,"title":{},"body":{"controllers/ExportUserDataController.html":{},"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["getnameoremail(contact.name",{"_index":2608,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{}}}],["getnameoremail(profile?.name",{"_index":1370,"title":{},"body":{"controllers/ExportUserDataController.html":{}}}],["getnameoremail(user.profile?.name",{"_index":2021,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getpem",{"_index":640,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getslotstoinform",{"_index":2748,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["getstatus",{"_index":1050,"title":{},"body":{"classes/CustomError.html":{}}}],["getting",{"_index":3393,"title":{"index.html":{}},"body":{}}],["gettokens",{"_index":641,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["gettokens(email",{"_index":652,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getuserattributes",{"_index":642,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getuserattributes(tokensub",{"_index":654,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getusercontroller",{"_index":1641,"title":{"controllers/GetUserController.html":{}},"body":{"controllers/GetUserController.html":{},"modules/UserModule.html":{}}}],["getuserprofile",{"_index":1644,"title":{},"body":{"controllers/GetUserController.html":{}}}],["getuserprofile(@user",{"_index":1653,"title":{},"body":{"controllers/GetUserController.html":{}}}],["getuserprofile(user",{"_index":1645,"title":{},"body":{"controllers/GetUserController.html":{}}}],["go",{"_index":3397,"title":{},"body":{"index.html":{}}}],["google",{"_index":177,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{},"dependencies.html":{}}}],["google_phone_number",{"_index":3349,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["google_phone_number_provider",{"_index":3350,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["googlelibphonenumberprovider",{"_index":959,"title":{},"body":{"modules/ContactModule.html":{},"modules/UserModule.html":{}}}],["guard",{"_index":2391,"title":{"guards/RolesGuard.html":{}},"body":{"overview.html":{}}}],["guards",{"_index":2392,"title":{},"body":{"guards/RolesGuard.html":{}}}],["handleemailprocess",{"_index":1705,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["handleemailprocess(job",{"_index":1711,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["handleemergencyprocess",{"_index":1706,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["handleemergencyprocess(job",{"_index":1714,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["handlesmsexception",{"_index":1870,"title":{},"body":{"injectables/NotificationService.html":{}}}],["handlesmsexception(error",{"_index":1884,"title":{},"body":{"injectables/NotificationService.html":{}}}],["handlesmsprocess",{"_index":1707,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["handlesmsprocess(job",{"_index":1717,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["hapi/joi",{"_index":3273,"title":{},"body":{"dependencies.html":{}}}],["hash",{"_index":1121,"title":{},"body":{"classes/Encrypter.html":{}}}],["heart_rate_invalid",{"_index":3381,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["heartrateinvalid",{"_index":3382,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hello",{"_index":632,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":3292,"title":{},"body":{"dependencies.html":{}}}],["helper/escape",{"_index":1914,"title":{},"body":{"injectables/NotificationService.html":{}}}],["helper/get",{"_index":1916,"title":{},"body":{"injectables/NotificationService.html":{}}}],["hex",{"_index":1133,"title":{},"body":{"classes/Encrypter.html":{}}}],["hh:mm",{"_index":2478,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["hh:mm').isafter(moment(fromtime",{"_index":2480,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["hh:mm').isafter(moment(nowtime",{"_index":2497,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["hh:mm').issameorafter(moment(nowtime",{"_index":2477,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["hh:mm').issameorafter(moment(rightthresholdtime",{"_index":2495,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["high",{"_index":1777,"title":{},"body":{"injectables/MessageService.html":{}}}],["host",{"_index":617,"title":{},"body":{"modules/AppModule.html":{},"classes/ExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":1169,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["hour",{"_index":2589,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["hours",{"_index":1554,"title":{},"body":{"injectables/FileService.html":{}}}],["html",{"_index":1915,"title":{},"body":{"injectables/NotificationService.html":{}}}],["httpcode",{"_index":1049,"title":{},"body":{"classes/CustomError.html":{}}}],["httpstatus",{"_index":1165,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":1174,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["icognito",{"_index":666,"title":{"interfaces/ICognito.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/ICognito.html":{}}}],["icontactdata",{"_index":1660,"title":{"interfaces/IContactData.html":{}},"body":{"interfaces/IContactData.html":{}}}],["id",{"_index":241,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"entities/ContactEntity.html":{},"classes/ContactIdRO.html":{},"classes/ContactRO.html":{},"injectables/ContactService.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"entities/FileCategoryEntity.html":{},"injectables/FileCategoryService.html":{},"entities/FileEntity.html":{},"classes/FileIdRO.html":{},"classes/FileRO.html":{},"injectables/FileService.html":{},"interfaces/IContactData.html":{},"interfaces/ITimeSlotData.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"entities/PositiveInfoEntity.html":{},"injectables/PositiveInfoService.html":{},"entities/ProfileEntity.html":{},"entities/TimeSlotDayEntity.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UnconfirmedEmailEntity.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserProfileController.html":{},"entities/UserEntity.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["id.controller",{"_index":3150,"title":{},"body":{"modules/UserModule.html":{}}}],["id.controller.ts",{"_index":2934,"title":{},"body":{"controllers/UpdateUserDeviceIdentifierController.html":{}}}],["id.controller.ts:35",{"_index":2939,"title":{},"body":{"controllers/UpdateUserDeviceIdentifierController.html":{}}}],["id.dto",{"_index":2941,"title":{},"body":{"controllers/UpdateUserDeviceIdentifierController.html":{}}}],["id.dto.ts",{"_index":2930,"title":{},"body":{"classes/UpdateUserDeviceIdDTO.html":{}}}],["id.dto.ts:5",{"_index":2931,"title":{},"body":{"classes/UpdateUserDeviceIdDTO.html":{}}}],["id.ro",{"_index":165,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/UploadFileController.html":{}}}],["id.ro.ts",{"_index":925,"title":{},"body":{"classes/ContactIdRO.html":{},"classes/FileIdRO.html":{},"classes/TimeSlotIdRO.html":{}}}],["id.ro.ts:8",{"_index":926,"title":{},"body":{"classes/ContactIdRO.html":{},"classes/FileIdRO.html":{},"classes/TimeSlotIdRO.html":{}}}],["id.schema",{"_index":2943,"title":{},"body":{"controllers/UpdateUserDeviceIdentifierController.html":{}}}],["identifier",{"_index":2937,"title":{},"body":{"controllers/UpdateUserDeviceIdentifierController.html":{}}}],["identity",{"_index":727,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/UserModule.html":{}}}],["idx_contactuserid",{"_index":256,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["idx_filecategoryid",{"_index":329,"title":{},"body":{"classes/AddFileTable1630406751456.html":{}}}],["idx_fileuserid",{"_index":330,"title":{},"body":{"classes/AddFileTable1630406751456.html":{}}}],["idx_positiveinfouserid",{"_index":391,"title":{},"body":{"classes/AddPositiveInfoTable1632807482818.html":{}}}],["idx_timeslotdaytimeslotid",{"_index":506,"title":{},"body":{"classes/AddTimeSlotDayTable1629364845785.html":{}}}],["idx_timeslotuserid",{"_index":516,"title":{},"body":{"classes/AddTimeSlotTable1629364182226.html":{}}}],["image/jpeg",{"_index":1558,"title":{},"body":{"injectables/FileService.html":{}}}],["image/jpg",{"_index":1559,"title":{},"body":{"injectables/FileService.html":{}}}],["image/png",{"_index":1560,"title":{},"body":{"injectables/FileService.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ExceptionsFilter.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"guards/RolesGuard.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["import",{"_index":48,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileDTO.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDTO.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"modules/AuthorizationModule.html":{},"classes/BasicConsumer.html":{},"controllers/CancelEmergencyMessageController.html":{},"classes/CategoryRO.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ConfirmUserEmailDTO.html":{},"entities/ContactEntity.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactIdRO.html":{},"controllers/ContactListController.html":{},"modules/ContactModule.html":{},"classes/ContactRO.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/Encrypter.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"classes/ExportUserDataDTO.html":{},"entities/FileCategoryEntity.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"entities/FileEntity.html":{},"classes/FileIdRO.html":{},"controllers/FileListController.html":{},"modules/FileModule.html":{},"classes/FileRO.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"classes/GetAccessTokenDTO.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"interfaces/ITimeSlotData.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"controllers/NotePositiveInfoController.html":{},"classes/NotePositiveInfoDTO.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"modules/QueueModule.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"guards/RolesGuard.html":{},"modules/SchedulerModule.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"classes/SendEmergencyMessageDTO.html":{},"controllers/SendSMSController.html":{},"classes/SendSmsDTO.html":{},"controllers/SendTestMessageController.html":{},"classes/SuccessRO.html":{},"entities/TimeSlotDayEntity.html":{},"classes/TimeSlotDayRepository.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TimeSlotRepository.html":{},"classes/TokenRO.html":{},"modules/TriggerTimeSlotModule.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"classes/UpdateContactDTO.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"controllers/UploadFileController.html":{},"entities/UserEntity.html":{},"classes/UserEntitySubscriber.html":{},"modules/UserModule.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["imports",{"_index":573,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationModule.html":{},"modules/ContactModule.html":{},"modules/FileModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/TriggerTimeSlotModule.html":{},"modules/UserModule.html":{}}}],["includes(file.mimetype",{"_index":1565,"title":{},"body":{"injectables/FileService.html":{}}}],["increment",{"_index":246,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileDTO.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDTO.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"classes/BasicConsumer.html":{},"controllers/CancelEmergencyMessageController.html":{},"classes/CategoryRO.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ConfirmUserEmailDTO.html":{},"entities/ContactEntity.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactIdRO.html":{},"controllers/ContactListController.html":{},"classes/ContactRO.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/Encrypter.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"classes/ExportUserDataDTO.html":{},"interfaces/File.html":{},"entities/FileCategoryEntity.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"entities/FileEntity.html":{},"classes/FileIdRO.html":{},"controllers/FileListController.html":{},"classes/FileRO.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"classes/GetAccessTokenDTO.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"interfaces/ICognito.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"interfaces/ITimeSlotData.html":{},"interfaces/IUserData.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"controllers/NotePositiveInfoController.html":{},"classes/NotePositiveInfoDTO.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"guards/RolesGuard.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"classes/SendEmergencyMessageDTO.html":{},"controllers/SendSMSController.html":{},"classes/SendSmsDTO.html":{},"controllers/SendTestMessageController.html":{},"classes/SuccessRO.html":{},"entities/TimeSlotDayEntity.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TimeSlotRepository.html":{},"classes/TokenRO.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"classes/UpdateContactDTO.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"controllers/UploadFileController.html":{},"interfaces/UploadResult.html":{},"entities/UserEntity.html":{},"classes/UserEntitySubscriber.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileDTO.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDTO.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"modules/AuthorizationModule.html":{},"classes/BasicConsumer.html":{},"controllers/CancelEmergencyMessageController.html":{},"classes/CategoryRO.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ConfirmUserEmailDTO.html":{},"entities/ContactEntity.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactIdRO.html":{},"controllers/ContactListController.html":{},"modules/ContactModule.html":{},"classes/ContactRO.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/Encrypter.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"classes/ExportUserDataDTO.html":{},"interfaces/File.html":{},"entities/FileCategoryEntity.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"entities/FileEntity.html":{},"classes/FileIdRO.html":{},"controllers/FileListController.html":{},"modules/FileModule.html":{},"classes/FileRO.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"classes/GetAccessTokenDTO.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"interfaces/ICognito.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"interfaces/ITimeSlotData.html":{},"interfaces/IUserData.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"controllers/NotePositiveInfoController.html":{},"classes/NotePositiveInfoDTO.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"modules/QueueModule.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"guards/RolesGuard.html":{},"modules/SchedulerModule.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"classes/SendEmergencyMessageDTO.html":{},"controllers/SendSMSController.html":{},"classes/SendSmsDTO.html":{},"controllers/SendTestMessageController.html":{},"classes/SuccessRO.html":{},"entities/TimeSlotDayEntity.html":{},"classes/TimeSlotDayRepository.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TimeSlotRepository.html":{},"classes/TokenRO.html":{},"modules/TriggerTimeSlotModule.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"classes/UpdateContactDTO.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"controllers/UploadFileController.html":{},"interfaces/UploadResult.html":{},"entities/UserEntity.html":{},"classes/UserEntitySubscriber.html":{},"modules/UserModule.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["info.controller",{"_index":3152,"title":{},"body":{"modules/UserModule.html":{}}}],["info.controller.ts",{"_index":1830,"title":{},"body":{"controllers/NotePositiveInfoController.html":{}}}],["info.controller.ts:44",{"_index":1837,"title":{},"body":{"controllers/NotePositiveInfoController.html":{}}}],["info.dto",{"_index":1839,"title":{},"body":{"controllers/NotePositiveInfoController.html":{},"injectables/PositiveInfoService.html":{}}}],["info.dto.ts",{"_index":1854,"title":{},"body":{"classes/NotePositiveInfoDTO.html":{}}}],["info.dto.ts:5",{"_index":1857,"title":{},"body":{"classes/NotePositiveInfoDTO.html":{}}}],["info.entity",{"_index":2156,"title":{},"body":{"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"entities/UserEntity.html":{}}}],["info.entity.ts",{"_index":2100,"title":{},"body":{"entities/PositiveInfoEntity.html":{}}}],["info.entity.ts:14",{"_index":2107,"title":{},"body":{"entities/PositiveInfoEntity.html":{}}}],["info.entity.ts:17",{"_index":2116,"title":{},"body":{"entities/PositiveInfoEntity.html":{}}}],["info.entity.ts:20",{"_index":2108,"title":{},"body":{"entities/PositiveInfoEntity.html":{}}}],["info.entity.ts:23",{"_index":2106,"title":{},"body":{"entities/PositiveInfoEntity.html":{}}}],["info.entity.ts:26",{"_index":2112,"title":{},"body":{"entities/PositiveInfoEntity.html":{}}}],["info.entity.ts:29",{"_index":2109,"title":{},"body":{"entities/PositiveInfoEntity.html":{}}}],["info.entity.ts:32",{"_index":2110,"title":{},"body":{"entities/PositiveInfoEntity.html":{}}}],["info.entity.ts:35",{"_index":2105,"title":{},"body":{"entities/PositiveInfoEntity.html":{}}}],["info.entity.ts:38",{"_index":2111,"title":{},"body":{"entities/PositiveInfoEntity.html":{}}}],["info.entity.ts:42",{"_index":2115,"title":{},"body":{"entities/PositiveInfoEntity.html":{}}}],["info.repository",{"_index":1923,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/PositiveInfoService.html":{},"injectables/SchedulerService.html":{},"injectables/UserService.html":{}}}],["info.repository.ts",{"_index":2120,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["info.repository.ts:109",{"_index":2151,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["info.repository.ts:126",{"_index":2134,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["info.repository.ts:136",{"_index":2137,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["info.repository.ts:149",{"_index":2153,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["info.repository.ts:159",{"_index":2146,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["info.repository.ts:34",{"_index":2142,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["info.repository.ts:59",{"_index":2144,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["info.repository.ts:7",{"_index":2132,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["info.repository.ts:85",{"_index":2139,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["info.repository.ts:9",{"_index":2140,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["info.repository.ts:95",{"_index":2149,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["info.schema",{"_index":1842,"title":{},"body":{"controllers/NotePositiveInfoController.html":{}}}],["info.service",{"_index":1695,"title":{},"body":{"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/UpdateUserProfileController.html":{},"modules/UserModule.html":{}}}],["info.service.ts",{"_index":2191,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["info.service.ts:15",{"_index":2194,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["info.service.ts:23",{"_index":2196,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["info.service.ts:27",{"_index":2198,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["informaboutpause",{"_index":2749,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["informaboutpause(deviceid",{"_index":2766,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["informabouttimeslots",{"_index":2421,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["information",{"_index":1845,"title":{},"body":{"controllers/NotePositiveInfoController.html":{},"injectables/SchedulerService.html":{}}}],["information'})@roles(['undefined'])@post('/positive",{"_index":1836,"title":{},"body":{"controllers/NotePositiveInfoController.html":{}}}],["information.minutestonext",{"_index":2547,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["information.userid",{"_index":2543,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["informed",{"_index":2614,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{}}}],["inherited",{"_index":101,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"classes/MessageConsumer.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UserRO.html":{}}}],["inject",{"_index":144,"title":{},"body":{"controllers/AddContactController.html":{},"injectables/AuthenticationService.html":{},"injectables/ContactService.html":{},"injectables/ExportService.html":{},"injectables/FileCategoryService.html":{},"injectables/FileService.html":{},"classes/MessageConsumer.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"injectables/NotificationService.html":{},"injectables/PositiveInfoService.html":{},"injectables/ProfileService.html":{},"injectables/SchedulerService.html":{},"controllers/SendSMSController.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserProfileController.html":{},"injectables/UserService.html":{}}}],["inject(aws.cognitoidentityserviceprovider",{"_index":668,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UnconfirmedEmailService.html":{},"injectables/UserService.html":{}}}],["inject(common_di.config",{"_index":1548,"title":{},"body":{"injectables/FileService.html":{}}}],["inject(contactrepository",{"_index":1030,"title":{},"body":{"injectables/ContactService.html":{},"injectables/ExportService.html":{}}}],["inject(dictionary.cloud_front_signer",{"_index":1547,"title":{},"body":{"injectables/FileService.html":{}}}],["inject(dictionary.config",{"_index":669,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{},"controllers/SendSMSController.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateUserProfileController.html":{},"injectables/UserService.html":{}}}],["inject(dictionary.connection",{"_index":2781,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["inject(dictionary.firebase",{"_index":1761,"title":{},"body":{"injectables/MessageService.html":{}}}],["inject(dictionary.google_phone_number",{"_index":195,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["inject(dictionary.s3",{"_index":1546,"title":{},"body":{"injectables/FileService.html":{}}}],["inject(filerepository",{"_index":1252,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/NotificationService.html":{}}}],["inject(notification_di.mail_jet",{"_index":1924,"title":{},"body":{"injectables/NotificationService.html":{}}}],["inject(positiveinforepository",{"_index":1926,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/PositiveInfoService.html":{},"injectables/SchedulerService.html":{}}}],["inject(profilerepository",{"_index":1249,"title":{},"body":{"injectables/ExportService.html":{},"injectables/ProfileService.html":{}}}],["inject(queue.message",{"_index":1809,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["inject(timeslotrepository",{"_index":1250,"title":{},"body":{"injectables/ExportService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["inject(twiliolibrary.twilio",{"_index":1925,"title":{},"body":{"injectables/NotificationService.html":{}}}],["inject(unconfirmedemailrepository",{"_index":1251,"title":{},"body":{"injectables/ExportService.html":{},"injectables/UnconfirmedEmailService.html":{}}}],["inject(userrepository",{"_index":1248,"title":{},"body":{"injectables/ExportService.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":626,"title":{"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"injectables/CognitoStrategy.html":{},"injectables/ContactService.html":{},"injectables/ExportService.html":{},"injectables/FileCategoryService.html":{},"injectables/FileService.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"injectables/PositiveInfoService.html":{},"injectables/ProfileService.html":{},"injectables/SchedulerService.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"injectables/CognitoStrategy.html":{},"injectables/ContactService.html":{},"injectables/ExportService.html":{},"injectables/FileCategoryService.html":{},"injectables/FileService.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"injectables/PositiveInfoService.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SchedulerService.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["injectables",{"_index":628,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"injectables/CognitoStrategy.html":{},"injectables/ContactService.html":{},"injectables/ExportService.html":{},"injectables/FileCategoryService.html":{},"injectables/FileService.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"injectables/PositiveInfoService.html":{},"injectables/ProfileService.html":{},"injectables/SchedulerService.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"overview.html":{}}}],["innerjoin",{"_index":1496,"title":{},"body":{"classes/FileRepository.html":{}}}],["innerjoin('ts.days",{"_index":2722,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["insert",{"_index":296,"title":{},"body":{"classes/AddFileCategoryTableWithValues1630406730426.html":{}}}],["insertevent",{"_index":908,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["instanceof",{"_index":1187,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["int",{"_index":242,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"entities/ContactEntity.html":{},"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"entities/TimeSlotDayEntity.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{}}}],["interface",{"_index":1378,"title":{"interfaces/File.html":{},"interfaces/ICognito.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"interfaces/ITimeSlotData.html":{},"interfaces/IUserData.html":{},"interfaces/UploadResult.html":{}},"body":{"interfaces/File.html":{},"interfaces/ICognito.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"interfaces/ITimeSlotData.html":{},"interfaces/IUserData.html":{},"interfaces/UploadResult.html":{}}}],["interface/cognito.interface",{"_index":667,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["interfaces",{"_index":1379,"title":{},"body":{"interfaces/File.html":{},"interfaces/ICognito.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"interfaces/ITimeSlotData.html":{},"interfaces/IUserData.html":{},"interfaces/UploadResult.html":{},"overview.html":{}}}],["interval",{"_index":2162,"title":{},"body":{"classes/PositiveInfoRepository.html":{},"classes/ProfileRepository.html":{},"classes/TimeSlotRepository.html":{}}}],["ioredis",{"_index":3294,"title":{},"body":{"dependencies.html":{}}}],["iprofiledata",{"_index":1663,"title":{"interfaces/IProfileData.html":{}},"body":{"interfaces/IProfileData.html":{}}}],["isactivetimeslot",{"_index":2750,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["isactivetimeslot(userid",{"_index":2768,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["isarray",{"_index":304,"title":{},"body":{"classes/AddFileDTO.html":{},"classes/AddTimeSlotDTO.html":{},"classes/CategoryRO.html":{},"controllers/ContactListController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"classes/TimeSlotRO.html":{},"classes/UpdateTimeSlotDTO.html":{}}}],["isdefined",{"_index":3004,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["isdefined(data.automatedemergency",{"_index":3017,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["isdefined(data.positiveinfoperiod",{"_index":3012,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["isdefined(data.regularpushnotification",{"_index":3009,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["isemergencytriggeractive",{"_index":3157,"title":{},"body":{"classes/UserRO.html":{}}}],["isfromqueue",{"_index":1733,"title":{},"body":{"classes/MessageConsumer.html":{},"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{}}}],["isgenerated",{"_index":243,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["isnullable",{"_index":31,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["ispositiveinfoquestion",{"_index":1928,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{}}}],["isprimary",{"_index":244,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{}}}],["item",{"_index":2552,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["item.day",{"_index":1290,"title":{},"body":{"injectables/ExportService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["item.user",{"_index":2581,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["item.user.contacts",{"_index":2576,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["item.user.id",{"_index":2561,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["item.user.profile.prefix}${item.user.profile.phone",{"_index":2557,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["item.userid",{"_index":2555,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["item?.user?.profile?.location",{"_index":2583,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["itimeslotdata",{"_index":1679,"title":{"interfaces/ITimeSlotData.html":{}},"body":{"interfaces/ITimeSlotData.html":{}}}],["iuserdata",{"_index":1685,"title":{"interfaces/IUserData.html":{}},"body":{"interfaces/IUserData.html":{}}}],["iv",{"_index":1119,"title":{},"body":{"classes/Encrypter.html":{}}}],["jet.provider",{"_index":1866,"title":{},"body":{"modules/NotificationModule.html":{}}}],["job",{"_index":745,"title":{},"body":{"classes/BasicConsumer.html":{},"classes/MessageConsumer.html":{}}}],["job.data",{"_index":1732,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["job.data.email",{"_index":1737,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["job.data.sms",{"_index":1736,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["job.id",{"_index":759,"title":{},"body":{"classes/BasicConsumer.html":{}}}],["job.id.tostring().split('_",{"_index":1735,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["job.name",{"_index":760,"title":{},"body":{"classes/BasicConsumer.html":{}}}],["job_remove_failed",{"_index":1806,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["jobid",{"_index":1796,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["jobname",{"_index":1798,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["joi",{"_index":1058,"title":{},"body":{"classes/CustomError.html":{},"injectables/NumericIdValidationPipe.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["joi.number().integer().positive().required",{"_index":2059,"title":{},"body":{"injectables/NumericIdValidationPipe.html":{}}}],["joi.schema",{"_index":2054,"title":{},"body":{"injectables/NumericIdValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["join",{"_index":1291,"title":{},"body":{"injectables/ExportService.html":{}}}],["joincolumn",{"_index":892,"title":{},"body":{"entities/ContactEntity.html":{},"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"entities/TimeSlotDayEntity.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{}}}],["joincolumn({name",{"_index":883,"title":{},"body":{"entities/ContactEntity.html":{},"entities/FileEntity.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"entities/TimeSlotDayEntity.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{}}}],["json",{"_index":1191,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["json.stringify",{"_index":1781,"title":{},"body":{"injectables/MessageService.html":{}}}],["json.stringify(exception.error",{"_index":1188,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["json.stringify(payload",{"_index":1783,"title":{},"body":{"injectables/MessageService.html":{}}}],["json.stringify(result",{"_index":1953,"title":{},"body":{"injectables/NotificationService.html":{}}}],["json.stringify(user",{"_index":3252,"title":{},"body":{"injectables/UserService.html":{}}}],["jsonwebtoken",{"_index":665,"title":{},"body":{"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["jwk",{"_index":663,"title":{},"body":{"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["jwks",{"_index":672,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["jwktopem",{"_index":662,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["jwt",{"_index":664,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CognitoStrategy.html":{},"classes/PassportStrategy.html":{},"dependencies.html":{}}}],["jwt.verify(token",{"_index":683,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["jwtfromrequest",{"_index":809,"title":{},"body":{"injectables/CognitoStrategy.html":{},"classes/PassportStrategy.html":{}}}],["jwtfromrequestfunction",{"_index":2072,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["key",{"_index":326,"title":{},"body":{"classes/AddFileTable1630406751456.html":{},"injectables/ExportService.html":{},"entities/FileEntity.html":{},"injectables/FileService.html":{},"injectables/NotificationService.html":{},"injectables/TriggerTimeSlotService.html":{},"interfaces/UploadResult.html":{}}}],["keys",{"_index":310,"title":{},"body":{"classes/AddFileDTO.html":{},"classes/AddTimeSlotDTO.html":{},"classes/ExceptionsFilter.html":{}}}],["language",{"_index":3325,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["last_hospital_visit",{"_index":375,"title":{},"body":{"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"entities/ProfileEntity.html":{}}}],["last_will",{"_index":3337,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lasthospitalvisit",{"_index":1670,"title":{},"body":{"interfaces/IProfileData.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{},"miscellaneous/enumerations.html":{}}}],["lastwill",{"_index":338,"title":{},"body":{"classes/AddLimitToFileCategoryTable1634809042779.html":{},"miscellaneous/enumerations.html":{}}}],["leftjoin('user.positiveinfo",{"_index":2335,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["leftjoinandselect('positiveinfo.user",{"_index":2159,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["leftjoinandselect('profile.user",{"_index":2334,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["leftjoinandselect('ts.user",{"_index":2705,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["leftjoinandselect('user.contacts",{"_index":2175,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["leftjoinandselect('user.profile",{"_index":2160,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["leftthreshold",{"_index":2710,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["leftthresholdtime",{"_index":2470,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["length",{"_index":29,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"entities/ContactEntity.html":{},"entities/FileEntity.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{},"entities/UserEntity.html":{}}}],["libphonenumber",{"_index":176,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{},"dependencies.html":{}}}],["libphonenumber.phonenumberutil",{"_index":197,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["license",{"_index":3418,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":337,"title":{},"body":{"classes/AddLimitToFileCategoryTable1634809042779.html":{},"modules/AppModule.html":{},"entities/FileCategoryEntity.html":{}}}],["limit_of_number_of_files_reached",{"_index":3087,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["list",{"_index":938,"title":{},"body":{"controllers/ContactListController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"modules/TriggerTimeSlotModule.html":{}}}],["list'})@roles(['undefined'])@get",{"_index":934,"title":{},"body":{"controllers/ContactListController.html":{},"controllers/FileListController.html":{}}}],["list.controller",{"_index":956,"title":{},"body":{"modules/ContactModule.html":{},"modules/FileModule.html":{}}}],["list.controller.ts",{"_index":929,"title":{},"body":{"controllers/ContactListController.html":{},"controllers/FileListController.html":{}}}],["list.controller.ts:32",{"_index":935,"title":{},"body":{"controllers/ContactListController.html":{}}}],["list.controller.ts:37",{"_index":1449,"title":{},"body":{"controllers/FileListController.html":{}}}],["listento",{"_index":903,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["literal",{"_index":1681,"title":{},"body":{"interfaces/ITimeSlotData.html":{},"injectables/NotificationService.html":{},"classes/PassportStrategy.html":{},"injectables/ValidationPipe.html":{}}}],["load",{"_index":624,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationModule.html":{},"modules/ContactModule.html":{},"modules/FileModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/UserModule.html":{}}}],["location",{"_index":355,"title":{},"body":{"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"interfaces/IProfileData.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{}}}],["location_access",{"_index":280,"title":{},"body":{"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"entities/ProfileEntity.html":{}}}],["location_data_is_needed",{"_index":2647,"title":{},"body":{"controllers/SendTestMessageController.html":{}}}],["locationaccess",{"_index":1671,"title":{},"body":{"interfaces/IProfileData.html":{},"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{}}}],["locationurl",{"_index":2013,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendTestMessageController.html":{}}}],["logged",{"_index":2940,"title":{},"body":{"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["logged.email",{"_index":3020,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["logged.id",{"_index":2947,"title":{},"body":{"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["logger",{"_index":637,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/BasicConsumer.html":{},"injectables/CognitoStrategy.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"classes/FileCategoryRepository.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"classes/MessageConsumer.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"injectables/NotificationService.html":{},"classes/PassportStrategy.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["logger(authenticationservice.name",{"_index":657,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logger(cognitostrategy.name",{"_index":812,"title":{},"body":{"injectables/CognitoStrategy.html":{}}}],["logger(contactrepository.name",{"_index":977,"title":{},"body":{"classes/ContactRepository.html":{}}}],["logger(contactservice.name",{"_index":1020,"title":{},"body":{"injectables/ContactService.html":{}}}],["logger(exceptionsfilter.name",{"_index":1159,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["logger(exportservice.name",{"_index":1226,"title":{},"body":{"injectables/ExportService.html":{}}}],["logger(filecategoryrepository.name",{"_index":1400,"title":{},"body":{"classes/FileCategoryRepository.html":{}}}],["logger(filerepository.name",{"_index":1486,"title":{},"body":{"classes/FileRepository.html":{}}}],["logger(fileservice.name",{"_index":1530,"title":{},"body":{"injectables/FileService.html":{}}}],["logger(messageconsumer.name",{"_index":1731,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["logger(messageservice.name",{"_index":1760,"title":{},"body":{"injectables/MessageService.html":{},"injectables/MessageService-1.html":{}}}],["logger(notificationservice.name",{"_index":1904,"title":{},"body":{"injectables/NotificationService.html":{}}}],["logger(passportstrategy.name",{"_index":2074,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["logger(positiveinforepository.name",{"_index":2131,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["logger(positiveinfoservice.name",{"_index":2199,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["logger(profilerepository.name",{"_index":2322,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["logger(profileservice.name",{"_index":2356,"title":{},"body":{"injectables/ProfileService.html":{}}}],["logger(schedulerservice.name",{"_index":2443,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["logger(timeslotrepository.name",{"_index":2694,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["logger(triggertimeslotservice.name",{"_index":2774,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["logger(unconfirmedemailservice.name",{"_index":2863,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["logger(userrepository.name",{"_index":3203,"title":{},"body":{"classes/UserRepository.html":{}}}],["logger(userservice.name",{"_index":3233,"title":{},"body":{"injectables/UserService.html":{}}}],["logger.error(`${error?.errormessage",{"_index":2009,"title":{},"body":{"injectables/NotificationService.html":{}}}],["logger.error(`push",{"_index":1782,"title":{},"body":{"injectables/MessageService.html":{}}}],["logger.error(error?.message",{"_index":695,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logger.log(`pause",{"_index":2801,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["logger.log(`processed",{"_index":2611,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{}}}],["logger.log(`push",{"_index":1779,"title":{},"body":{"injectables/MessageService.html":{}}}],["logger.log(`saving",{"_index":2795,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["logout",{"_index":1688,"title":{},"body":{"controllers/LogoutController.html":{}}}],["logout(@user",{"_index":1699,"title":{},"body":{"controllers/LogoutController.html":{}}}],["logout(user",{"_index":1689,"title":{},"body":{"controllers/LogoutController.html":{}}}],["logoutcontroller",{"_index":719,"title":{"controllers/LogoutController.html":{}},"body":{"modules/AuthorizationModule.html":{},"controllers/LogoutController.html":{}}}],["longtext",{"_index":250,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"entities/ProfileEntity.html":{},"entities/UnconfirmedEmailEntity.html":{},"entities/UserEntity.html":{}}}],["mail",{"_index":2010,"title":{},"body":{"injectables/NotificationService.html":{}}}],["mail_jet",{"_index":3360,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mailjet",{"_index":1804,"title":{},"body":{"injectables/MessageService-1.html":{},"injectables/NotificationService.html":{},"dependencies.html":{}}}],["mailjetprovider",{"_index":1864,"title":{},"body":{"modules/NotificationModule.html":{}}}],["main",{"_index":3398,"title":{},"body":{"index.html":{}}}],["manually",{"_index":2612,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{}}}],["manytoone",{"_index":893,"title":{},"body":{"entities/ContactEntity.html":{},"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"entities/TimeSlotDayEntity.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{}}}],["map((day",{"_index":2819,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["map((item",{"_index":1288,"title":{},"body":{"injectables/ExportService.html":{}}}],["map((value",{"_index":2815,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["mapper/files.mapper",{"_index":1454,"title":{},"body":{"controllers/FileListController.html":{}}}],["mapper/profile.mapper",{"_index":3002,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["mapper/time",{"_index":1635,"title":{},"body":{"controllers/GetListOfTimeSlotsController.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["mapper/user.mapper",{"_index":1652,"title":{},"body":{"controllers/GetUserController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["matching",{"_index":56,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileDTO.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDTO.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"modules/AuthorizationModule.html":{},"classes/BasicConsumer.html":{},"controllers/CancelEmergencyMessageController.html":{},"classes/CategoryRO.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ConfirmUserEmailDTO.html":{},"entities/ContactEntity.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactIdRO.html":{},"controllers/ContactListController.html":{},"modules/ContactModule.html":{},"classes/ContactRO.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/Encrypter.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"classes/ExportUserDataDTO.html":{},"interfaces/File.html":{},"entities/FileCategoryEntity.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"entities/FileEntity.html":{},"classes/FileIdRO.html":{},"controllers/FileListController.html":{},"modules/FileModule.html":{},"classes/FileRO.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"classes/GetAccessTokenDTO.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"interfaces/ICognito.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"interfaces/ITimeSlotData.html":{},"interfaces/IUserData.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"controllers/NotePositiveInfoController.html":{},"classes/NotePositiveInfoDTO.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"modules/QueueModule.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"guards/RolesGuard.html":{},"modules/SchedulerModule.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"classes/SendEmergencyMessageDTO.html":{},"controllers/SendSMSController.html":{},"classes/SendSmsDTO.html":{},"controllers/SendTestMessageController.html":{},"classes/SuccessRO.html":{},"entities/TimeSlotDayEntity.html":{},"classes/TimeSlotDayRepository.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TimeSlotRepository.html":{},"classes/TokenRO.html":{},"modules/TriggerTimeSlotModule.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"classes/UpdateContactDTO.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"controllers/UploadFileController.html":{},"interfaces/UploadResult.html":{},"entities/UserEntity.html":{},"classes/UserEntitySubscriber.html":{},"modules/UserModule.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["maxlength",{"_index":95,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"classes/AddContactDTO.html":{},"classes/ConfirmUserEmailDTO.html":{},"classes/ExportUserDataDTO.html":{},"classes/NotePositiveInfoDTO.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateContactDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{}}}],["medical_directive",{"_index":3336,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["medicaldirective",{"_index":336,"title":{},"body":{"classes/AddLimitToFileCategoryTable1634809042779.html":{},"miscellaneous/enumerations.html":{}}}],["medicaldirective'),('lastwill'),('other",{"_index":298,"title":{},"body":{"classes/AddFileCategoryTableWithValues1630406730426.html":{}}}],["mediumint",{"_index":1437,"title":{},"body":{"entities/FileEntity.html":{}}}],["message",{"_index":767,"title":{},"body":{"controllers/CancelEmergencyMessageController.html":{},"classes/CustomError.html":{},"classes/ExceptionsFilter.html":{},"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"injectables/TriggerTimeSlotService.html":{},"miscellaneous/enumerations.html":{}}}],["message'})@roles(['undefined'])@delete('cancel/emergency",{"_index":772,"title":{},"body":{"controllers/CancelEmergencyMessageController.html":{}}}],["message'})@roles(['undefined'])@post('message/test",{"_index":2645,"title":{},"body":{"controllers/SendTestMessageController.html":{}}}],["message'})@roles(['undefined'])@post('send/emergency",{"_index":2596,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{}}}],["message'})@roles(['undefined'])@post('send/sms",{"_index":2626,"title":{},"body":{"controllers/SendSMSController.html":{}}}],["message.controller",{"_index":1747,"title":{},"body":{"modules/MessageModule.html":{},"modules/UserModule.html":{}}}],["message.controller.ts",{"_index":766,"title":{},"body":{"controllers/CancelEmergencyMessageController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendTestMessageController.html":{}}}],["message.controller.ts:37",{"_index":773,"title":{},"body":{"controllers/CancelEmergencyMessageController.html":{}}}],["message.controller.ts:44",{"_index":2646,"title":{},"body":{"controllers/SendTestMessageController.html":{}}}],["message.controller.ts:48",{"_index":2597,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{}}}],["message.dto",{"_index":1919,"title":{},"body":{"injectables/NotificationService.html":{},"controllers/SendEmergencyMessageController.html":{}}}],["message.dto.ts",{"_index":2616,"title":{},"body":{"classes/SendEmergencyMessageDTO.html":{}}}],["message.dto.ts:13",{"_index":2619,"title":{},"body":{"classes/SendEmergencyMessageDTO.html":{}}}],["message.dto.ts:6",{"_index":2618,"title":{},"body":{"classes/SendEmergencyMessageDTO.html":{}}}],["message.schema",{"_index":2601,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{}}}],["message/constant/message",{"_index":2448,"title":{},"body":{"injectables/SchedulerService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["message/message.module",{"_index":585,"title":{},"body":{"modules/AppModule.html":{},"modules/SchedulerModule.html":{},"modules/TriggerTimeSlotModule.html":{}}}],["message/request/dto/send",{"_index":1918,"title":{},"body":{"injectables/NotificationService.html":{}}}],["message/service/mesage.service",{"_index":2445,"title":{},"body":{"injectables/SchedulerService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["message_type",{"_index":2447,"title":{},"body":{"injectables/SchedulerService.html":{},"classes/SendEmergencyMessageDTO.html":{},"classes/SendSmsDTO.html":{},"injectables/TriggerTimeSlotService.html":{},"miscellaneous/enumerations.html":{}}}],["message_type.emergency_alert",{"_index":2568,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["message_type.emergency_pulse_based_check",{"_index":2548,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["message_type.emergency_time_based_check",{"_index":2526,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["message_type.heart_rate_invalid",{"_index":2622,"title":{},"body":{"classes/SendEmergencyMessageDTO.html":{},"classes/SendSmsDTO.html":{}}}],["message_type.time_slot_notification",{"_index":2492,"title":{},"body":{"injectables/SchedulerService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["messageconsumer",{"_index":1703,"title":{"classes/MessageConsumer.html":{}},"body":{"classes/MessageConsumer.html":{},"modules/QueueModule.html":{}}}],["messageinstance",{"_index":1920,"title":{},"body":{"injectables/NotificationService.html":{}}}],["messagelistinstancecreateoptions",{"_index":1794,"title":{},"body":{"injectables/MessageService-1.html":{},"injectables/NotificationService.html":{}}}],["messagemodule",{"_index":563,"title":{"modules/MessageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MessageModule.html":{},"modules/SchedulerModule.html":{},"modules/TriggerTimeSlotModule.html":{},"modules.html":{},"overview.html":{}}}],["messagequeue",{"_index":1791,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["messages",{"_index":1966,"title":{},"body":{"injectables/NotificationService.html":{}}}],["messageservice",{"_index":775,"title":{"injectables/MessageService.html":{},"injectables/MessageService-1.html":{}},"body":{"controllers/CancelEmergencyMessageController.html":{},"controllers/GetUserController.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"injectables/NotificationService.html":{},"modules/QueueModule.html":{},"injectables/SchedulerService.html":{},"injectables/TriggerTimeSlotService.html":{},"overview.html":{}}}],["messagetype",{"_index":2617,"title":{},"body":{"classes/SendEmergencyMessageDTO.html":{},"classes/SendSmsDTO.html":{}}}],["messaging",{"_index":1774,"title":{},"body":{"injectables/MessageService.html":{}}}],["metadata",{"_index":2051,"title":{},"body":{"injectables/NumericIdValidationPipe.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["method",{"_index":1150,"title":{},"body":{"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{}}}],["methods",{"_index":15,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"controllers/AddContactController.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"classes/BasicConsumer.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ContactEntitySubscriber.html":{},"controllers/ContactListController.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/Encrypter.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"controllers/FileListController.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"guards/RolesGuard.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"classes/UserEntitySubscriber.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["migrationinterface",{"_index":9,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["migrations",{"_index":606,"title":{},"body":{"modules/AppModule.html":{}}}],["migrationsrun",{"_index":603,"title":{},"body":{"modules/AppModule.html":{}}}],["mime_type",{"_index":327,"title":{},"body":{"classes/AddFileTable1630406751456.html":{},"entities/FileEntity.html":{}}}],["mimetype",{"_index":1382,"title":{},"body":{"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileRO.html":{},"injectables/FileService.html":{}}}],["minute",{"_index":2163,"title":{},"body":{"classes/PositiveInfoRepository.html":{},"classes/ProfileRepository.html":{},"classes/TimeSlotRepository.html":{}}}],["minutes_to_next",{"_index":388,"title":{},"body":{"classes/AddPositiveInfoTable1632807482818.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{}}}],["minutes_to_next_message_are_required",{"_index":1844,"title":{},"body":{"controllers/NotePositiveInfoController.html":{}}}],["minutesasnullableinpositiveinfotable.ts",{"_index":1818,"title":{},"body":{"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{}}}],["minutesasnullableinpositiveinfotable.ts:15",{"_index":1822,"title":{},"body":{"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{}}}],["minutesasnullableinpositiveinfotable.ts:6",{"_index":1821,"title":{},"body":{"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{}}}],["minutesasnullableinpositiveinfotable.ts:7",{"_index":1820,"title":{},"body":{"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{}}}],["minutesasnullableinpositiveinfotable.ts:9",{"_index":1823,"title":{},"body":{"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{}}}],["minutesasnullableinpositiveinfotable1633500446819",{"_index":1816,"title":{"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{}},"body":{"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{}}}],["minutestonext",{"_index":1855,"title":{},"body":{"classes/NotePositiveInfoDTO.html":{},"entities/PositiveInfoEntity.html":{},"controllers/UpdateUserProfileController.html":{}}}],["miscellaneous",{"_index":3317,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["missing_authentication_token",{"_index":2081,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["mock",{"_index":3295,"title":{},"body":{"dependencies.html":{}}}],["modify",{"_index":1825,"title":{},"body":{"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{}}}],["modifytimeaccordingtimezone",{"_index":2451,"title":{},"body":{"injectables/SchedulerService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["modifytimeaccordingtimezone(new",{"_index":2588,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["modifytimeaccordingtimezone(slot.ts_from",{"_index":2482,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["modifytimeaccordingtimezone(slot.ts_to",{"_index":2485,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["modifytimeaccordingtimezone(to",{"_index":2824,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["module",{"_index":554,"title":{"modules/AppModule.html":{},"modules/AuthorizationModule.html":{},"modules/ContactModule.html":{},"modules/FileModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/TriggerTimeSlotModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationModule.html":{},"modules/ContactModule.html":{},"modules/FileModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/TriggerTimeSlotModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":556,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationModule.html":{},"modules/ContactModule.html":{},"modules/FileModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/TriggerTimeSlotModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1229,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{},"classes/ProfileRO.html":{},"injectables/SchedulerService.html":{},"injectables/TriggerTimeSlotService.html":{},"dependencies.html":{}}}],["moment(contact.createdat).toisostring",{"_index":1279,"title":{},"body":{"injectables/ExportService.html":{}}}],["moment(contact.updatedat).toisostring",{"_index":1278,"title":{},"body":{"injectables/ExportService.html":{}}}],["moment(file.createdat).toisostring",{"_index":1309,"title":{},"body":{"injectables/ExportService.html":{}}}],["moment(leftthresholdtime",{"_index":2476,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["moment(nowtime",{"_index":2479,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["moment(profile.createdat).toisostring",{"_index":1269,"title":{},"body":{"injectables/ExportService.html":{}}}],["moment(profile.updatedat).toisostring",{"_index":1268,"title":{},"body":{"injectables/ExportService.html":{}}}],["moment(slot.leftthreshold).format('hh:mm",{"_index":2471,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["moment(slot.now).format('hh:mm",{"_index":2465,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["moment(slot.now).issameorafter(slot.rightthreshold",{"_index":2499,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["moment(slot.rightthreshold).format('hh:mm",{"_index":2473,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["moment(slot.ts_from).format('hh:mm",{"_index":2467,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["moment(slot.ts_to).format('hh:mm",{"_index":2469,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["moment(slot.ts_to).isafter(slot.now",{"_index":2500,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["moment(timeslot.createdat).toisostring",{"_index":1292,"title":{},"body":{"injectables/ExportService.html":{}}}],["moment(timeslot.from).toisostring",{"_index":1286,"title":{},"body":{"injectables/ExportService.html":{}}}],["moment(totime",{"_index":2496,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["moment(unconfirmedemail.createdat).toisostring",{"_index":1299,"title":{},"body":{"injectables/ExportService.html":{}}}],["moment(user.createdat).toisostring",{"_index":1261,"title":{},"body":{"injectables/ExportService.html":{}}}],["moment(user.updatedat).toisostring",{"_index":1260,"title":{},"body":{"injectables/ExportService.html":{}}}],["moment(value).format(\"dd/mm/yyyy",{"_index":2317,"title":{},"body":{"classes/ProfileRO.html":{}}}],["monday",{"_index":3338,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["most_recent_diagnosis",{"_index":374,"title":{},"body":{"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"entities/ProfileEntity.html":{}}}],["mostrecentdiagnosis",{"_index":1672,"title":{},"body":{"interfaces/IProfileData.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{},"miscellaneous/enumerations.html":{}}}],["mysql",{"_index":3301,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"injectables/AuthenticationService.html":{},"classes/BasicConsumer.html":{},"controllers/CancelEmergencyMessageController.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"entities/ContactEntity.html":{},"classes/ContactEntitySubscriber.html":{},"controllers/ContactListController.html":{},"classes/ContactRO.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/Encrypter.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"entities/FileCategoryEntity.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"entities/FileEntity.html":{},"controllers/FileListController.html":{},"classes/FileRO.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"modules/QueueModule.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"guards/RolesGuard.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"entities/TimeSlotDayEntity.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotRepository.html":{},"classes/TokenRO.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"classes/UpdateContactDTO.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"controllers/UploadFileController.html":{},"entities/UserEntity.html":{},"classes/UserEntitySubscriber.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["namesofdays",{"_index":2806,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["namesofdays.includes(value",{"_index":2818,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["nest",{"_index":2412,"title":{},"body":{"modules/SchedulerModule.html":{},"injectables/SchedulerService.html":{},"dependencies.html":{}}}],["nestjs/bull",{"_index":587,"title":{},"body":{"modules/AppModule.html":{},"classes/BasicConsumer.html":{},"classes/MessageConsumer.html":{},"modules/QueueModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":146,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"modules/AuthorizationModule.html":{},"classes/BasicConsumer.html":{},"controllers/CancelEmergencyMessageController.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"modules/ContactModule.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"controllers/FileListController.html":{},"modules/FileModule.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"controllers/NotePositiveInfoController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"modules/QueueModule.html":{},"guards/RolesGuard.html":{},"modules/SchedulerModule.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"classes/TimeSlotRepository.html":{},"modules/TriggerTimeSlotModule.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":597,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"modules/AuthorizationModule.html":{},"modules/ContactModule.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"injectables/SchedulerService.html":{},"controllers/SendSMSController.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateUserProfileController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":156,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/NotePositiveInfoController.html":{},"guards/RolesGuard.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":173,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"modules/AuthorizationModule.html":{},"controllers/CancelEmergencyMessageController.html":{},"injectables/CognitoStrategy.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":3081,"title":{},"body":{"controllers/UploadFileController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":116,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"classes/AddContactDTO.html":{},"classes/AddFileDTO.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDTO.html":{},"controllers/CancelEmergencyMessageController.html":{},"classes/CategoryRO.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ConfirmUserEmailDTO.html":{},"classes/ContactIdRO.html":{},"controllers/ContactListController.html":{},"classes/ContactRO.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"controllers/ExportUserDataController.html":{},"classes/ExportUserDataDTO.html":{},"classes/FileIdRO.html":{},"controllers/FileListController.html":{},"classes/FileRO.html":{},"controllers/GetAccessTokenController.html":{},"classes/GetAccessTokenDTO.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"classes/NotePositiveInfoDTO.html":{},"classes/ProfileRO.html":{},"controllers/SendEmergencyMessageController.html":{},"classes/SendEmergencyMessageDTO.html":{},"controllers/SendSMSController.html":{},"classes/SendSmsDTO.html":{},"controllers/SendTestMessageController.html":{},"classes/SuccessRO.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TokenRO.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"classes/UpdateContactDTO.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"controllers/UploadFileController.html":{},"classes/UserRO.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":581,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":576,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestschedule",{"_index":2418,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["new",{"_index":24,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"controllers/AddContactController.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"injectables/AuthenticationService.html":{},"injectables/CognitoStrategy.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["newcolumns",{"_index":13,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{}}}],["no_connection_to_watch",{"_index":3379,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["noconnectiontowatch",{"_index":3380,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["node",{"_index":1803,"title":{},"body":{"injectables/MessageService-1.html":{},"injectables/NotificationService.html":{},"dependencies.html":{}}}],["normal",{"_index":2502,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["note",{"_index":1835,"title":{},"body":{"controllers/NotePositiveInfoController.html":{}}}],["notepositiveinfo",{"_index":1831,"title":{},"body":{"controllers/NotePositiveInfoController.html":{}}}],["notepositiveinfo(user",{"_index":1832,"title":{},"body":{"controllers/NotePositiveInfoController.html":{}}}],["notepositiveinfocontroller",{"_index":1827,"title":{"controllers/NotePositiveInfoController.html":{}},"body":{"controllers/NotePositiveInfoController.html":{},"modules/UserModule.html":{}}}],["notepositiveinfodto",{"_index":1833,"title":{"classes/NotePositiveInfoDTO.html":{}},"body":{"controllers/NotePositiveInfoController.html":{},"classes/NotePositiveInfoDTO.html":{},"injectables/PositiveInfoService.html":{}}}],["notepositiveinfoschema",{"_index":1840,"title":{},"body":{"controllers/NotePositiveInfoController.html":{}}}],["noticed",{"_index":2214,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["notification",{"_index":1765,"title":{},"body":{"injectables/MessageService.html":{},"injectables/SchedulerService.html":{}}}],["notification/helper/get",{"_index":1356,"title":{},"body":{"controllers/ExportUserDataController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["notification/notification.module",{"_index":584,"title":{},"body":{"modules/AppModule.html":{},"modules/MessageModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/UserModule.html":{}}}],["notification/service/notification.service",{"_index":1354,"title":{},"body":{"controllers/ExportUserDataController.html":{},"classes/MessageConsumer.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["notification_di",{"_index":1911,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notificationmodule",{"_index":564,"title":{"modules/NotificationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationservice",{"_index":1353,"title":{"injectables/NotificationService.html":{}},"body":{"controllers/ExportUserDataController.html":{},"classes/MessageConsumer.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateUserProfileController.html":{},"overview.html":{}}}],["now",{"_index":2182,"title":{},"body":{"classes/PositiveInfoRepository.html":{},"classes/ProfileRepository.html":{},"classes/TimeSlotRepository.html":{}}}],["now1",{"_index":2716,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["now2",{"_index":2721,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["nowtime",{"_index":2464,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["null",{"_index":363,"title":{},"body":{"classes/AddLocationUrlToProfile1651485257652.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"injectables/AuthenticationService.html":{},"injectables/CognitoStrategy.html":{},"classes/Encrypter.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/LogoutController.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"injectables/NotificationService.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendTestMessageController.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"controllers/UpdateUserProfileController.html":{}}}],["nullable",{"_index":2258,"title":{},"body":{"entities/ProfileEntity.html":{},"entities/TimeSlotEntity.html":{}}}],["number",{"_index":111,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"classes/AddContactDTO.html":{},"entities/ContactEntity.html":{},"classes/ContactRO.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"interfaces/File.html":{},"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"classes/FileIdRO.html":{},"classes/FileRO.html":{},"injectables/FileService.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"interfaces/ITimeSlotData.html":{},"injectables/MessageService-1.html":{},"classes/NotePositiveInfoDTO.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"controllers/SendEmergencyMessageController.html":{},"entities/TimeSlotDayEntity.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"classes/UpdateContactDTO.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{}}}],["number(this.config.get('s3.filesizelimit",{"_index":1568,"title":{},"body":{"injectables/FileService.html":{}}}],["number(value",{"_index":2316,"title":{},"body":{"classes/ProfileRO.html":{}}}],["number.isinteger(value",{"_index":3199,"title":{},"body":{"classes/UserRO.html":{}}}],["number.provider",{"_index":961,"title":{},"body":{"modules/ContactModule.html":{},"modules/UserModule.html":{}}}],["numbertodaysofweek",{"_index":2450,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["numbertodaysofweek.get(parseint(slot.dayofweek",{"_index":2481,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["numericidvalidationpipe",{"_index":1072,"title":{"injectables/NumericIdValidationPipe.html":{}},"body":{"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"injectables/NumericIdValidationPipe.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["obj",{"_index":3261,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["object",{"_index":1052,"title":{},"body":{"classes/CustomError.html":{},"injectables/NotificationService.html":{},"controllers/UploadFileController.html":{},"injectables/ValidationPipe.html":{}}}],["object.entries(variablestoescapeandsend",{"_index":1962,"title":{},"body":{"injectables/NotificationService.html":{}}}],["object.keys(omit(contacts[0",{"_index":1275,"title":{},"body":{"injectables/ExportService.html":{}}}],["object.keys(omit(files[0",{"_index":1302,"title":{},"body":{"injectables/ExportService.html":{}}}],["object.keys(omit(profile",{"_index":1264,"title":{},"body":{"injectables/ExportService.html":{}}}],["object.keys(omit(timeslots[0",{"_index":1282,"title":{},"body":{"injectables/ExportService.html":{}}}],["object.keys(omit(unconfirmedemails[0",{"_index":1295,"title":{},"body":{"injectables/ExportService.html":{}}}],["object.keys(omit(user",{"_index":1255,"title":{},"body":{"injectables/ExportService.html":{}}}],["object.keys(variablestosend).length",{"_index":1971,"title":{},"body":{"injectables/NotificationService.html":{}}}],["object.values(category",{"_index":311,"title":{},"body":{"classes/AddFileDTO.html":{},"controllers/UploadFileController.html":{}}}],["object.values(dataasarray).foreach((item",{"_index":1333,"title":{},"body":{"injectables/ExportService.html":{}}}],["object.values(item).join('\\t')}\\n",{"_index":1334,"title":{},"body":{"injectables/ExportService.html":{}}}],["object.values(roles).filter((value",{"_index":3198,"title":{},"body":{"classes/UserRO.html":{}}}],["officedocument.wordprocessingml.document",{"_index":1564,"title":{},"body":{"injectables/FileService.html":{}}}],["omit",{"_index":187,"title":{},"body":{"controllers/AddContactController.html":{},"injectables/ExportService.html":{},"injectables/TriggerTimeSlotService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["omit(data",{"_index":213,"title":{},"body":{"controllers/AddContactController.html":{},"injectables/TriggerTimeSlotService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["onactive",{"_index":739,"title":{},"body":{"classes/BasicConsumer.html":{},"classes/MessageConsumer.html":{}}}],["onactive(job",{"_index":744,"title":{},"body":{"classes/BasicConsumer.html":{},"classes/MessageConsumer.html":{}}}],["oncomplete",{"_index":740,"title":{},"body":{"classes/BasicConsumer.html":{},"classes/MessageConsumer.html":{}}}],["oncomplete(job",{"_index":749,"title":{},"body":{"classes/BasicConsumer.html":{},"classes/MessageConsumer.html":{}}}],["ondelete",{"_index":262,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["onerror",{"_index":741,"title":{},"body":{"classes/BasicConsumer.html":{},"classes/MessageConsumer.html":{}}}],["onerror(job",{"_index":752,"title":{},"body":{"classes/BasicConsumer.html":{},"classes/MessageConsumer.html":{}}}],["onetomany",{"_index":1394,"title":{},"body":{"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"entities/TimeSlotEntity.html":{},"entities/UserEntity.html":{}}}],["onetomany(undefined",{"_index":1389,"title":{},"body":{"entities/FileCategoryEntity.html":{},"entities/TimeSlotEntity.html":{},"entities/UserEntity.html":{}}}],["onetoone",{"_index":2117,"title":{},"body":{"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["onetoone(undefined",{"_index":3114,"title":{},"body":{"entities/UserEntity.html":{}}}],["onqueueactive",{"_index":746,"title":{},"body":{"classes/BasicConsumer.html":{},"classes/MessageConsumer.html":{}}}],["onqueuecompleted",{"_index":750,"title":{},"body":{"classes/BasicConsumer.html":{},"classes/MessageConsumer.html":{}}}],["onqueuefailed",{"_index":753,"title":{},"body":{"classes/BasicConsumer.html":{},"classes/MessageConsumer.html":{}}}],["operations",{"_index":2510,"title":{},"body":{"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{}}}],["operations.length",{"_index":2528,"title":{},"body":{"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{}}}],["operations.push",{"_index":2522,"title":{},"body":{"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{}}}],["optional",{"_index":43,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"controllers/AddContactController.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDTO.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"injectables/AuthenticationService.html":{},"classes/BasicConsumer.html":{},"controllers/CancelEmergencyMessageController.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ContactEntitySubscriber.html":{},"controllers/ContactListController.html":{},"classes/ContactRO.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/Encrypter.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"controllers/FileListController.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"interfaces/ICognito.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"interfaces/ITimeSlotData.html":{},"interfaces/IUserData.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"guards/RolesGuard.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"classes/SendEmergencyMessageDTO.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateTimeSlotDTO.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"controllers/UploadFileController.html":{},"classes/UserEntitySubscriber.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":2068,"title":{},"body":{"classes/PassportStrategy.html":{},"injectables/ValidationPipe.html":{}}}],["options.auth",{"_index":2085,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["options.jwtfromrequest",{"_index":2088,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["options.logger",{"_index":2086,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["order",{"_index":1422,"title":{},"body":{"injectables/FileCategoryService.html":{}}}],["originalname",{"_index":1383,"title":{},"body":{"interfaces/File.html":{}}}],["out",{"_index":571,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationModule.html":{},"modules/ContactModule.html":{},"modules/FileModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/TriggerTimeSlotModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":3412,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1105,"title":{},"body":{"controllers/DeleteUserController.html":{}}}],["owner'})@roles(['undefined'])@delete",{"_index":1103,"title":{},"body":{"controllers/DeleteUserController.html":{}}}],["package",{"_index":3272,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":1069,"title":{},"body":{"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["param('id",{"_index":1078,"title":{},"body":{"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["parameters",{"_index":42,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"controllers/AddContactController.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"injectables/AuthenticationService.html":{},"classes/BasicConsumer.html":{},"controllers/CancelEmergencyMessageController.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ContactEntitySubscriber.html":{},"controllers/ContactListController.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/Encrypter.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"controllers/FileListController.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"guards/RolesGuard.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"classes/UserEntitySubscriber.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":982,"title":{},"body":{"classes/ContactRepository.html":{},"classes/FileCategoryRepository.html":{},"classes/FileRepository.html":{},"controllers/GetAccessTokenController.html":{},"injectables/MessageService-1.html":{},"injectables/NotificationService.html":{},"injectables/PositiveInfoService.html":{},"classes/TimeSlotRepository.html":{}}}],["params.data.messages[0].attachments",{"_index":2001,"title":{},"body":{"injectables/NotificationService.html":{}}}],["params.email",{"_index":1616,"title":{},"body":{"controllers/GetAccessTokenController.html":{}}}],["params.isfromqueue",{"_index":2000,"title":{},"body":{"injectables/NotificationService.html":{}}}],["params.ispositiveinfoquestion",{"_index":1954,"title":{},"body":{"injectables/NotificationService.html":{}}}],["params.locationurl",{"_index":2036,"title":{},"body":{"injectables/NotificationService.html":{}}}],["params.minutestonext",{"_index":2212,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["params.password",{"_index":1617,"title":{},"body":{"controllers/GetAccessTokenController.html":{}}}],["params.userid",{"_index":1932,"title":{},"body":{"injectables/NotificationService.html":{}}}],["params?.emergencymessage",{"_index":1998,"title":{},"body":{"injectables/NotificationService.html":{}}}],["params?.exporteddata",{"_index":1994,"title":{},"body":{"injectables/NotificationService.html":{}}}],["params?.isfromqueue",{"_index":1934,"title":{},"body":{"injectables/NotificationService.html":{}}}],["params?.minutestonext",{"_index":2211,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["params?.stoppropagation",{"_index":1933,"title":{},"body":{"injectables/NotificationService.html":{}}}],["params?.userid",{"_index":1944,"title":{},"body":{"injectables/NotificationService.html":{}}}],["parseint(`${entity.prefix",{"_index":2274,"title":{},"body":{"classes/ProfileEntitySubscriber.html":{}}}],["parseint(currentdatetime.slice(11",{"_index":2590,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["parseint(this.config.get(\"night.end",{"_index":2592,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["partial",{"_index":2210,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["passport",{"_index":803,"title":{},"body":{"injectables/CognitoStrategy.html":{},"classes/PassportStrategy.html":{},"dependencies.html":{}}}],["passport.strategy",{"_index":2097,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["passport.strategy.call(this",{"_index":2082,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["passportmodule",{"_index":722,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["passportmodule.register",{"_index":735,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["passportstrategy",{"_index":801,"title":{"classes/PassportStrategy.html":{}},"body":{"injectables/CognitoStrategy.html":{},"classes/PassportStrategy.html":{}}}],["passportstrategy(strategy",{"_index":807,"title":{},"body":{"injectables/CognitoStrategy.html":{}}}],["password",{"_index":621,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"classes/GetAccessTokenDTO.html":{}}}],["patch",{"_index":838,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["patch(':id",{"_index":2917,"title":{},"body":{"controllers/UpdateTimeSlotController.html":{}}}],["patch('api/v2/contact/:id",{"_index":2901,"title":{},"body":{"controllers/UpdateContactController.html":{}}}],["patch('api/v2/user",{"_index":3006,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["patch('contact/:id",{"_index":2904,"title":{},"body":{"controllers/UpdateContactController.html":{}}}],["patch('device",{"_index":2944,"title":{},"body":{"controllers/UpdateUserDeviceIdentifierController.html":{}}}],["patch('email/confirm",{"_index":850,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{}}}],["path",{"_index":1149,"title":{},"body":{"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{}}}],["paused",{"_index":2491,"title":{},"body":{"injectables/SchedulerService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["payload",{"_index":1764,"title":{},"body":{"injectables/MessageService.html":{}}}],["payload.notification.sound",{"_index":1772,"title":{},"body":{"injectables/MessageService.html":{}}}],["pem",{"_index":638,"title":{},"body":{"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["period",{"_index":2148,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["phone",{"_index":90,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddProfileTable1626246168913.html":{},"entities/ContactEntity.html":{},"classes/ContactEntitySubscriber.html":{},"modules/ContactModule.html":{},"classes/ContactRO.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"injectables/NotificationService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendTestMessageController.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"classes/UpdateContactDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"modules/UserModule.html":{},"classes/UserRO.html":{},"miscellaneous/enumerations.html":{}}}],["phone.dto",{"_index":180,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["phone.dto.ts",{"_index":84,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["phone.dto.ts:6",{"_index":99,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["phone.schema",{"_index":182,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["phone_number_is_invalid",{"_index":183,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["phone_number_is_needed",{"_index":2631,"title":{},"body":{"controllers/SendSMSController.html":{}}}],["phoneutil",{"_index":196,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["pipetransform",{"_index":2055,"title":{},"body":{"injectables/NumericIdValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["plaintoclass",{"_index":157,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetAccessTokenController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UploadFileController.html":{},"injectables/ValidationPipe.html":{}}}],["plaintoclass(contactidro",{"_index":215,"title":{},"body":{"controllers/AddContactController.html":{}}}],["plaintoclass(contactro",{"_index":943,"title":{},"body":{"controllers/ContactListController.html":{},"controllers/UpdateContactController.html":{}}}],["plaintoclass(fileidro",{"_index":3101,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["plaintoclass(metadata.metatype",{"_index":3263,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(successro",{"_index":859,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{}}}],["plaintoclass(timeslotidro",{"_index":479,"title":{},"body":{"controllers/AddTimeSlotController.html":{}}}],["plaintoclass(tokenro",{"_index":1618,"title":{},"body":{"controllers/GetAccessTokenController.html":{}}}],["port",{"_index":619,"title":{},"body":{"modules/AppModule.html":{}}}],["positive",{"_index":1829,"title":{},"body":{"controllers/NotePositiveInfoController.html":{},"classes/NotePositiveInfoDTO.html":{},"injectables/PositiveInfoService.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{}}}],["positive_info",{"_index":64,"title":{},"body":{"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{}}}],["positive_info_period",{"_index":427,"title":{},"body":{"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"entities/ProfileEntity.html":{}}}],["positiveinfo",{"_index":2204,"title":{},"body":{"injectables/PositiveInfoService.html":{},"classes/ProfileRepository.html":{},"entities/UserEntity.html":{}}}],["positiveinfo.user",{"_index":3115,"title":{},"body":{"entities/UserEntity.html":{}}}],["positiveinfo?.now",{"_index":2206,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["positiveinfoentity",{"_index":2098,"title":{"entities/PositiveInfoEntity.html":{}},"body":{"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"entities/UserEntity.html":{}}}],["positiveinfoflowhaschanged",{"_index":2984,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["positiveinfoflowhaschanged(profile",{"_index":2989,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["positiveinfoperiod",{"_index":1673,"title":{},"body":{"interfaces/IProfileData.html":{},"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{}}}],["positiveinforepository",{"_index":1882,"title":{"classes/PositiveInfoRepository.html":{}},"body":{"injectables/NotificationService.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"injectables/SchedulerService.html":{},"injectables/UserService.html":{}}}],["positiveinforepositoryprovider",{"_index":3153,"title":{},"body":{"modules/UserModule.html":{}}}],["positiveinfoservice",{"_index":1693,"title":{"injectables/PositiveInfoService.html":{}},"body":{"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/PositiveInfoService.html":{},"controllers/UpdateUserProfileController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["possible",{"_index":1985,"title":{},"body":{"injectables/NotificationService.html":{}}}],["post",{"_index":141,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/ExportUserDataController.html":{},"controllers/GetAccessTokenController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UploadFileController.html":{}}}],["post(\"message/test",{"_index":2650,"title":{},"body":{"controllers/SendTestMessageController.html":{}}}],["post(\"send",{"_index":2003,"title":{},"body":{"injectables/NotificationService.html":{}}}],["post(\"send/emergency",{"_index":2605,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{}}}],["post('/export",{"_index":1364,"title":{},"body":{"controllers/ExportUserDataController.html":{}}}],["post('/positive",{"_index":1846,"title":{},"body":{"controllers/NotePositiveInfoController.html":{}}}],["post('api/v2/contact",{"_index":201,"title":{},"body":{"controllers/AddContactController.html":{}}}],["post('contact",{"_index":216,"title":{},"body":{"controllers/AddContactController.html":{}}}],["post('logout",{"_index":1698,"title":{},"body":{"controllers/LogoutController.html":{}}}],["post('send/sms",{"_index":2632,"title":{},"body":{"controllers/SendSMSController.html":{}}}],["post('time",{"_index":472,"title":{},"body":{"controllers/AddTimeSlotController.html":{}}}],["post('token",{"_index":1613,"title":{},"body":{"controllers/GetAccessTokenController.html":{}}}],["postponebyslottime",{"_index":2127,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["postponebyslottime(userid",{"_index":2145,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["prefix",{"_index":91,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddProfileTable1626246168913.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"entities/ContactEntity.html":{},"classes/ContactEntitySubscriber.html":{},"controllers/ContactListController.html":{},"classes/ContactRO.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetUserController.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateContactDTO.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"controllers/UploadFileController.html":{},"classes/UserRO.html":{},"miscellaneous/enumerations.html":{}}}],["prepareattachmentwithexporteddata",{"_index":1871,"title":{},"body":{"injectables/NotificationService.html":{}}}],["prepareattachmentwithexporteddata(userid",{"_index":1886,"title":{},"body":{"injectables/NotificationService.html":{}}}],["preparecontactstoexport",{"_index":1195,"title":{},"body":{"injectables/ExportService.html":{}}}],["preparecontactstoexport(contacts",{"_index":1209,"title":{},"body":{"injectables/ExportService.html":{}}}],["prepareemaildata",{"_index":1872,"title":{},"body":{"injectables/NotificationService.html":{}}}],["prepareemaildata(templateid",{"_index":1888,"title":{},"body":{"injectables/NotificationService.html":{}}}],["prepareemergencymessageattachments",{"_index":1873,"title":{},"body":{"injectables/NotificationService.html":{}}}],["prepareemergencymessageattachments(userid",{"_index":1894,"title":{},"body":{"injectables/NotificationService.html":{}}}],["preparefilestoexport",{"_index":1196,"title":{},"body":{"injectables/ExportService.html":{}}}],["preparefilestoexport(files",{"_index":1211,"title":{},"body":{"injectables/ExportService.html":{}}}],["prepareprofiletoexport",{"_index":1197,"title":{},"body":{"injectables/ExportService.html":{}}}],["prepareprofiletoexport(profile",{"_index":1214,"title":{},"body":{"injectables/ExportService.html":{}}}],["preparesmsdata",{"_index":1874,"title":{},"body":{"injectables/NotificationService.html":{}}}],["preparesmsdata(to",{"_index":1896,"title":{},"body":{"injectables/NotificationService.html":{}}}],["preparetimeslotstoexport",{"_index":1198,"title":{},"body":{"injectables/ExportService.html":{}}}],["preparetimeslotstoexport(timeslots",{"_index":1217,"title":{},"body":{"injectables/ExportService.html":{}}}],["prepareunconfirmedemailstoexport",{"_index":1199,"title":{},"body":{"injectables/ExportService.html":{}}}],["prepareunconfirmedemailstoexport(unconfirmedemails",{"_index":1220,"title":{},"body":{"injectables/ExportService.html":{}}}],["prepareusertoexport",{"_index":1200,"title":{},"body":{"injectables/ExportService.html":{}}}],["prepareusertoexport(user",{"_index":1224,"title":{},"body":{"injectables/ExportService.html":{}}}],["primary_phisican",{"_index":371,"title":{},"body":{"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"entities/ProfileEntity.html":{}}}],["primary_phisican_address",{"_index":372,"title":{},"body":{"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"entities/ProfileEntity.html":{}}}],["primarycolumn",{"_index":3122,"title":{},"body":{"entities/UserEntity.html":{}}}],["primarycolumn({type",{"_index":3112,"title":{},"body":{"entities/UserEntity.html":{}}}],["primarygeneratedcolumn",{"_index":889,"title":{},"body":{"entities/ContactEntity.html":{},"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"entities/TimeSlotDayEntity.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{}}}],["primarygeneratedcolumn({type",{"_index":875,"title":{},"body":{"entities/ContactEntity.html":{},"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"entities/TimeSlotDayEntity.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{}}}],["primaryphysician",{"_index":1674,"title":{},"body":{"interfaces/IProfileData.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{},"miscellaneous/enumerations.html":{}}}],["primaryphysicianaddress",{"_index":1675,"title":{},"body":{"interfaces/IProfileData.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{},"miscellaneous/enumerations.html":{}}}],["priority",{"_index":1776,"title":{},"body":{"injectables/MessageService.html":{}}}],["private",{"_index":12,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"controllers/AddContactController.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"injectables/AuthenticationService.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ContactEntitySubscriber.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"classes/Encrypter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"injectables/FileCategoryService.html":{},"controllers/FileListController.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"injectables/PositiveInfoService.html":{},"classes/ProfileEntitySubscriber.html":{},"injectables/ProfileService.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"injectables/TriggerTimeSlotService.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"classes/UserEntitySubscriber.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["problem",{"_index":1987,"title":{},"body":{"injectables/NotificationService.html":{}}}],["process",{"_index":1723,"title":{},"body":{"classes/MessageConsumer.html":{},"injectables/MessageService-1.html":{},"injectables/NotificationService.html":{},"miscellaneous/enumerations.html":{}}}],["process(process.email",{"_index":1712,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["process(process.emergency",{"_index":1715,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["process(process.sms",{"_index":1718,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["process.email",{"_index":2011,"title":{},"body":{"injectables/NotificationService.html":{}}}],["process.emergency",{"_index":2042,"title":{},"body":{"injectables/NotificationService.html":{}}}],["process.emergency}_${user.id",{"_index":2044,"title":{},"body":{"injectables/NotificationService.html":{}}}],["process.env.node_env",{"_index":604,"title":{},"body":{"modules/AppModule.html":{},"classes/ExceptionsFilter.html":{}}}],["process.sms",{"_index":1936,"title":{},"body":{"injectables/NotificationService.html":{}}}],["processor",{"_index":1724,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["processor(queue.message",{"_index":1729,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["profile",{"_index":37,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"classes/PositiveInfoRepository.html":{},"injectables/ProfileService.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"injectables/SchedulerService.html":{},"controllers/SendSMSController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"entities/UserEntity.html":{},"classes/UserRepository.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["profile'])).foreach",{"_index":1256,"title":{},"body":{"injectables/ExportService.html":{}}}],["profile'})@roles(['undefined'])@get",{"_index":1647,"title":{},"body":{"controllers/GetUserController.html":{}}}],["profile.controller",{"_index":3142,"title":{},"body":{"modules/UserModule.html":{}}}],["profile.controller.ts",{"_index":2982,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["profile.controller.ts:112",{"_index":2992,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["profile.controller.ts:144",{"_index":2988,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["profile.controller.ts:68",{"_index":2996,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["profile.controller.ts:88",{"_index":2990,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["profile.dto",{"_index":2358,"title":{},"body":{"injectables/ProfileService.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{}}}],["profile.dto.ts",{"_index":3036,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:11",{"_index":3041,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:14",{"_index":3052,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:17",{"_index":3046,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:20",{"_index":3064,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:28",{"_index":3050,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:31",{"_index":3037,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:34",{"_index":3040,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:37",{"_index":3053,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:40",{"_index":3054,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:43",{"_index":3062,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:46",{"_index":3048,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:49",{"_index":3045,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:5",{"_index":3049,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:52",{"_index":3038,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:55",{"_index":3065,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:58",{"_index":3042,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:61",{"_index":3047,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:64",{"_index":3066,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:67",{"_index":3060,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:70",{"_index":3039,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:73",{"_index":3043,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:76",{"_index":3061,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:79",{"_index":3044,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:8",{"_index":3063,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:82",{"_index":3051,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:85",{"_index":3059,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:88",{"_index":3058,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:91",{"_index":3057,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:94",{"_index":3056,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.dto.ts:97",{"_index":3055,"title":{},"body":{"classes/UpdateUserProfileDTO.html":{}}}],["profile.entity",{"_index":2271,"title":{},"body":{"classes/ProfileEntitySubscriber.html":{},"entities/UserEntity.html":{}}}],["profile.frequencyofregularnotification",{"_index":3024,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["profile.positiveinfoperiod",{"_index":3025,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["profile.prefix}${profile.phone",{"_index":2636,"title":{},"body":{"controllers/SendSMSController.html":{}}}],["profile.regularnotificationtime",{"_index":1271,"title":{},"body":{"injectables/ExportService.html":{}}}],["profile.regularpushnotification",{"_index":1848,"title":{},"body":{"controllers/NotePositiveInfoController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["profile.ro",{"_index":3196,"title":{},"body":{"classes/UserRO.html":{}}}],["profile.schema",{"_index":2999,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["profile.user",{"_index":3117,"title":{},"body":{"entities/UserEntity.html":{}}}],["profile.userid",{"_index":2518,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["profile?.automatedemergency",{"_index":1851,"title":{},"body":{"controllers/NotePositiveInfoController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["profile?.frequencyofregularnotification",{"_index":3015,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["profile?.name",{"_index":3031,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["profile?.positiveinfoperiod",{"_index":3013,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["profile?.prefix",{"_index":2634,"title":{},"body":{"controllers/SendSMSController.html":{}}}],["profile?.regularpushnotification",{"_index":3010,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["profile?.surname",{"_index":1371,"title":{},"body":{"controllers/ExportUserDataController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["profile_weight",{"_index":3331,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["profileentity",{"_index":1215,"title":{"entities/ProfileEntity.html":{}},"body":{"injectables/ExportService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"controllers/UpdateUserProfileController.html":{},"entities/UserEntity.html":{}}}],["profileentitysubscriber",{"_index":2267,"title":{"classes/ProfileEntitySubscriber.html":{}},"body":{"classes/ProfileEntitySubscriber.html":{}}}],["profilekeys",{"_index":1262,"title":{},"body":{"injectables/ExportService.html":{}}}],["profilekeys[index",{"_index":1266,"title":{},"body":{"injectables/ExportService.html":{}}}],["profilemapper",{"_index":3001,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["profilerepository",{"_index":1202,"title":{"classes/ProfileRepository.html":{}},"body":{"injectables/ExportService.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"injectables/SchedulerService.html":{},"injectables/UserService.html":{}}}],["profilerepositoryprovider",{"_index":3138,"title":{},"body":{"modules/UserModule.html":{}}}],["profilero",{"_index":2279,"title":{"classes/ProfileRO.html":{}},"body":{"classes/ProfileRO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UserRO.html":{}}}],["profilero:102",{"_index":3195,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:107",{"_index":3172,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:111",{"_index":3189,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:115",{"_index":3168,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:119",{"_index":3190,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:123",{"_index":3173,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:127",{"_index":3180,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:131",{"_index":3175,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:135",{"_index":3193,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:139",{"_index":3188,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:143",{"_index":3187,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:147",{"_index":3186,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:151",{"_index":3185,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:155",{"_index":3184,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:19",{"_index":3166,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:24",{"_index":3178,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:26",{"_index":3158,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:29",{"_index":3192,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:30",{"_index":3164,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:34",{"_index":3179,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:37",{"_index":3165,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:41",{"_index":3181,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:48",{"_index":3169,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:53",{"_index":3182,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:58",{"_index":3183,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:63",{"_index":3170,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:70",{"_index":3191,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:75",{"_index":3177,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:82",{"_index":3174,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:86",{"_index":3167,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:90",{"_index":3194,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:94",{"_index":3171,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero:98",{"_index":3176,"title":{},"body":{"classes/UserRO.html":{}}}],["profilero})@apiresponse({status",{"_index":2994,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["profiles",{"_index":2508,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["profileservice",{"_index":1351,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ExportUserDataController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/ProfileService.html":{},"controllers/SendSMSController.html":{},"controllers/UpdateUserProfileController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["promise",{"_index":45,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"injectables/AuthenticationService.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"injectables/ExportService.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"injectables/NotificationService.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UserEntitySubscriber.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["promise((resolve",{"_index":688,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CognitoStrategy.html":{},"classes/ContactRepository.html":{},"classes/FileCategoryRepository.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"classes/PositiveInfoRepository.html":{},"classes/ProfileRepository.html":{},"classes/TimeSlotRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["promise(async",{"_index":678,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["promise.all",{"_index":1313,"title":{},"body":{"injectables/ExportService.html":{},"controllers/FileListController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"injectables/UserService.html":{}}}],["promise.all(operations",{"_index":2529,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactAndCheckPhoneDTO.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileDTO.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimeSlotDTO.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"injectables/AuthenticationService.html":{},"classes/BasicConsumer.html":{},"classes/CategoryRO.html":{},"classes/ConfirmUserEmailDTO.html":{},"entities/ContactEntity.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactIdRO.html":{},"classes/ContactRO.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"classes/Encrypter.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"classes/ExportUserDataDTO.html":{},"interfaces/File.html":{},"entities/FileCategoryEntity.html":{},"classes/FileCategoryRepository.html":{},"entities/FileEntity.html":{},"classes/FileIdRO.html":{},"classes/FileRO.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"classes/GetAccessTokenDTO.html":{},"interfaces/ICognito.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"interfaces/ITimeSlotData.html":{},"interfaces/IUserData.html":{},"classes/MessageConsumer.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"classes/NotePositiveInfoDTO.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"injectables/SchedulerService.html":{},"classes/SendEmergencyMessageDTO.html":{},"classes/SendSmsDTO.html":{},"classes/SuccessRO.html":{},"entities/TimeSlotDayEntity.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TimeSlotRepository.html":{},"classes/TokenRO.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateContactDTO.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"controllers/UploadFileController.html":{},"interfaces/UploadResult.html":{},"entities/UserEntity.html":{},"classes/UserEntitySubscriber.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{},"properties.html":{}}}],["protected",{"_index":636,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/BasicConsumer.html":{},"classes/ContactRepository.html":{},"classes/ExceptionsFilter.html":{},"classes/FileCategoryRepository.html":{},"classes/MessageConsumer.html":{},"classes/PassportStrategy.html":{},"classes/PositiveInfoRepository.html":{},"classes/ProfileRepository.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"classes/UserRepository.html":{}}}],["provider/aws",{"_index":1467,"title":{},"body":{"modules/FileModule.html":{}}}],["provider/contact",{"_index":951,"title":{},"body":{"modules/ContactModule.html":{}}}],["provider/file",{"_index":1474,"title":{},"body":{"modules/FileModule.html":{}}}],["provider/firebase.provider",{"_index":1751,"title":{},"body":{"modules/MessageModule.html":{}}}],["provider/mail",{"_index":1865,"title":{},"body":{"modules/NotificationModule.html":{}}}],["provider/message",{"_index":2368,"title":{},"body":{"modules/QueueModule.html":{}}}],["provider/positive",{"_index":3154,"title":{},"body":{"modules/UserModule.html":{}}}],["provider/profile",{"_index":3139,"title":{},"body":{"modules/UserModule.html":{}}}],["provider/time",{"_index":2738,"title":{},"body":{"modules/TriggerTimeSlotModule.html":{}}}],["provider/twilio.provider",{"_index":1868,"title":{},"body":{"modules/NotificationModule.html":{}}}],["provider/unconfirmed",{"_index":3141,"title":{},"body":{"modules/UserModule.html":{}}}],["provider/user",{"_index":3137,"title":{},"body":{"modules/UserModule.html":{}}}],["providers",{"_index":625,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationModule.html":{},"modules/ContactModule.html":{},"modules/FileModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/TriggerTimeSlotModule.html":{},"modules/UserModule.html":{}}}],["public",{"_index":16,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"injectables/AuthenticationService.html":{},"classes/CustomError.html":{},"classes/ExceptionsFilter.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["pulse_based_trigger_background_modes_enabled",{"_index":409,"title":{},"body":{"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"entities/ProfileEntity.html":{}}}],["pulse_based_trigger_connected_to_google_fit",{"_index":408,"title":{},"body":{"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"entities/ProfileEntity.html":{}}}],["pulse_based_trigger_google_fit_authenticated",{"_index":407,"title":{},"body":{"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"entities/ProfileEntity.html":{}}}],["pulse_based_trigger_ios_apple_watch_paired",{"_index":406,"title":{},"body":{"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"entities/ProfileEntity.html":{}}}],["pulse_based_trigger_ios_health_permissions",{"_index":405,"title":{},"body":{"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"entities/ProfileEntity.html":{}}}],["pulsebasedtriggerbackgroundmodesenabled",{"_index":2219,"title":{},"body":{"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{}}}],["pulsebasedtriggerconnectedtogooglefit",{"_index":2220,"title":{},"body":{"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{}}}],["pulsebasedtriggergooglefitauthenticated",{"_index":2221,"title":{},"body":{"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{}}}],["pulsebasedtriggeriosapplewatchpaired",{"_index":2222,"title":{},"body":{"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{}}}],["pulsebasedtriggerioshealthpermissions",{"_index":2223,"title":{},"body":{"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{}}}],["push",{"_index":2521,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["push_notification_time",{"_index":417,"title":{},"body":{"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{}}}],["pushnotificationtime",{"_index":2102,"title":{},"body":{"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{}}}],["pushnotificationwithoutreaction",{"_index":2550,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["qb.orwhere",{"_index":2346,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["qb.orwhere(`regular_push_notification",{"_index":2165,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["qb.where('(ts.from",{"_index":2715,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["qb.where('regular_notification_time",{"_index":2345,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["qb.where('regular_push_notification",{"_index":2164,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["query",{"_index":1183,"title":{},"body":{"classes/ExceptionsFilter.html":{},"classes/PositiveInfoRepository.html":{}}}],["query.andwhere",{"_index":2172,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["query.andwhere('regular_push_notification",{"_index":2171,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["query.getmany",{"_index":2174,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["queryrunner",{"_index":40,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["queryrunner.addcolumn(this.tablename",{"_index":68,"title":{},"body":{"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["queryrunner.addcolumns(this.tablename",{"_index":52,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{}}}],["queryrunner.createforeignkey",{"_index":258,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["queryrunner.createindex",{"_index":255,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["queryrunner.createtable",{"_index":238,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{}}}],["queryrunner.dropcolumn(this.tablename",{"_index":70,"title":{},"body":{"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["queryrunner.dropcolumns(this.tablename",{"_index":54,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{}}}],["queryrunner.dropforeignkey(this.tablename",{"_index":264,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddTimeSlotTable1629364182226.html":{}}}],["queryrunner.droptable(this.tablename",{"_index":265,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{}}}],["queryrunner.query",{"_index":295,"title":{},"body":{"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{}}}],["queue",{"_index":1725,"title":{},"body":{"classes/MessageConsumer.html":{},"injectables/MessageService-1.html":{},"modules/QueueModule.html":{},"miscellaneous/enumerations.html":{}}}],["queue.message",{"_index":2372,"title":{},"body":{"modules/QueueModule.html":{}}}],["queue.provider",{"_index":2369,"title":{},"body":{"modules/QueueModule.html":{}}}],["queue.sendaftertime.alertifnopositiveinfoaftersms",{"_index":1958,"title":{},"body":{"injectables/NotificationService.html":{}}}],["queue.sendaftertime.smsifnopositiveinfoafterpushnotification",{"_index":2531,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["queue.sendaftertime.triggerifnopositiveinfoaftersms",{"_index":1957,"title":{},"body":{"injectables/NotificationService.html":{}}}],["queue/constant/process.constant",{"_index":1808,"title":{},"body":{"injectables/MessageService-1.html":{},"injectables/NotificationService.html":{}}}],["queue/queue.module",{"_index":588,"title":{},"body":{"modules/AppModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/UserModule.html":{}}}],["queue/service/message.service",{"_index":776,"title":{},"body":{"controllers/CancelEmergencyMessageController.html":{},"controllers/GetUserController.html":{},"injectables/NotificationService.html":{}}}],["queuemessageprovider",{"_index":2367,"title":{},"body":{"modules/QueueModule.html":{}}}],["queuemodule",{"_index":565,"title":{"modules/QueueModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/QueueModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["read_manual",{"_index":74,"title":{},"body":{"classes/AddAutomatedEmergencySettings1628507521688.html":{},"entities/ProfileEntity.html":{}}}],["readmanual",{"_index":1676,"title":{},"body":{"interfaces/IProfileData.html":{},"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{}}}],["readonly",{"_index":194,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"injectables/AuthenticationService.html":{},"classes/BasicConsumer.html":{},"controllers/CancelEmergencyMessageController.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ContactEntitySubscriber.html":{},"controllers/ContactListController.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/Encrypter.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"controllers/FileListController.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"classes/PassportStrategy.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"classes/SuccessRO.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"classes/UserEntitySubscriber.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["record",{"_index":980,"title":{},"body":{"classes/ContactRepository.html":{},"injectables/ExportService.html":{},"classes/FileCategoryRepository.html":{},"classes/FileRepository.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"injectables/NotificationService.html":{},"classes/TimeSlotRepository.html":{}}}],["redis",{"_index":616,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/enumerations.html":{}}}],["redis_provider",{"_index":3351,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["redisprovider",{"_index":589,"title":{},"body":{"modules/AppModule.html":{}}}],["referencedcolumnnames",{"_index":259,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["referencedtablename",{"_index":260,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["reflect",{"_index":3306,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":155,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/NotePositiveInfoController.html":{},"guards/RolesGuard.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["regular_notification_time",{"_index":2253,"title":{},"body":{"entities/ProfileEntity.html":{},"classes/ProfileRepository.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["regular_push_notification",{"_index":425,"title":{},"body":{"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"entities/ProfileEntity.html":{}}}],["regularnotificationtime",{"_index":1270,"title":{},"body":{"injectables/ExportService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileRepository.html":{}}}],["regularpushnotification",{"_index":1677,"title":{},"body":{"interfaces/IProfileData.html":{},"classes/PositiveInfoRepository.html":{},"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"injectables/SchedulerService.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{}}}],["reject",{"_index":680,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CognitoStrategy.html":{},"injectables/FileService.html":{},"injectables/UnconfirmedEmailService.html":{},"injectables/UserService.html":{}}}],["reject(err",{"_index":826,"title":{},"body":{"injectables/CognitoStrategy.html":{}}}],["reject(error",{"_index":686,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/FileService.html":{},"injectables/UnconfirmedEmailService.html":{},"injectables/UserService.html":{}}}],["relations",{"_index":1319,"title":{},"body":{"injectables/ExportService.html":{},"classes/ProfileRepository.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"classes/UnconfirmedEmailRepository.html":{},"classes/UserRepository.html":{}}}],["removeautomatedvoicecallfromprofile.ts",{"_index":2379,"title":{},"body":{"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{}}}],["removeautomatedvoicecallfromprofile.ts:15",{"_index":2383,"title":{},"body":{"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{}}}],["removeautomatedvoicecallfromprofile.ts:19",{"_index":2382,"title":{},"body":{"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{}}}],["removeautomatedvoicecallfromprofile.ts:6",{"_index":2381,"title":{},"body":{"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{}}}],["removeautomatedvoicecallfromprofile.ts:8",{"_index":2380,"title":{},"body":{"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{}}}],["removeautomatedvoicecallfromprofile1651485422365",{"_index":2377,"title":{"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{}},"body":{"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{}}}],["removejobsbyuserid",{"_index":1787,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["removejobsbyuserid(userid",{"_index":1801,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["removelocationfrompositiveinfo.ts",{"_index":2386,"title":{},"body":{"classes/RemoveLocationFromPositiveInfo1651485422345.html":{}}}],["removelocationfrompositiveinfo.ts:15",{"_index":2390,"title":{},"body":{"classes/RemoveLocationFromPositiveInfo1651485422345.html":{}}}],["removelocationfrompositiveinfo.ts:19",{"_index":2389,"title":{},"body":{"classes/RemoveLocationFromPositiveInfo1651485422345.html":{}}}],["removelocationfrompositiveinfo.ts:6",{"_index":2388,"title":{},"body":{"classes/RemoveLocationFromPositiveInfo1651485422345.html":{}}}],["removelocationfrompositiveinfo.ts:8",{"_index":2387,"title":{},"body":{"classes/RemoveLocationFromPositiveInfo1651485422345.html":{}}}],["removelocationfrompositiveinfo1651485422345",{"_index":2384,"title":{"classes/RemoveLocationFromPositiveInfo1651485422345.html":{}},"body":{"classes/RemoveLocationFromPositiveInfo1651485422345.html":{}}}],["removeoncomplete",{"_index":2374,"title":{},"body":{"modules/QueueModule.html":{}}}],["replace",{"_index":2020,"title":{},"body":{"injectables/NotificationService.html":{}}}],["replace(\"{domain",{"_index":2559,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["replace(\"{minutes",{"_index":2546,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["repository",{"_index":974,"title":{},"body":{"classes/ContactRepository.html":{},"classes/FileCategoryRepository.html":{},"classes/FileRepository.html":{},"classes/PositiveInfoRepository.html":{},"classes/ProfileRepository.html":{},"classes/TimeSlotDayRepository.html":{},"classes/TimeSlotRepository.html":{},"classes/UnconfirmedEmailRepository.html":{},"classes/UserRepository.html":{}}}],["repository.provider",{"_index":952,"title":{},"body":{"modules/ContactModule.html":{},"modules/FileModule.html":{},"modules/TriggerTimeSlotModule.html":{},"modules/UserModule.html":{}}}],["repository/contact.repository",{"_index":1023,"title":{},"body":{"injectables/ContactService.html":{}}}],["repository/file",{"_index":1419,"title":{},"body":{"injectables/FileCategoryService.html":{}}}],["repository/file.repository",{"_index":1545,"title":{},"body":{"injectables/FileService.html":{}}}],["repository/positive",{"_index":2200,"title":{},"body":{"injectables/PositiveInfoService.html":{},"injectables/UserService.html":{}}}],["repository/profile.repository",{"_index":1231,"title":{},"body":{"injectables/ExportService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["repository/time",{"_index":2775,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["repository/unconfirmed",{"_index":2864,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["repository/user.repository",{"_index":1230,"title":{},"body":{"injectables/ExportService.html":{},"injectables/UserService.html":{}}}],["request",{"_index":813,"title":{},"body":{"injectables/CognitoStrategy.html":{},"classes/ExceptionsFilter.html":{},"classes/PassportStrategy.html":{}}}],["request(params.data",{"_index":2006,"title":{},"body":{"injectables/NotificationService.html":{}}}],["request.method",{"_index":1181,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["request.url",{"_index":1180,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["request/dto/add",{"_index":166,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"injectables/ContactService.html":{},"injectables/TriggerTimeSlotService.html":{},"controllers/UploadFileController.html":{}}}],["request/dto/confirm",{"_index":840,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{}}}],["request/dto/export",{"_index":1359,"title":{},"body":{"controllers/ExportUserDataController.html":{}}}],["request/dto/get",{"_index":1603,"title":{},"body":{"controllers/GetAccessTokenController.html":{}}}],["request/dto/note",{"_index":1838,"title":{},"body":{"controllers/NotePositiveInfoController.html":{},"injectables/PositiveInfoService.html":{}}}],["request/dto/send",{"_index":2598,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{}}}],["request/dto/update",{"_index":1024,"title":{},"body":{"injectables/ContactService.html":{},"injectables/ProfileService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["request/schema/add",{"_index":168,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/UploadFileController.html":{}}}],["request/schema/confirm",{"_index":843,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{}}}],["request/schema/export",{"_index":1362,"title":{},"body":{"controllers/ExportUserDataController.html":{}}}],["request/schema/get",{"_index":1606,"title":{},"body":{"controllers/GetAccessTokenController.html":{}}}],["request/schema/note",{"_index":1841,"title":{},"body":{"controllers/NotePositiveInfoController.html":{}}}],["request/schema/send",{"_index":2600,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{}}}],["request/schema/update",{"_index":2899,"title":{},"body":{"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["request?.body",{"_index":1182,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["request?.query",{"_index":1184,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["required",{"_index":97,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"classes/AddContactDTO.html":{},"classes/AddFileDTO.html":{},"classes/AddTimeSlotDTO.html":{},"classes/ConfirmUserEmailDTO.html":{},"classes/ExportUserDataDTO.html":{},"classes/NotePositiveInfoDTO.html":{},"classes/SendEmergencyMessageDTO.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateContactDTO.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{}}}],["res.data.keys[1",{"_index":673,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["res?.data?.keys.length",{"_index":674,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["reset",{"_index":570,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationModule.html":{},"modules/ContactModule.html":{},"modules/FileModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/TriggerTimeSlotModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolve",{"_index":679,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resolve(attributes",{"_index":703,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resolve(data",{"_index":990,"title":{},"body":{"classes/ContactRepository.html":{},"classes/FileCategoryRepository.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"classes/PositiveInfoRepository.html":{},"classes/ProfileRepository.html":{},"classes/TimeSlotRepository.html":{},"classes/UserRepository.html":{}}}],["resolve(data.body.tostring('base64",{"_index":1581,"title":{},"body":{"injectables/FileService.html":{}}}],["resolve(decodedtoken",{"_index":687,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resolve(null",{"_index":697,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/FileService.html":{}}}],["resolve(result",{"_index":712,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CognitoStrategy.html":{},"injectables/UnconfirmedEmailService.html":{},"injectables/UserService.html":{}}}],["response",{"_index":1170,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["response/category.ro",{"_index":1450,"title":{},"body":{"controllers/FileListController.html":{}}}],["response/contact",{"_index":164,"title":{},"body":{"controllers/AddContactController.html":{}}}],["response/contact.ro",{"_index":936,"title":{},"body":{"controllers/ContactListController.html":{},"controllers/UpdateContactController.html":{}}}],["response/file",{"_index":3086,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["response/profile.ro",{"_index":2997,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["response/time",{"_index":464,"title":{},"body":{"controllers/AddTimeSlotController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["response/token.ro",{"_index":1610,"title":{},"body":{"controllers/GetAccessTokenController.html":{}}}],["response/user.ro",{"_index":1650,"title":{},"body":{"controllers/GetUserController.html":{}}}],["result",{"_index":711,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"injectables/FileService.html":{},"injectables/MessageService.html":{},"injectables/NotificationService.html":{},"controllers/SendSMSController.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"injectables/UserService.html":{}}}],["result.affected",{"_index":860,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{}}}],["result.body",{"_index":2008,"title":{},"body":{"injectables/NotificationService.html":{}}}],["result.body.messages[0].status",{"_index":2007,"title":{},"body":{"injectables/NotificationService.html":{}}}],["result.errorcode",{"_index":2638,"title":{},"body":{"controllers/SendSMSController.html":{}}}],["result.errormessage",{"_index":1951,"title":{},"body":{"injectables/NotificationService.html":{}}}],["result.successcount",{"_index":1778,"title":{},"body":{"injectables/MessageService.html":{}}}],["result.ts",{"_index":3103,"title":{},"body":{"interfaces/UploadResult.html":{}}}],["result?.affected",{"_index":1081,"title":{},"body":{"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{}}}],["result?.status",{"_index":1946,"title":{},"body":{"injectables/NotificationService.html":{}}}],["result?.uri",{"_index":1948,"title":{},"body":{"injectables/NotificationService.html":{}}}],["results",{"_index":55,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileDTO.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDTO.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"modules/AuthorizationModule.html":{},"classes/BasicConsumer.html":{},"controllers/CancelEmergencyMessageController.html":{},"classes/CategoryRO.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ConfirmUserEmailDTO.html":{},"entities/ContactEntity.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactIdRO.html":{},"controllers/ContactListController.html":{},"modules/ContactModule.html":{},"classes/ContactRO.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/Encrypter.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"classes/ExportUserDataDTO.html":{},"interfaces/File.html":{},"entities/FileCategoryEntity.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"entities/FileEntity.html":{},"classes/FileIdRO.html":{},"controllers/FileListController.html":{},"modules/FileModule.html":{},"classes/FileRO.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"classes/GetAccessTokenDTO.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"interfaces/ICognito.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"interfaces/ITimeSlotData.html":{},"interfaces/IUserData.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"controllers/NotePositiveInfoController.html":{},"classes/NotePositiveInfoDTO.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"modules/QueueModule.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"guards/RolesGuard.html":{},"modules/SchedulerModule.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"classes/SendEmergencyMessageDTO.html":{},"controllers/SendSMSController.html":{},"classes/SendSmsDTO.html":{},"controllers/SendTestMessageController.html":{},"classes/SuccessRO.html":{},"entities/TimeSlotDayEntity.html":{},"classes/TimeSlotDayRepository.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TimeSlotRepository.html":{},"classes/TokenRO.html":{},"modules/TriggerTimeSlotModule.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"classes/UpdateContactDTO.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"controllers/UploadFileController.html":{},"interfaces/UploadResult.html":{},"entities/UserEntity.html":{},"classes/UserEntitySubscriber.html":{},"modules/UserModule.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["resume",{"_index":2501,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["retrieving_time_slots_failed",{"_index":2778,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["return",{"_index":214,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"controllers/CancelEmergencyMessageController.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ContactEntitySubscriber.html":{},"controllers/ContactListController.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/Encrypter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"controllers/FileListController.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"classes/UserEntitySubscriber.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["returns",{"_index":44,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"controllers/AddContactController.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"classes/BasicConsumer.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ContactEntitySubscriber.html":{},"controllers/ContactListController.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/Encrypter.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"controllers/FileListController.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"guards/RolesGuard.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"classes/UserEntitySubscriber.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["rightthreshold",{"_index":2708,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["rightthresholdtime",{"_index":2472,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["rimraf",{"_index":3308,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":435,"title":{},"body":{"classes/AddRoleToUserTable1625843279739.html":{},"injectables/ExportService.html":{},"guards/RolesGuard.html":{},"entities/UserEntity.html":{},"classes/UserRO.html":{}}}],["roles",{"_index":153,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/NotePositiveInfoController.html":{},"guards/RolesGuard.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"entities/UserEntity.html":{},"classes/UserRO.html":{},"miscellaneous/enumerations.html":{}}}],["roles([roles.user",{"_index":200,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["roles.length",{"_index":2403,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles.user",{"_index":3124,"title":{},"body":{"entities/UserEntity.html":{}}}],["rolesguard",{"_index":151,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/NotePositiveInfoController.html":{},"guards/RolesGuard.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["rolesguard(new",{"_index":190,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["run",{"_index":3394,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":3310,"title":{},"body":{"dependencies.html":{}}}],["s3",{"_index":1513,"title":{},"body":{"injectables/FileService.html":{},"miscellaneous/enumerations.html":{}}}],["s3.provider",{"_index":1468,"title":{},"body":{"modules/FileModule.html":{}}}],["s3_provider",{"_index":3354,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["s3file",{"_index":3097,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["s3file.key",{"_index":3100,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["saturday",{"_index":3344,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["save",{"_index":1040,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FileService.html":{},"injectables/ProfileService.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"injectables/UserService.html":{}}}],["save_contact_failed",{"_index":1027,"title":{},"body":{"injectables/ContactService.html":{}}}],["save_file_failed",{"_index":1540,"title":{},"body":{"injectables/FileService.html":{}}}],["save_positive_info_failed",{"_index":2201,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["save_profile_failed",{"_index":2357,"title":{},"body":{"injectables/ProfileService.html":{}}}],["save_time_slot_failed",{"_index":2776,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["save_unconfirmed_email_failed",{"_index":2865,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["save_user_failed",{"_index":3235,"title":{},"body":{"injectables/UserService.html":{}}}],["savecontact",{"_index":1000,"title":{},"body":{"injectables/ContactService.html":{}}}],["savecontact(userid",{"_index":1015,"title":{},"body":{"injectables/ContactService.html":{}}}],["savefile",{"_index":1505,"title":{},"body":{"injectables/FileService.html":{}}}],["savefile(userid",{"_index":1524,"title":{},"body":{"injectables/FileService.html":{}}}],["savepositiveinfo",{"_index":2192,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["savepositiveinfo(userid",{"_index":2197,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["saveprofile",{"_index":2349,"title":{},"body":{"injectables/ProfileService.html":{}}}],["saveprofile(profile",{"_index":2353,"title":{},"body":{"injectables/ProfileService.html":{}}}],["savetimeslot",{"_index":2751,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["savetimeslot(userid",{"_index":2770,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["saveunconfirmedemail",{"_index":2855,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["saveunconfirmedemail(userid",{"_index":2861,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["saveuser",{"_index":3214,"title":{},"body":{"injectables/UserService.html":{}}}],["saveuser(id",{"_index":3227,"title":{},"body":{"injectables/UserService.html":{}}}],["saveuser(token?.sub",{"_index":821,"title":{},"body":{"injectables/CognitoStrategy.html":{}}}],["schedule",{"_index":2413,"title":{},"body":{"modules/SchedulerModule.html":{},"injectables/SchedulerService.html":{},"dependencies.html":{}}}],["schedulemodule",{"_index":2411,"title":{},"body":{"modules/SchedulerModule.html":{}}}],["schedulemodule.register",{"_index":2416,"title":{},"body":{"modules/SchedulerModule.html":{}}}],["scheduler.service",{"_index":2414,"title":{},"body":{"modules/SchedulerModule.html":{}}}],["scheduler/scheduler.module",{"_index":595,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulermodule",{"_index":566,"title":{"modules/SchedulerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchedulerModule.html":{},"modules.html":{},"overview.html":{}}}],["schedulerservice",{"_index":2409,"title":{"injectables/SchedulerService.html":{}},"body":{"modules/SchedulerModule.html":{},"injectables/SchedulerService.html":{},"overview.html":{}}}],["schema",{"_index":2047,"title":{},"body":{"injectables/NumericIdValidationPipe.html":{},"controllers/UploadFileController.html":{},"injectables/ValidationPipe.html":{}}}],["sdk",{"_index":660,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/FileService.html":{},"injectables/UnconfirmedEmailService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["sdk/clients/batch",{"_index":3197,"title":{},"body":{"classes/UserRO.html":{}}}],["sdk/clients/transfer",{"_index":1683,"title":{},"body":{"interfaces/ITimeSlotData.html":{}}}],["secretkey",{"_index":1118,"title":{},"body":{"classes/Encrypter.html":{}}}],["security",{"_index":3290,"title":{},"body":{"dependencies.html":{}}}],["select('id",{"_index":2180,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["select('profile.user_id",{"_index":2333,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["send",{"_index":2595,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{}}}],["send_mail_failed",{"_index":1905,"title":{},"body":{"injectables/NotificationService.html":{}}}],["send_sms_failed",{"_index":1906,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendalertduetolackofpositiveinfo",{"_index":2422,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["sendalertduetolackofpositiveinfo(regularpushnotification",{"_index":2433,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["sendemail",{"_index":1875,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendemail(params",{"_index":1898,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendemergencymessage",{"_index":1876,"title":{},"body":{"injectables/NotificationService.html":{},"controllers/SendEmergencyMessageController.html":{}}}],["sendemergencymessage(contact",{"_index":1900,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendemergencymessage(user",{"_index":2594,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{}}}],["sendemergencymessagecontroller",{"_index":1744,"title":{"controllers/SendEmergencyMessageController.html":{}},"body":{"modules/MessageModule.html":{},"controllers/SendEmergencyMessageController.html":{}}}],["sendemergencymessagedto",{"_index":1917,"title":{"classes/SendEmergencyMessageDTO.html":{}},"body":{"injectables/NotificationService.html":{},"controllers/SendEmergencyMessageController.html":{},"classes/SendEmergencyMessageDTO.html":{}}}],["sendemergencymessageschema",{"_index":2599,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{}}}],["sendmessagetodevice",{"_index":1753,"title":{},"body":{"injectables/MessageService.html":{}}}],["sendmessagetodevice(deviceid",{"_index":1757,"title":{},"body":{"injectables/MessageService.html":{}}}],["sendpushnotificationduetolackofpositiveinfo",{"_index":2423,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["sendregularpushnotification",{"_index":2424,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["sendsms",{"_index":1877,"title":{},"body":{"injectables/NotificationService.html":{},"controllers/SendSMSController.html":{}}}],["sendsms(params",{"_index":1902,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendsms(user",{"_index":2624,"title":{},"body":{"controllers/SendSMSController.html":{}}}],["sendsmscontroller",{"_index":1743,"title":{"controllers/SendSMSController.html":{}},"body":{"modules/MessageModule.html":{},"controllers/SendSMSController.html":{}}}],["sendsmsdto",{"_index":2625,"title":{"classes/SendSmsDTO.html":{}},"body":{"controllers/SendSMSController.html":{},"classes/SendSmsDTO.html":{}}}],["sendsmsduetolackofpositiveinfo",{"_index":2425,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["sendsmsduetolackofpositiveinfo(regularpushnotification",{"_index":2437,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["sendsmsschema",{"_index":2629,"title":{},"body":{"controllers/SendSMSController.html":{}}}],["sendtestemergencymessage",{"_index":2643,"title":{},"body":{"controllers/SendTestMessageController.html":{}}}],["sendtestemergencymessage(@user",{"_index":2651,"title":{},"body":{"controllers/SendTestMessageController.html":{}}}],["sendtestemergencymessage(user",{"_index":2644,"title":{},"body":{"controllers/SendTestMessageController.html":{}}}],["sendtestmessagecontroller",{"_index":2641,"title":{"controllers/SendTestMessageController.html":{}},"body":{"controllers/SendTestMessageController.html":{},"modules/UserModule.html":{}}}],["sendtodevice",{"_index":1775,"title":{},"body":{"injectables/MessageService.html":{}}}],["sent",{"_index":1780,"title":{},"body":{"injectables/MessageService.html":{},"injectables/NotificationService.html":{}}}],["serious_medical_issues",{"_index":373,"title":{},"body":{"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"entities/ProfileEntity.html":{}}}],["seriousmedicalissues",{"_index":1678,"title":{},"body":{"interfaces/IProfileData.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{},"miscellaneous/enumerations.html":{}}}],["serversideencryption",{"_index":1578,"title":{},"body":{"injectables/FileService.html":{}}}],["service.provider",{"_index":728,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/UserModule.html":{}}}],["service/authentication.service",{"_index":724,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/CognitoStrategy.html":{},"classes/PassportStrategy.html":{}}}],["service/contact.service",{"_index":160,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/ContactListController.html":{},"modules/ContactModule.html":{},"controllers/DeleteContactController-1.html":{},"controllers/UpdateContactController.html":{}}}],["service/export.service",{"_index":3149,"title":{},"body":{"modules/UserModule.html":{}}}],["service/file",{"_index":1451,"title":{},"body":{"controllers/FileListController.html":{},"modules/FileModule.html":{},"controllers/UploadFileController.html":{}}}],["service/file.service",{"_index":1071,"title":{},"body":{"controllers/DeleteContactController.html":{},"controllers/FileListController.html":{},"modules/FileModule.html":{},"controllers/UploadFileController.html":{}}}],["service/mesage.service",{"_index":1749,"title":{},"body":{"modules/MessageModule.html":{}}}],["service/message.service",{"_index":2370,"title":{},"body":{"modules/QueueModule.html":{}}}],["service/notification.service",{"_index":1863,"title":{},"body":{"modules/NotificationModule.html":{}}}],["service/positive",{"_index":1843,"title":{},"body":{"controllers/NotePositiveInfoController.html":{},"controllers/UpdateUserProfileController.html":{},"modules/UserModule.html":{}}}],["service/profile.service",{"_index":1352,"title":{},"body":{"controllers/ExportUserDataController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/UpdateUserProfileController.html":{},"modules/UserModule.html":{}}}],["service/trigger",{"_index":461,"title":{},"body":{"controllers/AddTimeSlotController.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"modules/TriggerTimeSlotModule.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["service/unconfirmed",{"_index":846,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{},"controllers/UpdateUserProfileController.html":{},"modules/UserModule.html":{}}}],["service/user.service",{"_index":839,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{},"controllers/DeleteUserController.html":{},"controllers/GetUserController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"modules/UserModule.html":{}}}],["set",{"_index":349,"title":{},"body":{"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/PositiveInfoRepository.html":{},"classes/ProfileRepository.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["setparameter('alerttime",{"_index":2189,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["setparameter('period",{"_index":2187,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["setparameter('smstime",{"_index":2188,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["setpushnotificationtime",{"_index":2128,"title":{},"body":{"classes/PositiveInfoRepository.html":{},"injectables/SchedulerService.html":{}}}],["setpushnotificationtime(userids",{"_index":2147,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["setregularnotificationtime",{"_index":2321,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["setregularnotificationtime(userids",{"_index":2328,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["setsmstime",{"_index":2129,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["setsmstime(userid",{"_index":2150,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["settings",{"_index":2503,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["settriggertime",{"_index":2130,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["settriggertime(userid",{"_index":2152,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["setupswagger",{"_index":3389,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupswagger(app",{"_index":3391,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shouldproceedpause",{"_index":2498,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["shouldproceedspecific",{"_index":2494,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["shouldstartescalation",{"_index":2426,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["shouldstartescalation(timezone",{"_index":2439,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["shouldstartspecific",{"_index":2474,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["sign.provider",{"_index":1472,"title":{},"body":{"modules/FileModule.html":{}}}],["size",{"_index":328,"title":{},"body":{"classes/AddFileTable1630406751456.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileRO.html":{},"injectables/FileService.html":{},"injectables/NotificationService.html":{}}}],["slot",{"_index":457,"title":{},"body":{"controllers/AddTimeSlotController.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"interfaces/ITimeSlotData.html":{},"injectables/SchedulerService.html":{},"entities/TimeSlotDayEntity.html":{},"classes/TimeSlotDayRepository.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotIdRO.html":{},"modules/TriggerTimeSlotModule.html":{},"injectables/TriggerTimeSlotService.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["slot.active",{"_index":2803,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["slot.controller",{"_index":2740,"title":{},"body":{"modules/TriggerTimeSlotModule.html":{}}}],["slot.controller.ts",{"_index":452,"title":{},"body":{"controllers/AddTimeSlotController.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["slot.controller.ts:33",{"_index":1092,"title":{},"body":{"controllers/DeleteTimeSlotController.html":{}}}],["slot.controller.ts:38",{"_index":459,"title":{},"body":{"controllers/AddTimeSlotController.html":{}}}],["slot.controller.ts:45",{"_index":2913,"title":{},"body":{"controllers/UpdateTimeSlotController.html":{}}}],["slot.dto",{"_index":465,"title":{},"body":{"controllers/AddTimeSlotController.html":{},"injectables/TriggerTimeSlotService.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateTimeSlotDTO.html":{}}}],["slot.dto.ts",{"_index":481,"title":{},"body":{"classes/AddTimeSlotDTO.html":{},"classes/UpdateTimeSlotDTO.html":{}}}],["slot.dto.ts:10",{"_index":487,"title":{},"body":{"classes/AddTimeSlotDTO.html":{}}}],["slot.dto.ts:13",{"_index":489,"title":{},"body":{"classes/AddTimeSlotDTO.html":{}}}],["slot.dto.ts:16",{"_index":488,"title":{},"body":{"classes/AddTimeSlotDTO.html":{}}}],["slot.dto.ts:25",{"_index":485,"title":{},"body":{"classes/AddTimeSlotDTO.html":{}}}],["slot.dto.ts:7",{"_index":484,"title":{},"body":{"classes/AddTimeSlotDTO.html":{}}}],["slot.entity",{"_index":470,"title":{},"body":{"controllers/AddTimeSlotController.html":{},"injectables/ExportService.html":{},"entities/TimeSlotDayEntity.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["slot.entity.ts",{"_index":2669,"title":{},"body":{"entities/TimeSlotEntity.html":{}}}],["slot.entity.ts:16",{"_index":2676,"title":{},"body":{"entities/TimeSlotEntity.html":{}}}],["slot.entity.ts:19",{"_index":2680,"title":{},"body":{"entities/TimeSlotEntity.html":{}}}],["slot.entity.ts:22",{"_index":2670,"title":{},"body":{"entities/TimeSlotEntity.html":{}}}],["slot.entity.ts:25",{"_index":2675,"title":{},"body":{"entities/TimeSlotEntity.html":{}}}],["slot.entity.ts:28",{"_index":2678,"title":{},"body":{"entities/TimeSlotEntity.html":{}}}],["slot.entity.ts:31",{"_index":2677,"title":{},"body":{"entities/TimeSlotEntity.html":{}}}],["slot.entity.ts:34",{"_index":2671,"title":{},"body":{"entities/TimeSlotEntity.html":{}}}],["slot.entity.ts:38",{"_index":2679,"title":{},"body":{"entities/TimeSlotEntity.html":{}}}],["slot.entity.ts:43",{"_index":2674,"title":{},"body":{"entities/TimeSlotEntity.html":{}}}],["slot.length",{"_index":2458,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["slot.mapper",{"_index":2916,"title":{},"body":{"controllers/UpdateTimeSlotController.html":{}}}],["slot.module",{"_index":593,"title":{},"body":{"modules/AppModule.html":{},"modules/MessageModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/UserModule.html":{}}}],["slot.module.ts",{"_index":2735,"title":{},"body":{"modules/TriggerTimeSlotModule.html":{}}}],["slot.now",{"_index":2460,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["slot.repository",{"_index":1238,"title":{},"body":{"injectables/ExportService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["slot.repository.ts",{"_index":2691,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["slot.repository.ts:17",{"_index":2698,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["slot.repository.ts:25",{"_index":2700,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["slot.repository.ts:54",{"_index":2697,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["slot.repository.ts:7",{"_index":2695,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["slot.repository.ts:9",{"_index":2699,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["slot.ro",{"_index":1633,"title":{},"body":{"controllers/GetListOfTimeSlotsController.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["slot.ro.ts",{"_index":2683,"title":{},"body":{"classes/TimeSlotRO.html":{}}}],["slot.ro.ts:12",{"_index":2684,"title":{},"body":{"classes/TimeSlotRO.html":{}}}],["slot.ro.ts:16",{"_index":2687,"title":{},"body":{"classes/TimeSlotRO.html":{}}}],["slot.ro.ts:20",{"_index":2690,"title":{},"body":{"classes/TimeSlotRO.html":{}}}],["slot.ro.ts:24",{"_index":2689,"title":{},"body":{"classes/TimeSlotRO.html":{}}}],["slot.ro.ts:28",{"_index":2686,"title":{},"body":{"classes/TimeSlotRO.html":{}}}],["slot.ro.ts:32",{"_index":2685,"title":{},"body":{"classes/TimeSlotRO.html":{}}}],["slot.ro.ts:8",{"_index":2688,"title":{},"body":{"classes/TimeSlotRO.html":{}}}],["slot.schema",{"_index":467,"title":{},"body":{"controllers/AddTimeSlotController.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["slot.service",{"_index":462,"title":{},"body":{"controllers/AddTimeSlotController.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"injectables/PositiveInfoService.html":{},"injectables/SchedulerService.html":{},"modules/TriggerTimeSlotModule.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["slot.service.ts",{"_index":2744,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["slot.service.ts:104",{"_index":2771,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["slot.service.ts:137",{"_index":2773,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["slot.service.ts:196",{"_index":2767,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["slot.service.ts:32",{"_index":2755,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["slot.service.ts:42",{"_index":2760,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["slot.service.ts:52",{"_index":2758,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["slot.service.ts:67",{"_index":2757,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["slot.service.ts:74",{"_index":2764,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["slot.service.ts:80",{"_index":2765,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["slot.service.ts:84",{"_index":2762,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["slot.service.ts:94",{"_index":2769,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["slot.to",{"_index":2802,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["slot.ts_from",{"_index":2475,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["slot.ts_timezone).slice(11",{"_index":2483,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["slot/controller/add",{"_index":451,"title":{},"body":{"controllers/AddTimeSlotController.html":{}}}],["slot/controller/delete",{"_index":1088,"title":{},"body":{"controllers/DeleteTimeSlotController.html":{}}}],["slot/controller/get",{"_index":1625,"title":{},"body":{"controllers/GetListOfTimeSlotsController.html":{}}}],["slot/controller/update",{"_index":2908,"title":{},"body":{"controllers/UpdateTimeSlotController.html":{}}}],["slot/entity/time",{"_index":1239,"title":{},"body":{"injectables/ExportService.html":{},"entities/TimeSlotDayEntity.html":{},"entities/TimeSlotEntity.html":{}}}],["slot/enum/days",{"_index":1241,"title":{},"body":{"injectables/ExportService.html":{},"injectables/SchedulerService.html":{},"miscellaneous/enumerations.html":{}}}],["slot/repository/time",{"_index":1237,"title":{},"body":{"injectables/ExportService.html":{},"classes/TimeSlotDayRepository.html":{},"classes/TimeSlotRepository.html":{}}}],["slot/request/dto/add",{"_index":480,"title":{},"body":{"classes/AddTimeSlotDTO.html":{}}}],["slot/request/dto/update",{"_index":2921,"title":{},"body":{"classes/UpdateTimeSlotDTO.html":{}}}],["slot/response/time",{"_index":2682,"title":{},"body":{"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{}}}],["slot/service/trigger",{"_index":2202,"title":{},"body":{"injectables/PositiveInfoService.html":{},"injectables/SchedulerService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["slot/trigger",{"_index":592,"title":{},"body":{"modules/AppModule.html":{},"modules/MessageModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/TriggerTimeSlotModule.html":{},"modules/UserModule.html":{}}}],["slot[0",{"_index":2459,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["slots",{"_index":1630,"title":{},"body":{"controllers/GetListOfTimeSlotsController.html":{},"injectables/SchedulerService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["slots.controller",{"_index":2741,"title":{},"body":{"modules/TriggerTimeSlotModule.html":{}}}],["slots.controller.ts",{"_index":1626,"title":{},"body":{"controllers/GetListOfTimeSlotsController.html":{}}}],["slots.controller.ts:34",{"_index":1632,"title":{},"body":{"controllers/GetListOfTimeSlotsController.html":{}}}],["slots.length",{"_index":2788,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["slots.mapper",{"_index":1636,"title":{},"body":{"controllers/GetListOfTimeSlotsController.html":{}}}],["slots[0",{"_index":2789,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["smallint",{"_index":389,"title":{},"body":{"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"entities/PositiveInfoEntity.html":{}}}],["sms",{"_index":1945,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{},"controllers/SendSMSController.html":{},"miscellaneous/enumerations.html":{}}}],["sms.controller",{"_index":1746,"title":{},"body":{"modules/MessageModule.html":{}}}],["sms.controller.ts",{"_index":2623,"title":{},"body":{"controllers/SendSMSController.html":{}}}],["sms.controller.ts:50",{"_index":2627,"title":{},"body":{"controllers/SendSMSController.html":{}}}],["sms.dto",{"_index":2628,"title":{},"body":{"controllers/SendSMSController.html":{}}}],["sms.dto.ts",{"_index":2639,"title":{},"body":{"classes/SendSmsDTO.html":{}}}],["sms.dto.ts:10",{"_index":2640,"title":{},"body":{"classes/SendSmsDTO.html":{}}}],["sms.schema",{"_index":2630,"title":{},"body":{"controllers/SendSMSController.html":{}}}],["sms_time",{"_index":443,"title":{},"body":{"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"entities/PositiveInfoEntity.html":{},"injectables/SchedulerService.html":{}}}],["smsdata",{"_index":2023,"title":{},"body":{"injectables/NotificationService.html":{},"controllers/SendSMSController.html":{}}}],["smstime",{"_index":2103,"title":{},"body":{"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{}}}],["smswithoutreaction",{"_index":2562,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["software",{"_index":3420,"title":{},"body":{"properties.html":{}}}],["sound",{"_index":2569,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileDTO.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDTO.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"modules/AuthorizationModule.html":{},"classes/BasicConsumer.html":{},"controllers/CancelEmergencyMessageController.html":{},"classes/CategoryRO.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ConfirmUserEmailDTO.html":{},"entities/ContactEntity.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactIdRO.html":{},"controllers/ContactListController.html":{},"modules/ContactModule.html":{},"classes/ContactRO.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/Encrypter.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"classes/ExportUserDataDTO.html":{},"interfaces/File.html":{},"entities/FileCategoryEntity.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"entities/FileEntity.html":{},"classes/FileIdRO.html":{},"controllers/FileListController.html":{},"modules/FileModule.html":{},"classes/FileRO.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"classes/GetAccessTokenDTO.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"interfaces/ICognito.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"interfaces/ITimeSlotData.html":{},"interfaces/IUserData.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"controllers/NotePositiveInfoController.html":{},"classes/NotePositiveInfoDTO.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"modules/QueueModule.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"guards/RolesGuard.html":{},"modules/SchedulerModule.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"classes/SendEmergencyMessageDTO.html":{},"controllers/SendSMSController.html":{},"classes/SendSmsDTO.html":{},"controllers/SendTestMessageController.html":{},"classes/SuccessRO.html":{},"entities/TimeSlotDayEntity.html":{},"classes/TimeSlotDayRepository.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TimeSlotRepository.html":{},"classes/TokenRO.html":{},"modules/TriggerTimeSlotModule.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"classes/UpdateContactDTO.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"controllers/UploadFileController.html":{},"interfaces/UploadResult.html":{},"entities/UserEntity.html":{},"classes/UserEntitySubscriber.html":{},"modules/UserModule.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["src/.../category.enum.ts",{"_index":3319,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../days",{"_index":3320,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../dictionary.constant.ts",{"_index":3322,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../lanugage.constant.ts",{"_index":3326,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":3388,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../message",{"_index":3327,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../process.constant.ts",{"_index":3330,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../queue.constant.ts",{"_index":3333,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../template.constant.ts",{"_index":3324,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.entity.ts",{"_index":3334,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.mapper.ts",{"_index":3332,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.module.ts",{"_index":572,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":629,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:5",{"_index":631,"title":{},"body":{"injectables/AppService.html":{}}}],["src/authentication/authenticaiton.module.ts",{"_index":717,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["src/authentication/controller/get",{"_index":1595,"title":{},"body":{"controllers/GetAccessTokenController.html":{}}}],["src/authentication/controller/logout.controller.ts",{"_index":1687,"title":{},"body":{"controllers/LogoutController.html":{}}}],["src/authentication/controller/logout.controller.ts:30",{"_index":1691,"title":{},"body":{"controllers/LogoutController.html":{}}}],["src/authentication/interface/cognito.interface.ts",{"_index":1658,"title":{},"body":{"interfaces/ICognito.html":{}}}],["src/authentication/request/dto/get",{"_index":1620,"title":{},"body":{"classes/GetAccessTokenDTO.html":{}}}],["src/authentication/response/token.ro.ts",{"_index":2727,"title":{},"body":{"classes/TokenRO.html":{}}}],["src/authentication/response/token.ro.ts:8",{"_index":2730,"title":{},"body":{"classes/TokenRO.html":{}}}],["src/authentication/roles.guard.ts",{"_index":2393,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/authentication/roles.guard.ts:5",{"_index":2396,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/authentication/roles.guard.ts:8",{"_index":2399,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/authentication/service/authentication.service.ts",{"_index":635,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/service/authentication.service.ts:12",{"_index":658,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/service/authentication.service.ts:13",{"_index":646,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/service/authentication.service.ts:21",{"_index":651,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/service/authentication.service.ts:38",{"_index":649,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/service/authentication.service.ts:53",{"_index":655,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/service/authentication.service.ts:79",{"_index":653,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/strategy/cognito.strategy.ts",{"_index":796,"title":{},"body":{"injectables/CognitoStrategy.html":{}}}],["src/authentication/strategy/cognito.strategy.ts:9",{"_index":800,"title":{},"body":{"injectables/CognitoStrategy.html":{}}}],["src/authentication/strategy/passport.strategy.ts",{"_index":2062,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["src/authentication/strategy/passport.strategy.ts:10",{"_index":2071,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["src/authentication/strategy/passport.strategy.ts:11",{"_index":2073,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["src/authentication/strategy/passport.strategy.ts:12",{"_index":2076,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["src/authentication/strategy/passport.strategy.ts:13",{"_index":2075,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["src/authentication/strategy/passport.strategy.ts:14",{"_index":2070,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["src/authentication/strategy/passport.strategy.ts:15",{"_index":2067,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["src/authentication/strategy/passport.strategy.ts:34",{"_index":2078,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["src/common/constant/dictionary.constant.ts",{"_index":3347,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/error/custom",{"_index":1047,"title":{},"body":{"classes/CustomError.html":{}}}],["src/common/error/exception.filter.ts",{"_index":1157,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["src/common/error/exception.filter.ts:13",{"_index":1160,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["src/common/error/exception.filter.ts:15",{"_index":1163,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["src/common/helper/encrypter.ts",{"_index":1108,"title":{},"body":{"classes/Encrypter.html":{}}}],["src/common/helper/encrypter.ts:21",{"_index":1120,"title":{},"body":{"classes/Encrypter.html":{}}}],["src/common/helper/encrypter.ts:5",{"_index":1116,"title":{},"body":{"classes/Encrypter.html":{}}}],["src/common/helper/encrypter.ts:7",{"_index":1124,"title":{},"body":{"classes/Encrypter.html":{}}}],["src/common/pipe/numeric",{"_index":2045,"title":{},"body":{"injectables/NumericIdValidationPipe.html":{}}}],["src/common/pipe/validation.pipe.ts",{"_index":3256,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/common/pipe/validation.pipe.ts:12",{"_index":3260,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/common/pipe/validation.pipe.ts:8",{"_index":3258,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/common/response/error.ro.ts",{"_index":1145,"title":{},"body":{"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{}}}],["src/common/response/error.ro.ts:11",{"_index":1155,"title":{},"body":{"classes/ErrorRO.html":{}}}],["src/common/response/error.ro.ts:15",{"_index":1153,"title":{},"body":{"classes/ErrorRO.html":{}}}],["src/common/response/error.ro.ts:19",{"_index":1152,"title":{},"body":{"classes/ErrorRO.html":{}}}],["src/common/response/error.ro.ts:23",{"_index":1151,"title":{},"body":{"classes/ErrorRO.html":{}}}],["src/common/response/error.ro.ts:30",{"_index":1147,"title":{},"body":{"classes/ErrorMessageRO.html":{}}}],["src/common/response/error.ro.ts:7",{"_index":1154,"title":{},"body":{"classes/ErrorRO.html":{}}}],["src/common/response/success.ro.ts",{"_index":2655,"title":{},"body":{"classes/SuccessRO.html":{}}}],["src/common/response/success.ro.ts:8",{"_index":2656,"title":{},"body":{"classes/SuccessRO.html":{}}}],["src/contact/contact.module.ts",{"_index":947,"title":{},"body":{"modules/ContactModule.html":{}}}],["src/contact/controller/add",{"_index":122,"title":{},"body":{"controllers/AddContactController.html":{}}}],["src/contact/controller/contact",{"_index":928,"title":{},"body":{"controllers/ContactListController.html":{}}}],["src/contact/controller/delete",{"_index":1082,"title":{},"body":{"controllers/DeleteContactController-1.html":{}}}],["src/contact/controller/update",{"_index":2886,"title":{},"body":{"controllers/UpdateContactController.html":{}}}],["src/contact/entity/contact.entity",{"_index":896,"title":{},"body":{"classes/ContactEntitySubscriber.html":{}}}],["src/contact/entity/contact.entity.ts",{"_index":866,"title":{},"body":{"entities/ContactEntity.html":{}}}],["src/contact/entity/contact.entity.ts:15",{"_index":876,"title":{},"body":{"entities/ContactEntity.html":{}}}],["src/contact/entity/contact.entity.ts:18",{"_index":871,"title":{},"body":{"entities/ContactEntity.html":{}}}],["src/contact/entity/contact.entity.ts:21",{"_index":888,"title":{},"body":{"entities/ContactEntity.html":{}}}],["src/contact/entity/contact.entity.ts:24",{"_index":874,"title":{},"body":{"entities/ContactEntity.html":{}}}],["src/contact/entity/contact.entity.ts:27",{"_index":877,"title":{},"body":{"entities/ContactEntity.html":{}}}],["src/contact/entity/contact.entity.ts:30",{"_index":880,"title":{},"body":{"entities/ContactEntity.html":{}}}],["src/contact/entity/contact.entity.ts:33",{"_index":879,"title":{},"body":{"entities/ContactEntity.html":{}}}],["src/contact/entity/contact.entity.ts:36",{"_index":878,"title":{},"body":{"entities/ContactEntity.html":{}}}],["src/contact/entity/contact.entity.ts:39",{"_index":873,"title":{},"body":{"entities/ContactEntity.html":{}}}],["src/contact/entity/contact.entity.ts:42",{"_index":882,"title":{},"body":{"entities/ContactEntity.html":{}}}],["src/contact/entity/contact.entity.ts:46",{"_index":886,"title":{},"body":{"entities/ContactEntity.html":{}}}],["src/contact/repository/contact.repository.ts",{"_index":973,"title":{},"body":{"classes/ContactRepository.html":{}}}],["src/contact/repository/contact.repository.ts:17",{"_index":981,"title":{},"body":{"classes/ContactRepository.html":{}}}],["src/contact/repository/contact.repository.ts:7",{"_index":978,"title":{},"body":{"classes/ContactRepository.html":{}}}],["src/contact/repository/contact.repository.ts:9",{"_index":984,"title":{},"body":{"classes/ContactRepository.html":{}}}],["src/contact/request/dto/add",{"_index":81,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"classes/AddContactDTO.html":{}}}],["src/contact/request/dto/update",{"_index":2879,"title":{},"body":{"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateContactDTO.html":{}}}],["src/contact/response/contact",{"_index":924,"title":{},"body":{"classes/ContactIdRO.html":{}}}],["src/contact/response/contact.ro.ts",{"_index":962,"title":{},"body":{"classes/ContactRO.html":{}}}],["src/contact/response/contact.ro.ts:12",{"_index":967,"title":{},"body":{"classes/ContactRO.html":{}}}],["src/contact/response/contact.ro.ts:16",{"_index":970,"title":{},"body":{"classes/ContactRO.html":{}}}],["src/contact/response/contact.ro.ts:20",{"_index":968,"title":{},"body":{"classes/ContactRO.html":{}}}],["src/contact/response/contact.ro.ts:24",{"_index":969,"title":{},"body":{"classes/ContactRO.html":{}}}],["src/contact/response/contact.ro.ts:28",{"_index":965,"title":{},"body":{"classes/ContactRO.html":{}}}],["src/contact/response/contact.ro.ts:32",{"_index":963,"title":{},"body":{"classes/ContactRO.html":{}}}],["src/contact/response/contact.ro.ts:36",{"_index":964,"title":{},"body":{"classes/ContactRO.html":{}}}],["src/contact/response/contact.ro.ts:40",{"_index":971,"title":{},"body":{"classes/ContactRO.html":{}}}],["src/contact/response/contact.ro.ts:8",{"_index":966,"title":{},"body":{"classes/ContactRO.html":{}}}],["src/contact/service/contact.service.ts",{"_index":994,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/service/contact.service.ts:22",{"_index":1003,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/service/contact.service.ts:29",{"_index":1014,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/service/contact.service.ts:33",{"_index":1008,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/service/contact.service.ts:39",{"_index":1012,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/service/contact.service.ts:57",{"_index":1010,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/service/contact.service.ts:61",{"_index":1005,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/service/contact.service.ts:68",{"_index":1016,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/contact/service/contact.service.ts:83",{"_index":1019,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/file/constant/dictionary.constant.ts",{"_index":3353,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/file/controller/delete",{"_index":1062,"title":{},"body":{"controllers/DeleteContactController.html":{}}}],["src/file/controller/file",{"_index":1446,"title":{},"body":{"controllers/FileListController.html":{}}}],["src/file/controller/upload",{"_index":3067,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["src/file/entity/file",{"_index":1385,"title":{},"body":{"entities/FileCategoryEntity.html":{}}}],["src/file/entity/file.entity.ts",{"_index":1426,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/file/entity/file.entity.ts:16",{"_index":1432,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/file/entity/file.entity.ts:19",{"_index":1441,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/file/entity/file.entity.ts:22",{"_index":1430,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/file/entity/file.entity.ts:25",{"_index":1436,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/file/entity/file.entity.ts:28",{"_index":1433,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/file/entity/file.entity.ts:31",{"_index":1435,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/file/entity/file.entity.ts:34",{"_index":1438,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/file/entity/file.entity.ts:37",{"_index":1431,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/file/entity/file.entity.ts:41",{"_index":1440,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/file/entity/file.entity.ts:48",{"_index":1429,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/file/enum/category.enum.ts",{"_index":3335,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/file/file.module.ts",{"_index":1462,"title":{},"body":{"modules/FileModule.html":{}}}],["src/file/repository/file",{"_index":1398,"title":{},"body":{"classes/FileCategoryRepository.html":{}}}],["src/file/repository/file.repository.ts",{"_index":1484,"title":{},"body":{"classes/FileRepository.html":{}}}],["src/file/repository/file.repository.ts:17",{"_index":1492,"title":{},"body":{"classes/FileRepository.html":{}}}],["src/file/repository/file.repository.ts:25",{"_index":1489,"title":{},"body":{"classes/FileRepository.html":{}}}],["src/file/repository/file.repository.ts:7",{"_index":1487,"title":{},"body":{"classes/FileRepository.html":{}}}],["src/file/repository/file.repository.ts:9",{"_index":1491,"title":{},"body":{"classes/FileRepository.html":{}}}],["src/file/request/dto/add",{"_index":300,"title":{},"body":{"classes/AddFileDTO.html":{}}}],["src/file/response/category.ro.ts",{"_index":787,"title":{},"body":{"classes/CategoryRO.html":{}}}],["src/file/response/category.ro.ts:13",{"_index":792,"title":{},"body":{"classes/CategoryRO.html":{}}}],["src/file/response/category.ro.ts:9",{"_index":790,"title":{},"body":{"classes/CategoryRO.html":{}}}],["src/file/response/file",{"_index":1444,"title":{},"body":{"classes/FileIdRO.html":{}}}],["src/file/response/file.ro.ts",{"_index":1477,"title":{},"body":{"classes/FileRO.html":{}}}],["src/file/response/file.ro.ts:12",{"_index":1481,"title":{},"body":{"classes/FileRO.html":{}}}],["src/file/response/file.ro.ts:16",{"_index":1482,"title":{},"body":{"classes/FileRO.html":{}}}],["src/file/response/file.ro.ts:20",{"_index":1480,"title":{},"body":{"classes/FileRO.html":{}}}],["src/file/response/file.ro.ts:24",{"_index":1483,"title":{},"body":{"classes/FileRO.html":{}}}],["src/file/response/file.ro.ts:28",{"_index":1478,"title":{},"body":{"classes/FileRO.html":{}}}],["src/file/response/file.ro.ts:8",{"_index":1479,"title":{},"body":{"classes/FileRO.html":{}}}],["src/file/service/file",{"_index":1408,"title":{},"body":{"injectables/FileCategoryService.html":{}}}],["src/file/service/file.service.ts",{"_index":1501,"title":{},"body":{"injectables/FileService.html":{}}}],["src/file/service/file.service.ts:116",{"_index":1521,"title":{},"body":{"injectables/FileService.html":{}}}],["src/file/service/file.service.ts:135",{"_index":1525,"title":{},"body":{"injectables/FileService.html":{}}}],["src/file/service/file.service.ts:156",{"_index":1517,"title":{},"body":{"injectables/FileService.html":{}}}],["src/file/service/file.service.ts:174",{"_index":1515,"title":{},"body":{"injectables/FileService.html":{}}}],["src/file/service/file.service.ts:32",{"_index":1512,"title":{},"body":{"injectables/FileService.html":{}}}],["src/file/service/file.service.ts:43",{"_index":1519,"title":{},"body":{"injectables/FileService.html":{}}}],["src/file/service/file.service.ts:47",{"_index":1516,"title":{},"body":{"injectables/FileService.html":{}}}],["src/file/service/file.service.ts:54",{"_index":1523,"title":{},"body":{"injectables/FileService.html":{}}}],["src/file/service/file.service.ts:68",{"_index":1529,"title":{},"body":{"injectables/FileService.html":{}}}],["src/file/service/file.service.ts:96",{"_index":1527,"title":{},"body":{"injectables/FileService.html":{}}}],["src/file/type/file.ts",{"_index":1380,"title":{},"body":{"interfaces/File.html":{}}}],["src/file/type/upload",{"_index":3102,"title":{},"body":{"interfaces/UploadResult.html":{}}}],["src/main.ts",{"_index":3390,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/message/constant/dictionary.constant.ts",{"_index":3357,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/message/constant/message",{"_index":3373,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/message/controller/cancel",{"_index":764,"title":{},"body":{"controllers/CancelEmergencyMessageController.html":{}}}],["src/message/controller/send",{"_index":2593,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{}}}],["src/message/enum/message",{"_index":3378,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/message/message.module.ts",{"_index":1742,"title":{},"body":{"modules/MessageModule.html":{}}}],["src/message/request/dto/send",{"_index":2615,"title":{},"body":{"classes/SendEmergencyMessageDTO.html":{},"classes/SendSmsDTO.html":{}}}],["src/message/service/mesage.service.ts",{"_index":1752,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/message/service/mesage.service.ts:15",{"_index":1758,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/message/service/mesage.service.ts:7",{"_index":1755,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/migrations/1625563196521",{"_index":549,"title":{},"body":{"classes/AddUserTable1625563196521.html":{}}}],["src/migrations/1625819654567",{"_index":227,"title":{},"body":{"classes/AddContactTable1625819654567.html":{}}}],["src/migrations/1625843279739",{"_index":433,"title":{},"body":{"classes/AddRoleToUserTable1625843279739.html":{}}}],["src/migrations/1626246168913",{"_index":393,"title":{},"body":{"classes/AddProfileTable1626246168913.html":{}}}],["src/migrations/1626332132301",{"_index":369,"title":{},"body":{"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{}}}],["src/migrations/1626421452168",{"_index":540,"title":{},"body":{"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["src/migrations/1626771292134",{"_index":6,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{}}}],["src/migrations/1626779640972",{"_index":276,"title":{},"body":{"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{}}}],["src/migrations/1628507521688",{"_index":72,"title":{},"body":{"classes/AddAutomatedEmergencySettings1628507521688.html":{}}}],["src/migrations/1629364182226",{"_index":509,"title":{},"body":{"classes/AddTimeSlotTable1629364182226.html":{}}}],["src/migrations/1629364845785",{"_index":496,"title":{},"body":{"classes/AddTimeSlotDayTable1629364845785.html":{}}}],["src/migrations/1630406730426",{"_index":288,"title":{},"body":{"classes/AddFileCategoryTableWithValues1630406730426.html":{}}}],["src/migrations/1630406751456",{"_index":314,"title":{},"body":{"classes/AddFileTable1630406751456.html":{}}}],["src/migrations/1632482760947",{"_index":267,"title":{},"body":{"classes/AddDeviceIdToUserTable1632482760947.html":{}}}],["src/migrations/1632733981245",{"_index":423,"title":{},"body":{"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{}}}],["src/migrations/1632807482818",{"_index":381,"title":{},"body":{"classes/AddPositiveInfoTable1632807482818.html":{}}}],["src/migrations/1632979503392",{"_index":415,"title":{},"body":{"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{}}}],["src/migrations/1632995635641",{"_index":441,"title":{},"body":{"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{}}}],["src/migrations/1633099510340",{"_index":532,"title":{},"body":{"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{}}}],["src/migrations/1633335269397",{"_index":353,"title":{},"body":{"classes/AddLocationToPositiveInfoTable1633335269397.html":{}}}],["src/migrations/1633344018695",{"_index":3266,"title":{},"body":{"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["src/migrations/1633500446819",{"_index":1817,"title":{},"body":{"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{}}}],["src/migrations/1634809042779",{"_index":333,"title":{},"body":{"classes/AddLimitToFileCategoryTable1634809042779.html":{}}}],["src/migrations/1635501555344",{"_index":403,"title":{},"body":{"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{}}}],["src/migrations/1650544527662",{"_index":58,"title":{},"body":{"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{}}}],["src/migrations/1651485257652",{"_index":361,"title":{},"body":{"classes/AddLocationUrlToProfile1651485257652.html":{}}}],["src/migrations/1651485422345",{"_index":2385,"title":{},"body":{"classes/RemoveLocationFromPositiveInfo1651485422345.html":{}}}],["src/migrations/1651485422365",{"_index":2378,"title":{},"body":{"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{}}}],["src/migrations/1651485422366",{"_index":525,"title":{},"body":{"classes/AddTimezoneToSlots1651485422366.html":{}}}],["src/migrations/1651485422367",{"_index":518,"title":{},"body":{"classes/AddTimezoneToProfile1651485422367.html":{}}}],["src/notification/constant/dictionary.constant.ts",{"_index":3359,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/notification/constant/lanugage.constant.ts",{"_index":3370,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/notification/constant/template.constant.ts",{"_index":3361,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/notification/notification.module.ts",{"_index":1862,"title":{},"body":{"modules/NotificationModule.html":{}}}],["src/notification/service/notification.service.ts",{"_index":1869,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/notification/service/notification.service.ts:138",{"_index":1892,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/notification/service/notification.service.ts:174",{"_index":1887,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/notification/service/notification.service.ts:195",{"_index":1895,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/notification/service/notification.service.ts:224",{"_index":1899,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/notification/service/notification.service.ts:279",{"_index":1901,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/notification/service/notification.service.ts:37",{"_index":1883,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/notification/service/notification.service.ts:53",{"_index":1897,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/notification/service/notification.service.ts:64",{"_index":1885,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/notification/service/notification.service.ts:94",{"_index":1903,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/queue/constant/process.constant.ts",{"_index":3383,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/queue/constant/queue.constant.ts",{"_index":3385,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/queue/consumer/basic.consumer.ts",{"_index":738,"title":{},"body":{"classes/BasicConsumer.html":{}}}],["src/queue/consumer/basic.consumer.ts:13",{"_index":747,"title":{},"body":{"classes/BasicConsumer.html":{}}}],["src/queue/consumer/basic.consumer.ts:16",{"_index":751,"title":{},"body":{"classes/BasicConsumer.html":{}}}],["src/queue/consumer/basic.consumer.ts:19",{"_index":754,"title":{},"body":{"classes/BasicConsumer.html":{}}}],["src/queue/consumer/basic.consumer.ts:6",{"_index":743,"title":{},"body":{"classes/BasicConsumer.html":{}}}],["src/queue/consumer/message.consumer.ts",{"_index":1704,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["src/queue/consumer/message.consumer.ts:10",{"_index":1709,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["src/queue/consumer/message.consumer.ts:16",{"_index":1713,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["src/queue/consumer/message.consumer.ts:24",{"_index":1719,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["src/queue/consumer/message.consumer.ts:29",{"_index":1716,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["src/queue/queue.module.ts",{"_index":2365,"title":{},"body":{"modules/QueueModule.html":{}}}],["src/queue/service/message.service.ts",{"_index":1784,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["src/queue/service/message.service.ts:16",{"_index":1790,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["src/queue/service/message.service.ts:23",{"_index":1800,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["src/queue/service/message.service.ts:32",{"_index":1802,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["src/queue/service/message.service.ts:39",{"_index":1797,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["src/scheduler/scheduler.module.ts",{"_index":2410,"title":{},"body":{"modules/SchedulerModule.html":{}}}],["src/scheduler/scheduler.service.ts",{"_index":2417,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/scheduler/scheduler.service.ts:135",{"_index":2430,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/scheduler/scheduler.service.ts:142",{"_index":2435,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/scheduler/scheduler.service.ts:18",{"_index":2428,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/scheduler/scheduler.service.ts:186",{"_index":2438,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/scheduler/scheduler.service.ts:209",{"_index":2434,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/scheduler/scheduler.service.ts:244",{"_index":2442,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/scheduler/scheduler.service.ts:296",{"_index":2440,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/scheduler/scheduler.service.ts:32",{"_index":2432,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/scheduler/scheduler.service.ts:82",{"_index":2431,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/scheduler/scheduler.service.ts:89",{"_index":2436,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/trigger",{"_index":449,"title":{},"body":{"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDTO.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"entities/TimeSlotDayEntity.html":{},"classes/TimeSlotDayRepository.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TimeSlotRepository.html":{},"modules/TriggerTimeSlotModule.html":{},"injectables/TriggerTimeSlotService.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateTimeSlotDTO.html":{},"miscellaneous/enumerations.html":{}}}],["src/user/controller/confirm",{"_index":830,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{}}}],["src/user/controller/delete",{"_index":1098,"title":{},"body":{"controllers/DeleteUserController.html":{}}}],["src/user/controller/export",{"_index":1343,"title":{},"body":{"controllers/ExportUserDataController.html":{}}}],["src/user/controller/get",{"_index":1642,"title":{},"body":{"controllers/GetUserController.html":{}}}],["src/user/controller/note",{"_index":1828,"title":{},"body":{"controllers/NotePositiveInfoController.html":{}}}],["src/user/controller/send",{"_index":2642,"title":{},"body":{"controllers/SendTestMessageController.html":{}}}],["src/user/controller/update",{"_index":2933,"title":{},"body":{"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["src/user/entity/positive",{"_index":2099,"title":{},"body":{"entities/PositiveInfoEntity.html":{}}}],["src/user/entity/profile.entity",{"_index":2268,"title":{},"body":{"classes/ProfileEntitySubscriber.html":{}}}],["src/user/entity/profile.entity.ts",{"_index":2217,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:102",{"_index":2248,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:108",{"_index":2247,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:111",{"_index":2234,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:114",{"_index":2243,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:117",{"_index":2237,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:120",{"_index":2259,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:123",{"_index":2229,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:126",{"_index":2261,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:129",{"_index":2254,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:133",{"_index":2263,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:15",{"_index":2235,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:18",{"_index":2264,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:21",{"_index":2241,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:24",{"_index":2257,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:27",{"_index":2244,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:30",{"_index":2242,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:33",{"_index":2226,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:36",{"_index":2230,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:39",{"_index":2245,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:42",{"_index":2246,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:45",{"_index":2256,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:48",{"_index":2240,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:51",{"_index":2236,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:54",{"_index":2227,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:57",{"_index":2260,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:60",{"_index":2231,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:63",{"_index":2238,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:66",{"_index":2262,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:69",{"_index":2233,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:72",{"_index":2252,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:75",{"_index":2228,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:78",{"_index":2255,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:84",{"_index":2251,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:90",{"_index":2250,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/profile.entity.ts:96",{"_index":2249,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/user/entity/unconfirmed",{"_index":2835,"title":{},"body":{"classes/UnconfirmedEmailEntitySubscriber.html":{}}}],["src/user/entity/unconfirmed_email.entity.ts",{"_index":2825,"title":{},"body":{"entities/UnconfirmedEmailEntity.html":{}}}],["src/user/entity/unconfirmed_email.entity.ts:14",{"_index":2829,"title":{},"body":{"entities/UnconfirmedEmailEntity.html":{}}}],["src/user/entity/unconfirmed_email.entity.ts:17",{"_index":2832,"title":{},"body":{"entities/UnconfirmedEmailEntity.html":{}}}],["src/user/entity/unconfirmed_email.entity.ts:20",{"_index":2828,"title":{},"body":{"entities/UnconfirmedEmailEntity.html":{}}}],["src/user/entity/unconfirmed_email.entity.ts:23",{"_index":2826,"title":{},"body":{"entities/UnconfirmedEmailEntity.html":{}}}],["src/user/entity/unconfirmed_email.entity.ts:26",{"_index":2827,"title":{},"body":{"entities/UnconfirmedEmailEntity.html":{}}}],["src/user/entity/unconfirmed_email.entity.ts:30",{"_index":2831,"title":{},"body":{"entities/UnconfirmedEmailEntity.html":{}}}],["src/user/entity/user.entity",{"_index":3126,"title":{},"body":{"classes/UserEntitySubscriber.html":{}}}],["src/user/entity/user.entity.ts",{"_index":3104,"title":{},"body":{"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["src/user/entity/user.entity.ts:24",{"_index":3113,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/user/entity/user.entity.ts:27",{"_index":3119,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/user/entity/user.entity.ts:30",{"_index":3109,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/user/entity/user.entity.ts:33",{"_index":3108,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/user/entity/user.entity.ts:36",{"_index":3107,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/user/entity/user.entity.ts:39",{"_index":3121,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/user/entity/user.entity.ts:42",{"_index":3118,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/user/entity/user.entity.ts:45",{"_index":3116,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/user/entity/user.entity.ts:48",{"_index":3106,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/user/entity/user.entity.ts:51",{"_index":3111,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/user/entity/user.entity.ts:57",{"_index":3120,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/user/mapper/user.mapper.ts",{"_index":3384,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/user/repository/positive",{"_index":2119,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["src/user/repository/profile.repository.ts",{"_index":2318,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["src/user/repository/profile.repository.ts:17",{"_index":2327,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["src/user/repository/profile.repository.ts:52",{"_index":2329,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["src/user/repository/profile.repository.ts:62",{"_index":2325,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["src/user/repository/profile.repository.ts:7",{"_index":2323,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["src/user/repository/profile.repository.ts:9",{"_index":2326,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["src/user/repository/unconfirmed",{"_index":2845,"title":{},"body":{"classes/UnconfirmedEmailRepository.html":{}}}],["src/user/repository/user.repository.ts",{"_index":3200,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/repository/user.repository.ts:17",{"_index":3206,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/repository/user.repository.ts:25",{"_index":3208,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/repository/user.repository.ts:7",{"_index":3204,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/repository/user.repository.ts:9",{"_index":3209,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/request/dto/confirm",{"_index":861,"title":{},"body":{"classes/ConfirmUserEmailDTO.html":{}}}],["src/user/request/dto/export",{"_index":1375,"title":{},"body":{"classes/ExportUserDataDTO.html":{}}}],["src/user/request/dto/note",{"_index":1853,"title":{},"body":{"classes/NotePositiveInfoDTO.html":{}}}],["src/user/request/dto/update",{"_index":2928,"title":{},"body":{"classes/UpdateUserDeviceIdDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{}}}],["src/user/response/profile.ro.ts",{"_index":2280,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:102",{"_index":2313,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:107",{"_index":2289,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:111",{"_index":2306,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:115",{"_index":2284,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:119",{"_index":2307,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:123",{"_index":2290,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:127",{"_index":2297,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:131",{"_index":2292,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:135",{"_index":2310,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:139",{"_index":2305,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:14",{"_index":2314,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:143",{"_index":2304,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:147",{"_index":2303,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:151",{"_index":2302,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:155",{"_index":2301,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:159",{"_index":2285,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:163",{"_index":2312,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:19",{"_index":2282,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:24",{"_index":2295,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:29",{"_index":2309,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:34",{"_index":2296,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:41",{"_index":2298,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:48",{"_index":2286,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:53",{"_index":2299,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:58",{"_index":2300,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:63",{"_index":2287,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:70",{"_index":2308,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:75",{"_index":2294,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:82",{"_index":2291,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:86",{"_index":2283,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:90",{"_index":2311,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:94",{"_index":2288,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/profile.ro.ts:98",{"_index":2293,"title":{},"body":{"classes/ProfileRO.html":{}}}],["src/user/response/user.ro.ts",{"_index":3155,"title":{},"body":{"classes/UserRO.html":{}}}],["src/user/response/user.ro.ts:11",{"_index":3161,"title":{},"body":{"classes/UserRO.html":{}}}],["src/user/response/user.ro.ts:18",{"_index":3163,"title":{},"body":{"classes/UserRO.html":{}}}],["src/user/response/user.ro.ts:22",{"_index":3159,"title":{},"body":{"classes/UserRO.html":{}}}],["src/user/response/user.ro.ts:34",{"_index":3160,"title":{},"body":{"classes/UserRO.html":{}}}],["src/user/response/user.ro.ts:41",{"_index":3162,"title":{},"body":{"classes/UserRO.html":{}}}],["src/user/service/export.service.ts",{"_index":1193,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/user/service/export.service.ts:101",{"_index":1210,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/user/service/export.service.ts:131",{"_index":1218,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/user/service/export.service.ts:166",{"_index":1222,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/user/service/export.service.ts:195",{"_index":1213,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/user/service/export.service.ts:226",{"_index":1208,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/user/service/export.service.ts:26",{"_index":1206,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/user/service/export.service.ts:44",{"_index":1225,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/user/service/export.service.ts:71",{"_index":1216,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/user/service/positive",{"_index":2190,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["src/user/service/profile.service.ts",{"_index":2348,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/user/service/profile.service.ts:14",{"_index":2351,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/user/service/profile.service.ts:21",{"_index":2352,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/user/service/profile.service.ts:25",{"_index":2355,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/user/service/unconfirmed",{"_index":2852,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["src/user/service/user.service.ts",{"_index":3211,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:110",{"_index":3221,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:27",{"_index":3217,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:38",{"_index":3219,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:45",{"_index":3223,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:49",{"_index":3224,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:53",{"_index":3222,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:57",{"_index":3226,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:67",{"_index":3228,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:79",{"_index":3232,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:93",{"_index":3230,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.module.ts",{"_index":3135,"title":{},"body":{"modules/UserModule.html":{}}}],["stack",{"_index":1186,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["start:dev",{"_index":3407,"title":{},"body":{"index.html":{}}}],["started",{"_index":2517,"title":{"index.html":{}},"body":{"injectables/SchedulerService.html":{}}}],["static",{"_index":1109,"title":{},"body":{"classes/Encrypter.html":{}}}],["status",{"_index":198,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["status(status",{"_index":1190,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["step",{"_index":2520,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["stoppropagation",{"_index":1929,"title":{},"body":{"injectables/NotificationService.html":{}}}],["storage/${uuid.v4()}.xls",{"_index":1312,"title":{},"body":{"injectables/ExportService.html":{}}}],["strategy",{"_index":805,"title":{},"body":{"injectables/CognitoStrategy.html":{}}}],["strategy/cognito.strategy",{"_index":723,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["strategy/passport.strategy",{"_index":806,"title":{},"body":{"injectables/CognitoStrategy.html":{}}}],["string",{"_index":36,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactAndCheckPhoneDTO.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileDTO.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimeSlotDTO.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"classes/CategoryRO.html":{},"classes/ConfirmUserEmailDTO.html":{},"entities/ContactEntity.html":{},"classes/ContactIdRO.html":{},"classes/ContactRO.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"classes/Encrypter.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"injectables/ExportService.html":{},"classes/ExportUserDataDTO.html":{},"interfaces/File.html":{},"entities/FileCategoryEntity.html":{},"injectables/FileCategoryService.html":{},"entities/FileEntity.html":{},"classes/FileIdRO.html":{},"classes/FileRO.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"classes/GetAccessTokenDTO.html":{},"interfaces/ICognito.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"interfaces/ITimeSlotData.html":{},"interfaces/IUserData.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"injectables/SchedulerService.html":{},"classes/SendEmergencyMessageDTO.html":{},"classes/SendSmsDTO.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotRO.html":{},"classes/TimeSlotRepository.html":{},"classes/TokenRO.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateContactDTO.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"controllers/UploadFileController.html":{},"interfaces/UploadResult.html":{},"entities/UserEntity.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["sub",{"_index":693,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ICognito.html":{}}}],["subscriber",{"_index":2837,"title":{},"body":{"classes/UnconfirmedEmailEntitySubscriber.html":{}}}],["subscriber.ts",{"_index":897,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["subscriber.ts:13",{"_index":3128,"title":{},"body":{"classes/UserEntitySubscriber.html":{}}}],["subscriber.ts:15",{"_index":914,"title":{},"body":{"classes/ContactEntitySubscriber.html":{}}}],["subscriber.ts:17",{"_index":3129,"title":{},"body":{"classes/UserEntitySubscriber.html":{}}}],["subscriber.ts:19",{"_index":909,"title":{},"body":{"classes/ContactEntitySubscriber.html":{}}}],["subscriber.ts:21",{"_index":3127,"title":{},"body":{"classes/UserEntitySubscriber.html":{}}}],["subscriber.ts:23",{"_index":913,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{}}}],["subscriber.ts:27",{"_index":906,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{}}}],["subscriber.ts:31",{"_index":2270,"title":{},"body":{"classes/ProfileEntitySubscriber.html":{}}}],["subscriber.ts:35",{"_index":2269,"title":{},"body":{"classes/ProfileEntitySubscriber.html":{}}}],["subscriber.ts:7",{"_index":904,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["subscriber.ts:9",{"_index":3130,"title":{},"body":{"classes/UserEntitySubscriber.html":{}}}],["subscribers",{"_index":608,"title":{},"body":{"modules/AppModule.html":{}}}],["subscriber{.ts,.js",{"_index":610,"title":{},"body":{"modules/AppModule.html":{}}}],["success",{"_index":785,"title":{},"body":{"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"classes/PassportStrategy.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"classes/SuccessRO.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{}}}],["successro",{"_index":777,"title":{"classes/SuccessRO.html":{}},"body":{"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"classes/SuccessRO.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{}}}],["successro})@apioperation({summary",{"_index":1348,"title":{},"body":{"controllers/ExportUserDataController.html":{},"controllers/NotePositiveInfoController.html":{}}}],["successro})@apiresponse({status",{"_index":770,"title":{},"body":{"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{}}}],["summary",{"_index":199,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["sunday",{"_index":3346,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["super",{"_index":808,"title":{},"body":{"injectables/CognitoStrategy.html":{},"classes/CustomError.html":{},"injectables/SchedulerService.html":{}}}],["super(new",{"_index":1730,"title":{},"body":{"classes/MessageConsumer.html":{}}}],["support",{"_index":3409,"title":{},"body":{"modules.html":{}}}],["surname",{"_index":92,"title":{},"body":{"classes/AddContactAndCheckPhoneDTO.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddProfileTable1626246168913.html":{},"entities/ContactEntity.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactRO.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"classes/UpdateContactDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{},"miscellaneous/enumerations.html":{}}}],["svg",{"_index":3410,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":3312,"title":{},"body":{"dependencies.html":{}}}],["system",{"_index":2489,"title":{},"body":{"injectables/SchedulerService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["table",{"_index":235,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{}}}],["tablecolumn",{"_index":25,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["tableforeignkey",{"_index":237,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["tableindex",{"_index":236,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["tablename",{"_index":14,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"injectables/ExportService.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["take",{"_index":1834,"title":{},"body":{"controllers/NotePositiveInfoController.html":{}}}],["template",{"_index":1357,"title":{},"body":{"controllers/ExportUserDataController.html":{},"injectables/NotificationService.html":{},"controllers/UpdateUserProfileController.html":{}}}],["templateid",{"_index":1893,"title":{},"body":{"injectables/NotificationService.html":{}}}],["templatelanguage",{"_index":1969,"title":{},"body":{"injectables/NotificationService.html":{}}}],["test",{"_index":605,"title":{},"body":{"modules/AppModule.html":{},"classes/ExceptionsFilter.html":{},"controllers/SendTestMessageController.html":{},"modules/UserModule.html":{}}}],["test/interface/contact",{"_index":1661,"title":{},"body":{"interfaces/IContactData.html":{}}}],["test/interface/profile",{"_index":1664,"title":{},"body":{"interfaces/IProfileData.html":{}}}],["test/interface/time",{"_index":1680,"title":{},"body":{"interfaces/ITimeSlotData.html":{}}}],["test/interface/user",{"_index":1686,"title":{},"body":{"interfaces/IUserData.html":{}}}],["text",{"_index":1125,"title":{},"body":{"classes/Encrypter.html":{},"controllers/UploadFileController.html":{}}}],["then((data",{"_index":989,"title":{},"body":{"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"classes/PositiveInfoRepository.html":{},"classes/ProfileRepository.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"classes/UserRepository.html":{}}}],["then((res",{"_index":671,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["then((result",{"_index":823,"title":{},"body":{"injectables/CognitoStrategy.html":{},"injectables/MessageService.html":{},"injectables/NotificationService.html":{}}}],["then(async",{"_index":1942,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.auth",{"_index":2084,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["this.authenticationservice.gettokens",{"_index":1615,"title":{},"body":{"controllers/GetAccessTokenController.html":{}}}],["this.authservice.getuserattributes",{"_index":816,"title":{},"body":{"injectables/CognitoStrategy.html":{}}}],["this.categories",{"_index":347,"title":{},"body":{"classes/AddLimitToFileCategoryTable1634809042779.html":{}}}],["this.cloudfrontsigner.getsignedurl",{"_index":1550,"title":{},"body":{"injectables/FileService.html":{}}}],["this.cognito.admindeleteuser",{"_index":3251,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cognito.adminupdateuserattributes",{"_index":2874,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["this.cognito.initiateauth",{"_index":704,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.cognito.listusers",{"_index":689,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.column",{"_index":69,"title":{},"body":{"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["this.columname",{"_index":1826,"title":{},"body":{"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{}}}],["this.config",{"_index":2017,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{}}}],["this.config.get",{"_index":1956,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{}}}],["this.config.get(\"backend.url",{"_index":2560,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.config.get(\"firebase.notification.message.alert",{"_index":2567,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.config.get(\"firebase.notification.message.regular",{"_index":2525,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.config.get(\"firebase.notification.sound",{"_index":2570,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.config.get(\"firebase.notification.title",{"_index":2524,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.config.get(\"mailjet.email",{"_index":1967,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.config.get(\"mailjet.username",{"_index":1968,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.config.get(\"queue.sendaftertime.repeattryingtosendmessage",{"_index":1937,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.config.get(\"twilio.phonenumber",{"_index":1927,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.config.get('authorization.clientid",{"_index":710,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.config.get('authorization.userpoolid",{"_index":691,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UnconfirmedEmailService.html":{},"injectables/UserService.html":{}}}],["this.config.get('backend.url",{"_index":3034,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["this.config.get('cloudfrontsigner.url')}/${key",{"_index":1551,"title":{},"body":{"injectables/FileService.html":{}}}],["this.config.get('s3.bucket",{"_index":1575,"title":{},"body":{"injectables/FileService.html":{}}}],["this.config.get(`queue.sendaftertime.${data.messagetype",{"_index":2043,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.config.get(`sms.${data.messagetype",{"_index":2637,"title":{},"body":{"controllers/SendSMSController.html":{}}}],["this.connection.manager.transaction(async",{"_index":2808,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["this.contactrepository",{"_index":1035,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactrepository.delete(contactid).catch((error",{"_index":1038,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactrepository.findmanybyparams",{"_index":1031,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactrepository.findonebyparams",{"_index":1037,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactrepository.metadata.tablename",{"_index":1274,"title":{},"body":{"injectables/ExportService.html":{}}}],["this.contactservice.deletecontact(contact.id",{"_index":1086,"title":{},"body":{"controllers/DeleteContactController-1.html":{}}}],["this.contactservice.findactivecontactsbyuserid",{"_index":2607,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{}}}],["this.contactservice.findbyid(contactid",{"_index":2907,"title":{},"body":{"controllers/UpdateContactController.html":{}}}],["this.contactservice.findbyidanduseridorfail",{"_index":1085,"title":{},"body":{"controllers/DeleteContactController-1.html":{},"controllers/UpdateContactController.html":{}}}],["this.contactservice.findcontactsbyuserid(user.id",{"_index":941,"title":{},"body":{"controllers/ContactListController.html":{}}}],["this.contactservice.findcontactsbyuserid(userid",{"_index":1315,"title":{},"body":{"injectables/ExportService.html":{}}}],["this.contactservice.savecontact",{"_index":211,"title":{},"body":{"controllers/AddContactController.html":{}}}],["this.contactservice.savecontact(user.id",{"_index":218,"title":{},"body":{"controllers/AddContactController.html":{}}}],["this.contactservice.updatecontact(contact",{"_index":2906,"title":{},"body":{"controllers/UpdateContactController.html":{}}}],["this.createquerybuilder",{"_index":2179,"title":{},"body":{"classes/PositiveInfoRepository.html":{},"classes/ProfileRepository.html":{}}}],["this.createquerybuilder('file",{"_index":1495,"title":{},"body":{"classes/FileRepository.html":{}}}],["this.createquerybuilder('positiveinfo",{"_index":2158,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["this.createquerybuilder('profile",{"_index":2332,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["this.createquerybuilder('ts",{"_index":2704,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["this.encryptioncolumns",{"_index":922,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["this.error",{"_index":1061,"title":{},"body":{"classes/CustomError.html":{}}}],["this.exportservice.exportdataasbase64(userid",{"_index":1973,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.fail(e",{"_index":2095,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["this.filecategoryrepository",{"_index":1424,"title":{},"body":{"injectables/FileCategoryService.html":{}}}],["this.filecategoryrepository.findmanybyparams",{"_index":1421,"title":{},"body":{"injectables/FileCategoryService.html":{}}}],["this.filecategoryservice.findall",{"_index":1456,"title":{},"body":{"controllers/FileListController.html":{}}}],["this.filecategoryservice.findbycodeorfail",{"_index":3093,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["this.filerepository",{"_index":1583,"title":{},"body":{"injectables/FileService.html":{}}}],["this.filerepository.delete(file.id).catch((error",{"_index":1593,"title":{},"body":{"injectables/FileService.html":{}}}],["this.filerepository.findbycategorycodeanduserid(codes",{"_index":1549,"title":{},"body":{"injectables/FileService.html":{}}}],["this.filerepository.findmanybyparams",{"_index":1318,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/NotificationService.html":{}}}],["this.filerepository.metadata.tablename",{"_index":1301,"title":{},"body":{"injectables/ExportService.html":{}}}],["this.fileservice.deletefile(file",{"_index":1080,"title":{},"body":{"controllers/DeleteContactController.html":{}}}],["this.fileservice.findbycategorycodeanduserid",{"_index":3095,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["this.fileservice.findbyidanduseridorfail",{"_index":1079,"title":{},"body":{"controllers/DeleteContactController.html":{}}}],["this.fileservice.findfilesbyuserid(user.id",{"_index":1457,"title":{},"body":{"controllers/FileListController.html":{}}}],["this.fileservice.getfileasbase64(file.key",{"_index":1988,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.fileservice.getfileurl(file.key",{"_index":1308,"title":{},"body":{"injectables/ExportService.html":{},"controllers/FileListController.html":{}}}],["this.fileservice.savefile",{"_index":3099,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["this.fileservice.uploadfileorfail(filedetails",{"_index":3098,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["this.find",{"_index":2702,"title":{},"body":{"classes/TimeSlotRepository.html":{},"classes/UnconfirmedEmailRepository.html":{}}}],["this.find(params",{"_index":993,"title":{},"body":{"classes/ContactRepository.html":{},"classes/FileCategoryRepository.html":{},"classes/FileRepository.html":{}}}],["this.findbyid(id).then((data",{"_index":3245,"title":{},"body":{"injectables/UserService.html":{}}}],["this.findcontactsbyuserid(userid",{"_index":1032,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.findone",{"_index":2331,"title":{},"body":{"classes/ProfileRepository.html":{},"classes/UnconfirmedEmailRepository.html":{},"classes/UserRepository.html":{}}}],["this.findone(params",{"_index":988,"title":{},"body":{"classes/ContactRepository.html":{},"classes/FileCategoryRepository.html":{},"classes/FileRepository.html":{},"classes/TimeSlotRepository.html":{}}}],["this.firebase",{"_index":1773,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.foreignkeycategoryid",{"_index":331,"title":{},"body":{"classes/AddFileTable1630406751456.html":{}}}],["this.foreignkeyuserid",{"_index":261,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["this.generateandsendcodeconfirmingemailchange",{"_index":3021,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["this.getpem",{"_index":682,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.handlesmsexception(error",{"_index":1960,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.httpcode",{"_index":1060,"title":{},"body":{"classes/CustomError.html":{}}}],["this.informaboutpause(user.deviceid",{"_index":2804,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["this.jwtfromrequest",{"_index":2087,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["this.jwtfromrequest(request",{"_index":2089,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["this.logger",{"_index":756,"title":{},"body":{"classes/BasicConsumer.html":{},"classes/PassportStrategy.html":{}}}],["this.logger.error",{"_index":757,"title":{},"body":{"classes/BasicConsumer.html":{},"classes/ExceptionsFilter.html":{},"injectables/NotificationService.html":{}}}],["this.logger.error(\"exported",{"_index":1974,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.logger.error(`sms",{"_index":1930,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.logger.error(e",{"_index":2094,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["this.logger.error(error",{"_index":992,"title":{},"body":{"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"injectables/ExportService.html":{},"classes/FileCategoryRepository.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"injectables/MessageService.html":{},"classes/PassportStrategy.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["this.logger.error(error.response",{"_index":675,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.logger.error(json.stringify(err",{"_index":825,"title":{},"body":{"injectables/CognitoStrategy.html":{}}}],["this.logger.error(json.stringify(error",{"_index":1582,"title":{},"body":{"injectables/FileService.html":{},"injectables/MessageService-1.html":{},"injectables/NotificationService.html":{}}}],["this.logger.log(`(uid",{"_index":1943,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.logger.log(`[pulse",{"_index":2542,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.logger.log(`[time",{"_index":2514,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.logger.log(`escalation",{"_index":2553,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.logger.log(`positive",{"_index":2213,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["this.logger.log(result?.body",{"_index":1949,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.mailjet",{"_index":2002,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.message",{"_index":1059,"title":{},"body":{"classes/CustomError.html":{}}}],["this.messagequeue",{"_index":1810,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["this.messagequeue.removejobs(`*_${userid}*`).catch((error",{"_index":1813,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["this.messageservice.addjobtoqueue",{"_index":1935,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.messageservice.findjobbyuserid(user.id",{"_index":1656,"title":{},"body":{"controllers/GetUserController.html":{}}}],["this.messageservice.removejobsbyuserid(user.id",{"_index":784,"title":{},"body":{"controllers/CancelEmergencyMessageController.html":{}}}],["this.messageservice.sendmessagetodevice(deviceid",{"_index":2822,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["this.messageservice.sendmessagetodevice(information.user.deviceid",{"_index":2544,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.messageservice.sendmessagetodevice(item.user.deviceid",{"_index":2566,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.messageservice.sendmessagetodevice(profile.deviceid",{"_index":2523,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.messageservice.sendmessagetodevice(slot.u_device_id",{"_index":2486,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.newcolumns",{"_index":53,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{}}}],["this.notificationservice.prepareemaildata",{"_index":1368,"title":{},"body":{"controllers/ExportUserDataController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["this.notificationservice.preparesmsdata",{"_index":2556,"title":{},"body":{"injectables/SchedulerService.html":{},"controllers/SendSMSController.html":{}}}],["this.notificationservice.sendemail",{"_index":1373,"title":{},"body":{"controllers/ExportUserDataController.html":{},"classes/MessageConsumer.html":{},"controllers/UpdateUserProfileController.html":{}}}],["this.notificationservice.sendemergencymessage",{"_index":2577,"title":{},"body":{"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendTestMessageController.html":{}}}],["this.notificationservice.sendsms",{"_index":1734,"title":{},"body":{"classes/MessageConsumer.html":{},"injectables/SchedulerService.html":{},"controllers/SendSMSController.html":{}}}],["this.options?.transform",{"_index":3262,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.pem",{"_index":681,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.phoneutil",{"_index":205,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["this.positiveinfoflowhaschanged",{"_index":3022,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["this.positiveinforepository.clearalerttime(userids",{"_index":2572,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.positiveinforepository.cleareverythingforusers([userid",{"_index":3240,"title":{},"body":{"injectables/UserService.html":{}}}],["this.positiveinforepository.cleareverythingforusers(userids",{"_index":2585,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.positiveinforepository.findbyuserid(id",{"_index":2203,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["this.positiveinforepository.findbyuserid(userid",{"_index":2205,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["this.positiveinforepository.findexpiredinformation",{"_index":2538,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.positiveinforepository.findpushnotificationwithoutreaction",{"_index":2551,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.positiveinforepository.findsmswithoutreaction",{"_index":2563,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.positiveinforepository.postponebyslottime(information.user.id",{"_index":2541,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.positiveinforepository.postponebyslottime(profile.userid",{"_index":2513,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.positiveinforepository.postponebyslottime(slot.u_id",{"_index":2456,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.positiveinforepository.save(data).catch((error",{"_index":2215,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["this.positiveinforepository.setpushnotificationtime",{"_index":2530,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.positiveinforepository.setsmstime",{"_index":1955,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.positiveinfoservice.savepositiveinfo",{"_index":1852,"title":{},"body":{"controllers/NotePositiveInfoController.html":{}}}],["this.positiveinfoservice.savepositiveinfo(logged.id",{"_index":3023,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["this.positiveinfoservice.savepositiveinfo(user.id",{"_index":1701,"title":{},"body":{"controllers/LogoutController.html":{}}}],["this.prepareattachmentwithexporteddata",{"_index":1996,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.preparecontactstoexport(contacts",{"_index":1328,"title":{},"body":{"injectables/ExportService.html":{}}}],["this.prepareemaildata",{"_index":2037,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.prepareemergencymessageattachments",{"_index":1999,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.preparefilestoexport(files",{"_index":1332,"title":{},"body":{"injectables/ExportService.html":{}}}],["this.prepareprofiletoexport(user.profile",{"_index":1324,"title":{},"body":{"injectables/ExportService.html":{}}}],["this.preparesmsdata",{"_index":2025,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.preparetimeslotstoexport(timeslots",{"_index":1330,"title":{},"body":{"injectables/ExportService.html":{}}}],["this.prepareunconfirmedemailstoexport",{"_index":1326,"title":{},"body":{"injectables/ExportService.html":{}}}],["this.prepareusertoexport(user",{"_index":1322,"title":{},"body":{"injectables/ExportService.html":{}}}],["this.profilerepository",{"_index":2360,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profilerepository.disableautomatedemergencyforusers([userid",{"_index":3241,"title":{},"body":{"injectables/UserService.html":{}}}],["this.profilerepository.disableautomatedemergencyforusers(userids",{"_index":2586,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.profilerepository.findbyuserid(userid",{"_index":2359,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profilerepository.findwhereregularnotificationisneeded",{"_index":2509,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.profilerepository.metadata.tablename",{"_index":1263,"title":{},"body":{"injectables/ExportService.html":{}}}],["this.profilerepository.setregularnotificationtime(userids",{"_index":2532,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.profileservice.findbyuserid(logged.id",{"_index":3019,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["this.profileservice.findbyuserid(user.id",{"_index":1366,"title":{},"body":{"controllers/ExportUserDataController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendSMSController.html":{}}}],["this.profileservice.saveprofile",{"_index":1700,"title":{},"body":{"controllers/LogoutController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["this.reflector.get('roles",{"_index":2401,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.s3.deleteobject",{"_index":1590,"title":{},"body":{"injectables/FileService.html":{}}}],["this.s3.getobject",{"_index":1580,"title":{},"body":{"injectables/FileService.html":{}}}],["this.s3.upload",{"_index":1573,"title":{},"body":{"injectables/FileService.html":{}}}],["this.schema",{"_index":2058,"title":{},"body":{"injectables/NumericIdValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["this.sendalertduetolackofpositiveinfo(false",{"_index":2535,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.sendalertduetolackofpositiveinfo(true",{"_index":2506,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.sendemail",{"_index":2041,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.sendpushnotificationduetolackofpositiveinfo",{"_index":2533,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.sendregularpushnotification",{"_index":2504,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.sendsms",{"_index":1939,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.sendsmsduetolackofpositiveinfo(false",{"_index":2534,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.sendsmsduetolackofpositiveinfo(true",{"_index":2505,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.shouldstartescalation(information.user?.profile?.timezone",{"_index":2539,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.shouldstartescalation(profile?.timezone",{"_index":2511,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.success",{"_index":2092,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["this.tablename",{"_index":239,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{}}}],["this.timeslotrepository",{"_index":2783,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["this.timeslotrepository.delete(timeslotid).catch((error",{"_index":2785,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["this.timeslotrepository.findactivetimeslots(userid",{"_index":2787,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["this.timeslotrepository.findactivetimeslots(userid).then((data",{"_index":2793,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["this.timeslotrepository.findbyuserid(userid",{"_index":1316,"title":{},"body":{"injectables/ExportService.html":{}}}],["this.timeslotrepository.findbyuserid(userid).then((data",{"_index":2791,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["this.timeslotrepository.findonebyparams",{"_index":2782,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["this.timeslotrepository.findslotstoinform",{"_index":2790,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["this.timeslotrepository.metadata.tablename",{"_index":1281,"title":{},"body":{"injectables/ExportService.html":{}}}],["this.timeslotservice.deletetimeslot(contact.id",{"_index":1096,"title":{},"body":{"controllers/DeleteTimeSlotController.html":{}}}],["this.timeslotservice.findbyidanduseridorfail",{"_index":1095,"title":{},"body":{"controllers/DeleteTimeSlotController.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["this.timeslotservice.updatetimeslot",{"_index":2919,"title":{},"body":{"controllers/UpdateTimeSlotController.html":{}}}],["this.triggeremergencymessage(false",{"_index":2536,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.triggeremergencymessage(true",{"_index":2507,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.triggertimeslotservice.findbyuseridandperiodstart",{"_index":476,"title":{},"body":{"controllers/AddTimeSlotController.html":{}}}],["this.triggertimeslotservice.findbyuseridorfail",{"_index":1639,"title":{},"body":{"controllers/GetListOfTimeSlotsController.html":{}}}],["this.triggertimeslotservice.getactivetimeslot(information.user.id",{"_index":2540,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.triggertimeslotservice.getactivetimeslot(profile.userid",{"_index":2512,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.triggertimeslotservice.getactivetimeslot(userid",{"_index":2208,"title":{},"body":{"injectables/PositiveInfoService.html":{}}}],["this.triggertimeslotservice.getslotstoinform",{"_index":2455,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.triggertimeslotservice.isactivetimeslot(item.userid",{"_index":2564,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.triggertimeslotservice.savetimeslot(user.id",{"_index":477,"title":{},"body":{"controllers/AddTimeSlotController.html":{}}}],["this.triggertimeslotservice.updatetimeslot",{"_index":478,"title":{},"body":{"controllers/AddTimeSlotController.html":{}}}],["this.twilio.messages",{"_index":1940,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.unconfirmedemailrepository",{"_index":2869,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["this.unconfirmedemailrepository.delete",{"_index":2877,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["this.unconfirmedemailrepository.findbycode(code).then((data",{"_index":2872,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["this.unconfirmedemailrepository.findbyuserid(userid",{"_index":1317,"title":{},"body":{"injectables/ExportService.html":{}}}],["this.unconfirmedemailrepository.metadata.tablename",{"_index":1294,"title":{},"body":{"injectables/ExportService.html":{}}}],["this.unconfirmedemailservice.changeuseremailincognito",{"_index":854,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{}}}],["this.unconfirmedemailservice.findbycodeorfail(data.code",{"_index":853,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{}}}],["this.unconfirmedemailservice.saveunconfirmedemail",{"_index":3028,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["this.updatecontact(user",{"_index":2903,"title":{},"body":{"controllers/UpdateContactController.html":{}}}],["this.updateuserprofile(logged",{"_index":3008,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["this.uploadfile(file).catch((error",{"_index":1571,"title":{},"body":{"injectables/FileService.html":{}}}],["this.userrepository",{"_index":3247,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.delete(user.id).catch((error",{"_index":3254,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findbydeviceid(deviceid",{"_index":3244,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findbyemail(encrypter.encrypt(email",{"_index":3242,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findbyid(id",{"_index":3243,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findbyid(userid",{"_index":1314,"title":{},"body":{"injectables/ExportService.html":{}}}],["this.userrepository.metadata.tablename",{"_index":1254,"title":{},"body":{"injectables/ExportService.html":{}}}],["this.userservice",{"_index":820,"title":{},"body":{"injectables/CognitoStrategy.html":{}}}],["this.userservice.clearpositiveinfo(user.id",{"_index":2610,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{}}}],["this.userservice.deleteuser(user",{"_index":1107,"title":{},"body":{"controllers/DeleteUserController.html":{}}}],["this.userservice.findbydeviceid(deviceid",{"_index":1762,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.userservice.findbyemail(userattributes.email",{"_index":819,"title":{},"body":{"injectables/CognitoStrategy.html":{}}}],["this.userservice.findbyid(params.userid",{"_index":1992,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.userservice.findbyidorfail(logged.id",{"_index":3027,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["this.userservice.findbyidorfail(user.id",{"_index":1655,"title":{},"body":{"controllers/GetUserController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendTestMessageController.html":{}}}],["this.userservice.updateuserdeviceid",{"_index":2946,"title":{},"body":{"controllers/UpdateUserDeviceIdentifierController.html":{}}}],["this.userservice.updateuserdeviceid(user.id",{"_index":1702,"title":{},"body":{"controllers/LogoutController.html":{}}}],["this.userservice.updateuseremail",{"_index":857,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{}}}],["this.verify",{"_index":2083,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["this.verify(request",{"_index":2091,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["throttlermodule",{"_index":580,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":612,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":208,"title":{},"body":{"controllers/AddContactController.html":{},"injectables/ContactService.html":{},"injectables/FileCategoryService.html":{},"injectables/FileService.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"injectables/PositiveInfoService.html":{},"injectables/ProfileService.html":{},"controllers/SendSMSController.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["thursday",{"_index":3342,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["time",{"_index":450,"title":{},"body":{"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDTO.html":{},"modules/AppModule.html":{},"controllers/DeleteTimeSlotController.html":{},"injectables/ExportService.html":{},"controllers/GetListOfTimeSlotsController.html":{},"modules/MessageModule.html":{},"injectables/PositiveInfoService.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"injectables/SchedulerService.html":{},"entities/TimeSlotDayEntity.html":{},"classes/TimeSlotDayRepository.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TimeSlotRepository.html":{},"modules/TriggerTimeSlotModule.html":{},"injectables/TriggerTimeSlotService.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateTimeSlotDTO.html":{},"modules/UserModule.html":{},"miscellaneous/enumerations.html":{}}}],["time(:now2",{"_index":2718,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["time(ts.from",{"_index":2717,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["time(ts.to",{"_index":2720,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["time_slot",{"_index":507,"title":{},"body":{"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToSlots1651485422366.html":{}}}],["time_slot_day",{"_index":500,"title":{},"body":{"classes/AddTimeSlotDayTable1629364845785.html":{}}}],["time_slot_id",{"_index":504,"title":{},"body":{"classes/AddTimeSlotDayTable1629364845785.html":{},"entities/TimeSlotDayEntity.html":{}}}],["time_slot_id'})@manytoone(undefined",{"_index":2661,"title":{},"body":{"entities/TimeSlotDayEntity.html":{}}}],["time_slot_not_found",{"_index":2779,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["time_slot_notification",{"_index":3377,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["timeslot",{"_index":474,"title":{},"body":{"controllers/AddTimeSlotController.html":{},"injectables/ExportService.html":{},"entities/TimeSlotDayEntity.html":{},"injectables/TriggerTimeSlotService.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["timeslot.days",{"_index":1287,"title":{},"body":{"injectables/ExportService.html":{},"entities/TimeSlotDayEntity.html":{}}}],["timeslot.days.map((item",{"_index":2807,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["timeslot.from",{"_index":1285,"title":{},"body":{"injectables/ExportService.html":{}}}],["timeslot.id",{"_index":2811,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["timeslotdayentity",{"_index":2657,"title":{"entities/TimeSlotDayEntity.html":{}},"body":{"entities/TimeSlotDayEntity.html":{},"classes/TimeSlotDayRepository.html":{},"entities/TimeSlotEntity.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["timeslotdayrepository",{"_index":2665,"title":{"classes/TimeSlotDayRepository.html":{}},"body":{"classes/TimeSlotDayRepository.html":{}}}],["timeslotdayrepositoryprovider",{"_index":2739,"title":{},"body":{"modules/TriggerTimeSlotModule.html":{}}}],["timeslotentity",{"_index":468,"title":{"entities/TimeSlotEntity.html":{}},"body":{"controllers/AddTimeSlotController.html":{},"injectables/ExportService.html":{},"entities/TimeSlotDayEntity.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["timeslotid",{"_index":1091,"title":{},"body":{"controllers/DeleteTimeSlotController.html":{},"entities/TimeSlotDayEntity.html":{},"injectables/TriggerTimeSlotService.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["timeslotidro",{"_index":463,"title":{"classes/TimeSlotIdRO.html":{}},"body":{"controllers/AddTimeSlotController.html":{},"classes/TimeSlotIdRO.html":{}}}],["timeslotidro})@apiresponse({status",{"_index":456,"title":{},"body":{"controllers/AddTimeSlotController.html":{}}}],["timeslotkeys",{"_index":1280,"title":{},"body":{"injectables/ExportService.html":{}}}],["timeslotkeys[index",{"_index":1283,"title":{},"body":{"injectables/ExportService.html":{}}}],["timeslotmapper",{"_index":2915,"title":{},"body":{"controllers/UpdateTimeSlotController.html":{}}}],["timeslotmapper(timeslot",{"_index":2920,"title":{},"body":{"controllers/UpdateTimeSlotController.html":{}}}],["timeslotrepository",{"_index":1203,"title":{"classes/TimeSlotRepository.html":{}},"body":{"injectables/ExportService.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["timeslotrepositoryprovider",{"_index":2737,"title":{},"body":{"modules/TriggerTimeSlotModule.html":{}}}],["timeslotro",{"_index":1629,"title":{"classes/TimeSlotRO.html":{}},"body":{"controllers/GetListOfTimeSlotsController.html":{},"classes/TimeSlotRO.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["timeslotro})@apiresponse({status",{"_index":2911,"title":{},"body":{"controllers/UpdateTimeSlotController.html":{}}}],["timeslots",{"_index":1219,"title":{},"body":{"injectables/ExportService.html":{},"controllers/GetListOfTimeSlotsController.html":{}}}],["timeslots.length",{"_index":1329,"title":{},"body":{"injectables/ExportService.html":{}}}],["timeslotservice",{"_index":1094,"title":{},"body":{"controllers/DeleteTimeSlotController.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["timeslotsmapper",{"_index":1634,"title":{},"body":{"controllers/GetListOfTimeSlotsController.html":{}}}],["timeslotsmapper(timeslots",{"_index":1640,"title":{},"body":{"controllers/GetListOfTimeSlotsController.html":{}}}],["timestamp",{"_index":1148,"title":{},"body":{"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{}}}],["timezone",{"_index":483,"title":{},"body":{"classes/AddTimeSlotDTO.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"modules/AppModule.html":{},"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/SchedulerService.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotRO.html":{},"injectables/TriggerTimeSlotService.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{}}}],["tinyint",{"_index":28,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"entities/ProfileEntity.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{}}}],["tips_and_tricks",{"_index":33,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"entities/ProfileEntity.html":{}}}],["tipsandtricks",{"_index":2224,"title":{},"body":{"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{}}}],["title",{"_index":1766,"title":{},"body":{"injectables/MessageService.html":{},"injectables/SchedulerService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["toisostring",{"_index":1272,"title":{},"body":{"injectables/ExportService.html":{}}}],["token",{"_index":650,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CognitoStrategy.html":{},"controllers/GetAccessTokenController.html":{},"classes/PassportStrategy.html":{},"classes/TokenRO.html":{}}}],["token'})@post('token",{"_index":1601,"title":{},"body":{"controllers/GetAccessTokenController.html":{}}}],["token.controller",{"_index":733,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["token.controller.ts",{"_index":1596,"title":{},"body":{"controllers/GetAccessTokenController.html":{}}}],["token.controller.ts:18",{"_index":1602,"title":{},"body":{"controllers/GetAccessTokenController.html":{}}}],["token.dto",{"_index":1604,"title":{},"body":{"controllers/GetAccessTokenController.html":{}}}],["token.dto.ts",{"_index":1621,"title":{},"body":{"classes/GetAccessTokenDTO.html":{}}}],["token.dto.ts:5",{"_index":1622,"title":{},"body":{"classes/GetAccessTokenDTO.html":{}}}],["token.dto.ts:8",{"_index":1623,"title":{},"body":{"classes/GetAccessTokenDTO.html":{}}}],["token.schema",{"_index":1607,"title":{},"body":{"controllers/GetAccessTokenController.html":{}}}],["token?.sub",{"_index":817,"title":{},"body":{"injectables/CognitoStrategy.html":{}}}],["tokenro",{"_index":1609,"title":{"classes/TokenRO.html":{}},"body":{"controllers/GetAccessTokenController.html":{},"classes/TokenRO.html":{}}}],["tokensub",{"_index":656,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tostring",{"_index":2019,"title":{},"body":{"injectables/NotificationService.html":{}}}],["totime",{"_index":2468,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["transform",{"_index":2048,"title":{},"body":{"injectables/NumericIdValidationPipe.html":{},"classes/ProfileRO.html":{},"injectables/ValidationPipe.html":{}}}],["transform(data",{"_index":2050,"title":{},"body":{"injectables/NumericIdValidationPipe.html":{}}}],["transform(obj",{"_index":3259,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":158,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"classes/CategoryRO.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ContactIdRO.html":{},"controllers/ContactListController.html":{},"classes/ContactRO.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"controllers/ExportUserDataController.html":{},"classes/FileIdRO.html":{},"controllers/FileListController.html":{},"classes/FileRO.html":{},"controllers/GetAccessTokenController.html":{},"controllers/NotePositiveInfoController.html":{},"classes/ProfileRO.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"classes/SuccessRO.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TokenRO.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UploadFileController.html":{},"classes/UserRO.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["transformfnparams",{"_index":2315,"title":{},"body":{"classes/ProfileRO.html":{}}}],["trigger",{"_index":591,"title":{},"body":{"modules/AppModule.html":{},"injectables/ExportService.html":{},"controllers/GetUserController.html":{},"modules/MessageModule.html":{},"injectables/PositiveInfoService.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"injectables/SchedulerService.html":{},"modules/UserModule.html":{}}}],["trigger_time",{"_index":534,"title":{},"body":{"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"entities/PositiveInfoEntity.html":{}}}],["triggered",{"_index":2613,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{}}}],["triggeremergencymessage",{"_index":2427,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["triggeremergencymessage(regularpushnotification",{"_index":2441,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["triggertime",{"_index":2104,"title":{},"body":{"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{}}}],["triggertimeslotmodule",{"_index":567,"title":{"modules/TriggerTimeSlotModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MessageModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/TriggerTimeSlotModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["triggertimeslotservice",{"_index":460,"title":{"injectables/TriggerTimeSlotService.html":{}},"body":{"controllers/AddTimeSlotController.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"injectables/PositiveInfoService.html":{},"injectables/SchedulerService.html":{},"modules/TriggerTimeSlotModule.html":{},"injectables/TriggerTimeSlotService.html":{},"controllers/UpdateTimeSlotController.html":{},"overview.html":{}}}],["trim",{"_index":2029,"title":{},"body":{"injectables/NotificationService.html":{}}}],["true",{"_index":32,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileDTO.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimeSlotDTO.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"controllers/CancelEmergencyMessageController.html":{},"classes/CategoryRO.html":{},"classes/ConfirmUserEmailDTO.html":{},"controllers/ContactListController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"classes/MessageConsumer.html":{},"controllers/NotePositiveInfoController.html":{},"classes/NotePositiveInfoDTO.html":{},"injectables/NotificationService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"modules/QueueModule.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendTestMessageController.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotRO.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UpdateTimeSlotDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["true)[0",{"_index":494,"title":{},"body":{"classes/AddTimeSlotDTO.html":{}}}],["true})@apiresponse({status",{"_index":933,"title":{},"body":{"controllers/ContactListController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{}}}],["try",{"_index":1336,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/NotificationService.html":{},"classes/PassportStrategy.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["ttl",{"_index":613,"title":{},"body":{"modules/AppModule.html":{}}}],["tuesday",{"_index":3339,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["twilio",{"_index":1880,"title":{},"body":{"injectables/NotificationService.html":{},"dependencies.html":{}}}],["twilio/lib/rest/api/v2010/account/message",{"_index":1805,"title":{},"body":{"injectables/MessageService-1.html":{},"injectables/NotificationService.html":{}}}],["twiliolibrary",{"_index":1912,"title":{},"body":{"injectables/NotificationService.html":{}}}],["twiliolibrary.twilio",{"_index":1881,"title":{},"body":{"injectables/NotificationService.html":{}}}],["twilioprovider",{"_index":1867,"title":{},"body":{"modules/NotificationModule.html":{}}}],["type",{"_index":20,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactAndCheckPhoneDTO.html":{},"controllers/AddContactController.html":{},"classes/AddContactDTO.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileDTO.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotDTO.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"injectables/AuthenticationService.html":{},"classes/BasicConsumer.html":{},"controllers/CancelEmergencyMessageController.html":{},"classes/CategoryRO.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ConfirmUserEmailDTO.html":{},"entities/ContactEntity.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactIdRO.html":{},"controllers/ContactListController.html":{},"classes/ContactRO.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/CustomError.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"classes/Encrypter.html":{},"classes/ErrorMessageRO.html":{},"classes/ErrorRO.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"classes/ExportUserDataDTO.html":{},"interfaces/File.html":{},"entities/FileCategoryEntity.html":{},"classes/FileCategoryRepository.html":{},"injectables/FileCategoryService.html":{},"entities/FileEntity.html":{},"classes/FileIdRO.html":{},"controllers/FileListController.html":{},"classes/FileRO.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"classes/GetAccessTokenDTO.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"interfaces/ICognito.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"interfaces/ITimeSlotData.html":{},"interfaces/IUserData.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"controllers/NotePositiveInfoController.html":{},"classes/NotePositiveInfoDTO.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"guards/RolesGuard.html":{},"injectables/SchedulerService.html":{},"controllers/SendEmergencyMessageController.html":{},"classes/SendEmergencyMessageDTO.html":{},"controllers/SendSMSController.html":{},"classes/SendSmsDTO.html":{},"controllers/SendTestMessageController.html":{},"classes/SuccessRO.html":{},"entities/TimeSlotDayEntity.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotIdRO.html":{},"classes/TimeSlotRO.html":{},"classes/TimeSlotRepository.html":{},"classes/TokenRO.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"classes/UpdateContactDTO.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateTimeSlotDTO.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"controllers/UploadFileController.html":{},"interfaces/UploadResult.html":{},"entities/UserEntity.html":{},"classes/UserEntitySubscriber.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["type.constant",{"_index":2449,"title":{},"body":{"injectables/SchedulerService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["type.constant.ts",{"_index":3328,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.enum",{"_index":2621,"title":{},"body":{"classes/SendEmergencyMessageDTO.html":{},"classes/SendSmsDTO.html":{}}}],["type.enum.ts",{"_index":3329,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type/file",{"_index":1535,"title":{},"body":{"injectables/FileService.html":{}}}],["type/upload",{"_index":1532,"title":{},"body":{"injectables/FileService.html":{}}}],["typeof",{"_index":1964,"title":{},"body":{"injectables/NotificationService.html":{}}}],["typeorm",{"_index":49,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"entities/ContactEntity.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"entities/FileCategoryEntity.html":{},"classes/FileCategoryRepository.html":{},"entities/FileEntity.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"entities/ProfileEntity.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRepository.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"entities/TimeSlotDayEntity.html":{},"classes/TimeSlotDayRepository.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"entities/UserEntity.html":{},"classes/UserEntitySubscriber.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":574,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule.forroot",{"_index":599,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":575,"title":{},"body":{"modules/AppModule.html":{}}}],["u",{"_index":2706,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["ui",{"_index":3313,"title":{},"body":{"dependencies.html":{}}}],["uid",{"_index":1931,"title":{},"body":{"injectables/NotificationService.html":{}}}],["unconfirmed_email",{"_index":544,"title":{},"body":{"classes/AddUnconfirmedEmailTable1626421452168.html":{}}}],["unconfirmed_email.entity",{"_index":2844,"title":{},"body":{"classes/UnconfirmedEmailEntitySubscriber.html":{},"entities/UserEntity.html":{}}}],["unconfirmed_email_not_found",{"_index":2866,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["unconfirmedemail",{"_index":852,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{},"injectables/ExportService.html":{},"controllers/UpdateUserProfileController.html":{},"entities/UserEntity.html":{}}}],["unconfirmedemail.code",{"_index":3035,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["unconfirmedemail.email",{"_index":856,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{}}}],["unconfirmedemail.user",{"_index":855,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{},"entities/UserEntity.html":{}}}],["unconfirmedemail.user.id",{"_index":858,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{}}}],["unconfirmedemailentity",{"_index":1221,"title":{"entities/UnconfirmedEmailEntity.html":{}},"body":{"injectables/ExportService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"entities/UserEntity.html":{}}}],["unconfirmedemailentitysubscriber",{"_index":2834,"title":{"classes/UnconfirmedEmailEntitySubscriber.html":{}},"body":{"classes/UnconfirmedEmailEntitySubscriber.html":{}}}],["unconfirmedemailkeys",{"_index":1293,"title":{},"body":{"injectables/ExportService.html":{}}}],["unconfirmedemailkeys[index",{"_index":1297,"title":{},"body":{"injectables/ExportService.html":{}}}],["unconfirmedemailrepository",{"_index":1204,"title":{"classes/UnconfirmedEmailRepository.html":{}},"body":{"injectables/ExportService.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{}}}],["unconfirmedemailrepositoryprovider",{"_index":3140,"title":{},"body":{"modules/UserModule.html":{}}}],["unconfirmedemails",{"_index":1223,"title":{},"body":{"injectables/ExportService.html":{},"entities/UserEntity.html":{}}}],["unconfirmedemails.length",{"_index":1325,"title":{},"body":{"injectables/ExportService.html":{}}}],["unconfirmedemailservice",{"_index":845,"title":{"injectables/UnconfirmedEmailService.html":{}},"body":{"controllers/ConfirmUserEmailController.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateUserProfileController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["undefined",{"_index":305,"title":{},"body":{"classes/AddFileDTO.html":{},"classes/AddTimeSlotDTO.html":{},"injectables/ContactService.html":{},"classes/ProfileRO.html":{},"classes/SendEmergencyMessageDTO.html":{},"classes/SendSmsDTO.html":{},"classes/UpdateTimeSlotDTO.html":{},"entities/UserEntity.html":{},"classes/UserRO.html":{}}}],["undefined,undefined",{"_index":2066,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["undefined})@useinterceptors(undefined)@post",{"_index":3074,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["unix",{"_index":1555,"title":{},"body":{"injectables/FileService.html":{}}}],["unknown",{"_index":137,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"injectables/AuthenticationService.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ContactListController.html":{},"injectables/ContactService.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"injectables/FileService.html":{},"controllers/GetAccessTokenController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/NotePositiveInfoController.html":{},"classes/PassportStrategy.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["unknown_error",{"_index":1166,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["unsigned",{"_index":342,"title":{},"body":{"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{}}}],["until",{"_index":2823,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["up",{"_index":19,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{},"index.html":{}}}],["up(queryrunner",{"_index":46,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{}}}],["update",{"_index":348,"title":{},"body":{"classes/AddLimitToFileCategoryTable1634809042779.html":{},"injectables/ContactService.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"injectables/UserService.html":{}}}],["update(positiveinfoentity",{"_index":2186,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["update(profileentity",{"_index":2347,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["update_contact_failed",{"_index":1029,"title":{},"body":{"injectables/ContactService.html":{}}}],["update_time_slot_failed",{"_index":2780,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["update_user_device_id_failed",{"_index":3238,"title":{},"body":{"injectables/UserService.html":{}}}],["update_user_email_failed",{"_index":2868,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{},"injectables/UserService.html":{}}}],["updatecontact",{"_index":1001,"title":{},"body":{"injectables/ContactService.html":{},"controllers/UpdateContactController.html":{}}}],["updatecontact(contact",{"_index":1017,"title":{},"body":{"injectables/ContactService.html":{}}}],["updatecontact(user",{"_index":2889,"title":{},"body":{"controllers/UpdateContactController.html":{}}}],["updatecontactandcheckphonedto",{"_index":2878,"title":{"classes/UpdateContactAndCheckPhoneDTO.html":{}},"body":{"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{}}}],["updatecontactandcheckphonenumber",{"_index":2887,"title":{},"body":{"controllers/UpdateContactController.html":{}}}],["updatecontactandcheckphonenumber(user",{"_index":2891,"title":{},"body":{"controllers/UpdateContactController.html":{}}}],["updatecontactandcheckphoneschema",{"_index":2900,"title":{},"body":{"controllers/UpdateContactController.html":{}}}],["updatecontactcontroller",{"_index":948,"title":{"controllers/UpdateContactController.html":{}},"body":{"modules/ContactModule.html":{},"controllers/UpdateContactController.html":{}}}],["updatecontactdto",{"_index":1018,"title":{"classes/UpdateContactDTO.html":{}},"body":{"injectables/ContactService.html":{},"classes/UpdateContactAndCheckPhoneDTO.html":{},"controllers/UpdateContactController.html":{},"classes/UpdateContactDTO.html":{}}}],["updatecontactdto:11",{"_index":2881,"title":{},"body":{"classes/UpdateContactAndCheckPhoneDTO.html":{}}}],["updatecontactdto:14",{"_index":2884,"title":{},"body":{"classes/UpdateContactAndCheckPhoneDTO.html":{}}}],["updatecontactdto:22",{"_index":2883,"title":{},"body":{"classes/UpdateContactAndCheckPhoneDTO.html":{}}}],["updatecontactdto:25",{"_index":2880,"title":{},"body":{"classes/UpdateContactAndCheckPhoneDTO.html":{}}}],["updatecontactdto:5",{"_index":2882,"title":{},"body":{"classes/UpdateContactAndCheckPhoneDTO.html":{}}}],["updatecontactdto:8",{"_index":2885,"title":{},"body":{"classes/UpdateContactAndCheckPhoneDTO.html":{}}}],["updatecontactschema",{"_index":2898,"title":{},"body":{"controllers/UpdateContactController.html":{}}}],["updatecontactwithoutphonenumberverification",{"_index":2888,"title":{},"body":{"controllers/UpdateContactController.html":{}}}],["updatecontactwithoutphonenumberverification(user",{"_index":2895,"title":{},"body":{"controllers/UpdateContactController.html":{}}}],["updated_at",{"_index":254,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddUserTable1625563196521.html":{},"entities/ContactEntity.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["updatedat",{"_index":868,"title":{},"body":{"entities/ContactEntity.html":{},"classes/ContactRO.html":{},"injectables/ExportService.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"entities/UserEntity.html":{},"classes/UserRO.html":{}}}],["updatedatecolumn",{"_index":891,"title":{},"body":{"entities/ContactEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["updatedatecolumn({name",{"_index":881,"title":{},"body":{"entities/ContactEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["updateevent",{"_index":912,"title":{},"body":{"classes/ContactEntitySubscriber.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["updateresult",{"_index":1021,"title":{},"body":{"injectables/ContactService.html":{},"classes/PositiveInfoRepository.html":{},"classes/ProfileRepository.html":{},"injectables/UserService.html":{}}}],["updatetimeslot",{"_index":2752,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["updatetimeslot(timeslot",{"_index":2772,"title":{},"body":{"injectables/TriggerTimeSlotService.html":{}}}],["updatetimeslot(user",{"_index":2909,"title":{},"body":{"controllers/UpdateTimeSlotController.html":{}}}],["updatetimeslotcontroller",{"_index":2736,"title":{"controllers/UpdateTimeSlotController.html":{}},"body":{"modules/TriggerTimeSlotModule.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["updatetimeslotdto",{"_index":2910,"title":{"classes/UpdateTimeSlotDTO.html":{}},"body":{"controllers/UpdateTimeSlotController.html":{},"classes/UpdateTimeSlotDTO.html":{}}}],["updatetimeslotschema",{"_index":2914,"title":{},"body":{"controllers/UpdateTimeSlotController.html":{}}}],["updateuserdeviceid",{"_index":3215,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdeviceid(userid",{"_index":3229,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdeviceiddto",{"_index":2927,"title":{"classes/UpdateUserDeviceIdDTO.html":{}},"body":{"classes/UpdateUserDeviceIdDTO.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{}}}],["updateuserdeviceidentifiercontroller",{"_index":2932,"title":{"controllers/UpdateUserDeviceIdentifierController.html":{}},"body":{"controllers/UpdateUserDeviceIdentifierController.html":{},"modules/UserModule.html":{}}}],["updateuserdeviceidentifiercontroller(logged",{"_index":2935,"title":{},"body":{"controllers/UpdateUserDeviceIdentifierController.html":{}}}],["updateuserdeviceidschema",{"_index":2942,"title":{},"body":{"controllers/UpdateUserDeviceIdentifierController.html":{}}}],["updateuseremail",{"_index":3216,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuseremail(id",{"_index":3231,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserprofile",{"_index":2985,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["updateuserprofile(logged",{"_index":2991,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["updateuserprofileandcheckphonedto",{"_index":2949,"title":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{}}}],["updateuserprofileandcheckphonenumber",{"_index":2986,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["updateuserprofileandcheckphonenumber(logged",{"_index":2993,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["updateuserprofileandcheckphoneschema",{"_index":3003,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["updateuserprofilecontroller",{"_index":2981,"title":{"controllers/UpdateUserProfileController.html":{}},"body":{"controllers/UpdateUserProfileController.html":{},"modules/UserModule.html":{}}}],["updateuserprofiledto",{"_index":2354,"title":{"classes/UpdateUserProfileDTO.html":{}},"body":{"injectables/ProfileService.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{}}}],["updateuserprofiledto:11",{"_index":2955,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:14",{"_index":2966,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:17",{"_index":2960,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:20",{"_index":2978,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:28",{"_index":2964,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:31",{"_index":2950,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:34",{"_index":2954,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:37",{"_index":2967,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:40",{"_index":2968,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:43",{"_index":2976,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:46",{"_index":2962,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:49",{"_index":2959,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:5",{"_index":2963,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:52",{"_index":2951,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:55",{"_index":2979,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:58",{"_index":2956,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:61",{"_index":2961,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:64",{"_index":2980,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:67",{"_index":2974,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:70",{"_index":2952,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:73",{"_index":2957,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:76",{"_index":2975,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:79",{"_index":2958,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:8",{"_index":2977,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:82",{"_index":2965,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:85",{"_index":2973,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:88",{"_index":2972,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:91",{"_index":2971,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:94",{"_index":2970,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofiledto:97",{"_index":2969,"title":{},"body":{"classes/UpdateUserProfileAndCheckPhoneDTO.html":{}}}],["updateuserprofileschema",{"_index":2998,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["upload",{"_index":3072,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["uploaded_documents_access",{"_index":281,"title":{},"body":{"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"entities/ProfileEntity.html":{}}}],["uploadeddocumentsaccess",{"_index":2225,"title":{},"body":{"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"classes/UpdateUserProfileDTO.html":{},"classes/UserRO.html":{}}}],["uploadedfile",{"_index":3076,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["uploadfile",{"_index":1506,"title":{},"body":{"injectables/FileService.html":{},"controllers/UploadFileController.html":{}}}],["uploadfile(file",{"_index":1526,"title":{},"body":{"injectables/FileService.html":{}}}],["uploadfile(user",{"_index":3068,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["uploadfilecontroller",{"_index":1463,"title":{"controllers/UploadFileController.html":{}},"body":{"modules/FileModule.html":{},"controllers/UploadFileController.html":{}}}],["uploadfileorfail",{"_index":1507,"title":{},"body":{"injectables/FileService.html":{}}}],["uploadfileorfail(file",{"_index":1528,"title":{},"body":{"injectables/FileService.html":{}}}],["uploadresult",{"_index":1531,"title":{"interfaces/UploadResult.html":{}},"body":{"injectables/FileService.html":{},"interfaces/UploadResult.html":{}}}],["url",{"_index":1307,"title":{},"body":{"injectables/ExportService.html":{},"controllers/FileListController.html":{},"classes/FileRO.html":{},"injectables/FileService.html":{}}}],["useguards",{"_index":143,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["useguards(authguard(\"cognito",{"_index":2602,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{},"controllers/SendTestMessageController.html":{}}}],["useguards(authguard('cognito",{"_index":191,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendSMSController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["useguards(new",{"_index":189,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["useinterceptors",{"_index":3077,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":3091,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["usekeys",{"_index":1253,"title":{},"body":{"injectables/ExportService.html":{}}}],["usekeys[index",{"_index":1257,"title":{},"body":{"injectables/ExportService.html":{}}}],["user",{"_index":134,"title":{},"body":{"controllers/AddContactController.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"controllers/AddTimeSlotController.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"controllers/CancelEmergencyMessageController.html":{},"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"classes/ConfirmUserEmailDTO.html":{},"entities/ContactEntity.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"classes/ExportUserDataDTO.html":{},"entities/FileEntity.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"injectables/MessageService.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"classes/PassportStrategy.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"entities/ProfileEntity.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"entities/TimeSlotEntity.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"classes/UpdateUserDeviceIdDTO.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UpdateUserProfileDTO.html":{},"controllers/UploadFileController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["user'})@roles(['undefined'])@apibody({schema",{"_index":3073,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["user'})@roles(['undefined'])@delete(':id",{"_index":1067,"title":{},"body":{"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{}}}],["user'})@roles(['undefined'])@get('time",{"_index":1631,"title":{},"body":{"controllers/GetListOfTimeSlotsController.html":{}}}],["user'})@roles(['undefined'])@patch(':id",{"_index":2912,"title":{},"body":{"controllers/UpdateTimeSlotController.html":{}}}],["user'})@roles(['undefined'])@patch('contact/:id",{"_index":2896,"title":{},"body":{"controllers/UpdateContactController.html":{}}}],["user'})@roles(['undefined'])@patch('device",{"_index":2938,"title":{},"body":{"controllers/UpdateUserDeviceIdentifierController.html":{}}}],["user'})@roles(['undefined'])@patch('email/confirm",{"_index":836,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{}}}],["user'})@roles(['undefined'])@post('contact",{"_index":139,"title":{},"body":{"controllers/AddContactController.html":{}}}],["user'})@roles(['undefined'])@post('time",{"_index":458,"title":{},"body":{"controllers/AddTimeSlotController.html":{}}}],["user.contacts",{"_index":885,"title":{},"body":{"entities/ContactEntity.html":{},"entities/TimeSlotEntity.html":{}}}],["user.controller",{"_index":3143,"title":{},"body":{"modules/UserModule.html":{}}}],["user.controller.ts",{"_index":1643,"title":{},"body":{"controllers/GetUserController.html":{}}}],["user.controller.ts:34",{"_index":1648,"title":{},"body":{"controllers/GetUserController.html":{}}}],["user.email",{"_index":1372,"title":{},"body":{"controllers/ExportUserDataController.html":{},"injectables/NotificationService.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["user.entity",{"_index":2265,"title":{},"body":{"entities/ProfileEntity.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UserEntitySubscriber.html":{}}}],["user.files",{"_index":1439,"title":{},"body":{"entities/FileEntity.html":{}}}],["user.id",{"_index":212,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/ExportUserDataController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"controllers/SendEmergencyMessageController.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"injectables/UserService.html":{}}}],["user.positiveinfo",{"_index":2114,"title":{},"body":{"entities/PositiveInfoEntity.html":{}}}],["user.profile",{"_index":1323,"title":{},"body":{"injectables/ExportService.html":{},"entities/ProfileEntity.html":{}}}],["user.profile.location",{"_index":2609,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{}}}],["user.profile?.emergencyemailandsms",{"_index":2014,"title":{},"body":{"injectables/NotificationService.html":{}}}],["user.profile?.emergencymessage",{"_index":2016,"title":{},"body":{"injectables/NotificationService.html":{}}}],["user.profile?.locationaccess",{"_index":2027,"title":{},"body":{"injectables/NotificationService.html":{}}}],["user.profile?.name",{"_index":2034,"title":{},"body":{"injectables/NotificationService.html":{},"controllers/SendTestMessageController.html":{}}}],["user.profile?.prefix",{"_index":2652,"title":{},"body":{"controllers/SendTestMessageController.html":{}}}],["user.profile?.prefix}${user.profile?.phone",{"_index":2653,"title":{},"body":{"controllers/SendTestMessageController.html":{}}}],["user.profile?.surname",{"_index":2022,"title":{},"body":{"injectables/NotificationService.html":{},"controllers/SendTestMessageController.html":{}}}],["user.unconfirmedemails",{"_index":2830,"title":{},"body":{"entities/UnconfirmedEmailEntity.html":{}}}],["user/entity/profile.entity",{"_index":3000,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["user/entity/user.entity",{"_index":162,"title":{},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"controllers/ConfirmUserEmailController.html":{},"entities/ContactEntity.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/ExportUserDataController.html":{},"entities/FileEntity.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"classes/PassportStrategy.html":{},"entities/PositiveInfoEntity.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"entities/TimeSlotEntity.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{}}}],["user/repository/positive",{"_index":1922,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{}}}],["user/repository/profile.repository",{"_index":2446,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["user/repository/unconfirmed",{"_index":1242,"title":{},"body":{"injectables/ExportService.html":{}}}],["user/service/export.service",{"_index":1921,"title":{},"body":{"injectables/NotificationService.html":{}}}],["user/service/positive",{"_index":1694,"title":{},"body":{"controllers/LogoutController.html":{}}}],["user/service/profile.service",{"_index":1696,"title":{},"body":{"controllers/LogoutController.html":{},"controllers/SendSMSController.html":{}}}],["user/service/user.service",{"_index":804,"title":{},"body":{"injectables/CognitoStrategy.html":{},"controllers/LogoutController.html":{},"injectables/MessageService.html":{},"injectables/NotificationService.html":{},"controllers/SendEmergencyMessageController.html":{}}}],["user/user.module",{"_index":578,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/SchedulerModule.html":{}}}],["user?.profile?.allownotifications",{"_index":1763,"title":{},"body":{"injectables/MessageService.html":{}}}],["user?.profile?.location",{"_index":2654,"title":{},"body":{"controllers/SendTestMessageController.html":{}}}],["user?.profile?.uploadeddocumentsaccess",{"_index":1993,"title":{},"body":{"injectables/NotificationService.html":{}}}],["user?.role",{"_index":2404,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user_change_email",{"_index":3362,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_id",{"_index":247,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"entities/ContactEntity.html":{},"entities/FileEntity.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{}}}],["user_id'})@manytoone(undefined",{"_index":884,"title":{},"body":{"entities/ContactEntity.html":{},"entities/FileEntity.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{}}}],["user_id'})@onetoone(undefined",{"_index":2113,"title":{},"body":{"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{}}}],["user_not_found",{"_index":3234,"title":{},"body":{"injectables/UserService.html":{}}}],["user_password_auth",{"_index":706,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userattributes",{"_index":815,"title":{},"body":{"injectables/CognitoStrategy.html":{},"injectables/UnconfirmedEmailService.html":{}}}],["userattributes.email",{"_index":822,"title":{},"body":{"injectables/CognitoStrategy.html":{}}}],["userentity",{"_index":127,"title":{"entities/UserEntity.html":{}},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/CancelEmergencyMessageController.html":{},"entities/ContactEntity.html":{},"controllers/ContactListController.html":{},"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"entities/FileEntity.html":{},"controllers/FileListController.html":{},"controllers/GetListOfTimeSlotsController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"controllers/NotePositiveInfoController.html":{},"injectables/NotificationService.html":{},"classes/PassportStrategy.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/SendTestMessageController.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"entities/UserEntity.html":{},"classes/UserEntitySubscriber.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["userentitysubscriber",{"_index":3125,"title":{"classes/UserEntitySubscriber.html":{}},"body":{"classes/UserEntitySubscriber.html":{}}}],["userid",{"_index":869,"title":{},"body":{"entities/ContactEntity.html":{},"injectables/ContactService.html":{},"injectables/ExportService.html":{},"controllers/ExportUserDataController.html":{},"entities/FileEntity.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"interfaces/IContactData.html":{},"interfaces/IProfileData.html":{},"interfaces/ITimeSlotData.html":{},"controllers/LogoutController.html":{},"classes/MessageConsumer.html":{},"injectables/MessageService-1.html":{},"injectables/NotificationService.html":{},"entities/PositiveInfoEntity.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"entities/ProfileEntity.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"injectables/SchedulerService.html":{},"entities/TimeSlotEntity.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"entities/UnconfirmedEmailEntity.html":{},"classes/UnconfirmedEmailRepository.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateUserProfileController.html":{},"classes/UserRO.html":{},"injectables/UserService.html":{}}}],["userid'])).foreach",{"_index":1265,"title":{},"body":{"injectables/ExportService.html":{}}}],["userids",{"_index":2135,"title":{},"body":{"classes/PositiveInfoRepository.html":{},"classes/ProfileRepository.html":{},"injectables/SchedulerService.html":{}}}],["userids.length",{"_index":2584,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["userids.push(information.user.id",{"_index":2549,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["userids.push(item.userid",{"_index":2571,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["userids.push(profile.userid",{"_index":2527,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["usermapper",{"_index":1651,"title":{},"body":{"controllers/GetUserController.html":{},"controllers/UpdateUserProfileController.html":{}}}],["usermapper(await",{"_index":3026,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["usermapper(details",{"_index":1657,"title":{},"body":{"controllers/GetUserController.html":{}}}],["usermodule",{"_index":568,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/SchedulerModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":708,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/ExportUserDataController.html":{},"injectables/NotificationService.html":{},"injectables/UnconfirmedEmailService.html":{},"controllers/UpdateUserProfileController.html":{},"injectables/UserService.html":{}}}],["userpoolid",{"_index":690,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UnconfirmedEmailService.html":{},"injectables/UserService.html":{}}}],["userrepository",{"_index":1201,"title":{"classes/UserRepository.html":{}},"body":{"injectables/ExportService.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["userrepositoryprovider",{"_index":3136,"title":{},"body":{"modules/UserModule.html":{}}}],["userro",{"_index":1649,"title":{"classes/UserRO.html":{}},"body":{"controllers/GetUserController.html":{},"classes/UserRO.html":{}}}],["userro})@apioperation({summary",{"_index":1646,"title":{},"body":{"controllers/GetUserController.html":{}}}],["userservice",{"_index":798,"title":{"injectables/UserService.html":{}},"body":{"injectables/CognitoStrategy.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/DeleteUserController.html":{},"controllers/GetUserController.html":{},"controllers/LogoutController.html":{},"injectables/MessageService.html":{},"injectables/NotificationService.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendTestMessageController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["util",{"_index":2079,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["util.inherits(passportstrategy",{"_index":2096,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["uuid",{"_index":1228,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FileService.html":{},"injectables/UnconfirmedEmailService.html":{}}}],["uuid.v4",{"_index":2870,"title":{},"body":{"injectables/UnconfirmedEmailService.html":{}}}],["uuid.v4()}.${file.originalname.split('.').reverse()[0",{"_index":1576,"title":{},"body":{"injectables/FileService.html":{}}}],["v3.1",{"_index":2005,"title":{},"body":{"injectables/NotificationService.html":{}}}],["validation.pipe",{"_index":1074,"title":{},"body":{"controllers/DeleteContactController.html":{},"controllers/DeleteContactController-1.html":{},"controllers/DeleteTimeSlotController.html":{},"controllers/DeleteUserController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{}}}],["validation.pipe.ts",{"_index":2046,"title":{},"body":{"injectables/NumericIdValidationPipe.html":{}}}],["validation.pipe.ts:14",{"_index":2053,"title":{},"body":{"injectables/NumericIdValidationPipe.html":{}}}],["validation.pipe.ts:8",{"_index":2049,"title":{},"body":{"injectables/NumericIdValidationPipe.html":{}}}],["validation_failed",{"_index":1026,"title":{},"body":{"injectables/ContactService.html":{},"classes/ExceptionsFilter.html":{},"injectables/NumericIdValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["validationerror",{"_index":1053,"title":{},"body":{"classes/CustomError.html":{}}}],["validationpipe",{"_index":170,"title":{"injectables/ValidationPipe.html":{}},"body":{"controllers/AddContactController.html":{},"controllers/AddTimeSlotController.html":{},"controllers/ConfirmUserEmailController.html":{},"controllers/ExportUserDataController.html":{},"controllers/GetAccessTokenController.html":{},"controllers/NotePositiveInfoController.html":{},"controllers/SendEmergencyMessageController.html":{},"controllers/SendSMSController.html":{},"controllers/UpdateContactController.html":{},"controllers/UpdateTimeSlotController.html":{},"controllers/UpdateUserDeviceIdentifierController.html":{},"controllers/UpdateUserProfileController.html":{},"controllers/UploadFileController.html":{},"injectables/ValidationPipe.html":{}}}],["validationpipe(addcontactandcheckphoneschema",{"_index":203,"title":{},"body":{"controllers/AddContactController.html":{}}}],["validationpipe(addcontactschema",{"_index":217,"title":{},"body":{"controllers/AddContactController.html":{}}}],["validationpipe(addfileschema",{"_index":3092,"title":{},"body":{"controllers/UploadFileController.html":{}}}],["validationpipe(addtimeslotschema",{"_index":473,"title":{},"body":{"controllers/AddTimeSlotController.html":{}}}],["validationpipe(confirmuseremailschema",{"_index":851,"title":{},"body":{"controllers/ConfirmUserEmailController.html":{}}}],["validationpipe(exportuserdataschema",{"_index":1365,"title":{},"body":{"controllers/ExportUserDataController.html":{}}}],["validationpipe(getaccesstokenschema",{"_index":1614,"title":{},"body":{"controllers/GetAccessTokenController.html":{}}}],["validationpipe(notepositiveinfoschema",{"_index":1847,"title":{},"body":{"controllers/NotePositiveInfoController.html":{}}}],["validationpipe(sendemergencymessageschema",{"_index":2606,"title":{},"body":{"controllers/SendEmergencyMessageController.html":{}}}],["validationpipe(sendsmsschema",{"_index":2633,"title":{},"body":{"controllers/SendSMSController.html":{}}}],["validationpipe(updatecontactandcheckphoneschema",{"_index":2902,"title":{},"body":{"controllers/UpdateContactController.html":{}}}],["validationpipe(updatecontactschema",{"_index":2905,"title":{},"body":{"controllers/UpdateContactController.html":{}}}],["validationpipe(updatetimeslotschema",{"_index":2918,"title":{},"body":{"controllers/UpdateTimeSlotController.html":{}}}],["validationpipe(updateuserdeviceidschema",{"_index":2945,"title":{},"body":{"controllers/UpdateUserDeviceIdentifierController.html":{}}}],["validationpipe(updateuserprofileandcheckphoneschema",{"_index":3007,"title":{},"body":{"controllers/UpdateUserProfileController.html":{}}}],["value",{"_index":23,"title":{},"body":{"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{},"classes/AddAutomatedEmergencySettings1628507521688.html":{},"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddLimitToFileCategoryTable1634809042779.html":{},"classes/AddLocationToPositiveInfoTable1633335269397.html":{},"classes/AddLocationUrlToProfile1651485257652.html":{},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{},"classes/AddRoleToUserTable1625843279739.html":{},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{},"classes/AddTimeSlotDayTable1629364845785.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"injectables/AuthenticationService.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ContactRepository.html":{},"injectables/ContactService.html":{},"classes/Encrypter.html":{},"classes/ExceptionsFilter.html":{},"injectables/ExportService.html":{},"classes/FileCategoryRepository.html":{},"classes/FileRepository.html":{},"injectables/FileService.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{},"injectables/NotificationService.html":{},"injectables/NumericIdValidationPipe.html":{},"classes/PassportStrategy.html":{},"classes/PositiveInfoRepository.html":{},"injectables/PositiveInfoService.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/ProfileRO.html":{},"classes/ProfileRepository.html":{},"injectables/ProfileService.html":{},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"injectables/SchedulerService.html":{},"classes/TimeSlotRepository.html":{},"injectables/TriggerTimeSlotService.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"injectables/UnconfirmedEmailService.html":{},"classes/UserEntitySubscriber.html":{},"classes/UserRO.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{},"miscellaneous/enumerations.html":{}}}],["values",{"_index":297,"title":{},"body":{"classes/AddFileCategoryTableWithValues1630406730426.html":{}}}],["varchar",{"_index":248,"title":{},"body":{"classes/AddContactTable1625819654567.html":{},"classes/AddDeviceIdToUserTable1632482760947.html":{},"classes/AddFileCategoryTableWithValues1630406730426.html":{},"classes/AddFileTable1630406751456.html":{},"classes/AddPositiveInfoTable1632807482818.html":{},"classes/AddProfileTable1626246168913.html":{},"classes/AddTimeSlotTable1629364182226.html":{},"classes/AddTimezoneToProfile1651485422367.html":{},"classes/AddTimezoneToSlots1651485422366.html":{},"classes/AddUnconfirmedEmailTable1626421452168.html":{},"classes/AddUserTable1625563196521.html":{},"entities/ContactEntity.html":{},"entities/FileCategoryEntity.html":{},"entities/FileEntity.html":{},"entities/PositiveInfoEntity.html":{},"entities/ProfileEntity.html":{},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{},"entities/TimeSlotEntity.html":{},"entities/UnconfirmedEmailEntity.html":{},"entities/UserEntity.html":{}}}],["variables",{"_index":1970,"title":{},"body":{"injectables/NotificationService.html":{}}}],["variablestoescapeandsend",{"_index":1889,"title":{},"body":{"injectables/NotificationService.html":{}}}],["variablestosend",{"_index":1890,"title":{},"body":{"injectables/NotificationService.html":{}}}],["verify",{"_index":2064,"title":{},"body":{"classes/PassportStrategy.html":{}}}],["version",{"_index":2004,"title":{},"body":{"injectables/NotificationService.html":{},"properties.html":{}}}],["void",{"_index":748,"title":{},"body":{"classes/BasicConsumer.html":{},"classes/ContactEntitySubscriber.html":{},"classes/ExceptionsFilter.html":{},"classes/MessageConsumer.html":{},"classes/PassportStrategy.html":{},"classes/ProfileEntitySubscriber.html":{},"classes/UnconfirmedEmailEntitySubscriber.html":{},"classes/UserEntitySubscriber.html":{}}}],["wanttogetnotifications",{"_index":1891,"title":{},"body":{"injectables/NotificationService.html":{}}}],["wednesday",{"_index":3340,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["week.enum",{"_index":492,"title":{},"body":{"classes/AddTimeSlotDTO.html":{},"injectables/ExportService.html":{},"injectables/SchedulerService.html":{},"injectables/TriggerTimeSlotService.html":{}}}],["week.enum.ts",{"_index":3321,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["where('file.user_id",{"_index":1499,"title":{},"body":{"classes/FileRepository.html":{}}}],["where('frequency_of_regular_notification",{"_index":2338,"title":{},"body":{"classes/ProfileRepository.html":{}}}],["where('push_notification_time",{"_index":2168,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["where('ts.user_id",{"_index":2726,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["where('u.device_id",{"_index":2713,"title":{},"body":{"classes/TimeSlotRepository.html":{}}}],["where('user_id",{"_index":2183,"title":{},"body":{"classes/PositiveInfoRepository.html":{},"classes/ProfileRepository.html":{}}}],["where(`${column",{"_index":2176,"title":{},"body":{"classes/PositiveInfoRepository.html":{}}}],["world",{"_index":633,"title":{},"body":{"injectables/AppService.html":{}}}],["wrong",{"_index":677,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["yarn",{"_index":3406,"title":{},"body":{"index.html":{}}}],["yes",{"_index":1122,"title":{},"body":{"classes/Encrypter.html":{},"injectables/MessageService-1.html":{},"injectables/NotificationService.html":{},"injectables/SchedulerService.html":{},"injectables/ValidationPipe.html":{}}}],["z",{"_index":611,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":569,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationModule.html":{},"modules/ContactModule.html":{},"modules/FileModule.html":{},"modules/MessageModule.html":{},"modules/NotificationModule.html":{},"modules/QueueModule.html":{},"modules/SchedulerModule.html":{},"modules/TriggerTimeSlotModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html":{"url":"classes/AddAccountSettingsColumnsToProfileTable1626771292134.html","title":"class - AddAccountSettingsColumnsToProfileTable1626771292134","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddAccountSettingsColumnsToProfileTable1626771292134\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1626771292134-addAccountSettingsColumnsToProfileTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                newColumns\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        newColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    new TableColumn({\n      name: 'allow_notifications',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'tips_and_tricks',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1626771292134-addAccountSettingsColumnsToProfileTable.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1626771292134-addAccountSettingsColumnsToProfileTable.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1626771292134-addAccountSettingsColumnsToProfileTable.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1626771292134-addAccountSettingsColumnsToProfileTable.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, TableColumn } from 'typeorm';\n\nexport class AddAccountSettingsColumnsToProfileTable1626771292134\n  implements MigrationInterface\n{\n  private tableName = 'profile';\n  private newColumns = [\n    new TableColumn({\n      name: 'allow_notifications',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'tips_and_tricks',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n  ];\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.addColumns(this.tableName, this.newColumns);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropColumns(this.tableName, this.newColumns);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddAlertTimeToPositiveInfoTable1650544527662.html":{"url":"classes/AddAlertTimeToPositiveInfoTable1650544527662.html","title":"class - AddAlertTimeToPositiveInfoTable1650544527662","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddAlertTimeToPositiveInfoTable1650544527662\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1650544527662-addAlertTimeToPositiveInfoTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                column\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        column\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TableColumn({\n    name: 'alert_time',\n    type: 'datetime',\n    isNullable: true,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1650544527662-addAlertTimeToPositiveInfoTable.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'positive_info'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1650544527662-addAlertTimeToPositiveInfoTable.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1650544527662-addAlertTimeToPositiveInfoTable.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1650544527662-addAlertTimeToPositiveInfoTable.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, TableColumn } from 'typeorm';\n\nexport class AddAlertTimeToPositiveInfoTable1650544527662\n  implements MigrationInterface\n{\n  private tableName = 'positive_info';\n  private column = new TableColumn({\n    name: 'alert_time',\n    type: 'datetime',\n    isNullable: true,\n  });\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.addColumn(this.tableName, this.column);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropColumn(this.tableName, this.column);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddAutomatedEmergencySettings1628507521688.html":{"url":"classes/AddAutomatedEmergencySettings1628507521688.html","title":"class - AddAutomatedEmergencySettings1628507521688","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddAutomatedEmergencySettings1628507521688\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1628507521688-addAutomatedEmergencySettings.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                newColumns\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        newColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    new TableColumn({\n      name: 'read_manual',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'automated_emergency',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1628507521688-addAutomatedEmergencySettings.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1628507521688-addAutomatedEmergencySettings.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1628507521688-addAutomatedEmergencySettings.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1628507521688-addAutomatedEmergencySettings.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, TableColumn } from 'typeorm';\n\nexport class AddAutomatedEmergencySettings1628507521688\n  implements MigrationInterface\n{\n  private tableName = 'profile';\n  private newColumns = [\n    new TableColumn({\n      name: 'read_manual',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'automated_emergency',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n  ];\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.addColumns(this.tableName, this.newColumns);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropColumns(this.tableName, this.newColumns);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddContactAndCheckPhoneDTO.html":{"url":"classes/AddContactAndCheckPhoneDTO.html","title":"class - AddContactAndCheckPhoneDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddContactAndCheckPhoneDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/request/dto/add-contact-and-check-phone.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AddContactDTO\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                countryCode\n                            \n                            \n                                active\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                prefix\n                            \n                            \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        countryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 2, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/request/dto/add-contact-and-check-phone.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AddContactDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         AddContactDTO:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 320, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AddContactDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         AddContactDTO:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 100})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AddContactDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         AddContactDTO:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 12, required: false, example: '123456789'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AddContactDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         AddContactDTO:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, maxLength: 3, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AddContactDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         AddContactDTO:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 100})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AddContactDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         AddContactDTO:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { AddContactDTO } from './add-contact.dto';\n\nexport class AddContactAndCheckPhoneDTO extends AddContactDTO {\n  @ApiProperty({ type: String, maxLength: 2, required: false })\n  countryCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AddContactController.html":{"url":"controllers/AddContactController.html","title":"controller - AddContactController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AddContactController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/controller/add-contact.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addContactAndCheckPhoneNumber\n                            \n                            \n                                    Async\n                                addContactWithoutPhoneNumberVerification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addContactAndCheckPhoneNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    addContactAndCheckPhoneNumber(user: UserEntity, data: AddContactAndCheckPhoneDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, type: ContactIdRO})@ApiResponse({status: 400, type: ErrorMessageRO})@ApiOperation({summary: 'Add contact by user with phone check'})@Roles(['undefined'])@Post('api/v2/contact')\n                \n            \n\n            \n                \n                    Defined in src/contact/controller/add-contact.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AddContactAndCheckPhoneDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addContactWithoutPhoneNumberVerification\n                        \n                    \n                \n            \n            \n                \n                    \n                    addContactWithoutPhoneNumberVerification(user: UserEntity, data: AddContactDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, type: ContactIdRO})@ApiResponse({status: 400, type: ErrorMessageRO})@ApiOperation({summary: 'Add contact by user'})@Roles(['undefined'])@Post('contact')\n                \n            \n\n            \n                \n                    Defined in src/contact/controller/add-contact.controller.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AddContactDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  UseGuards,\n  Inject,\n  BadRequestException,\n} from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n} from '@nestjs/swagger';\nimport { RolesGuard } from '../../authentication/roles.guard';\nimport { Roles } from '../../authentication/decorator/roles.decorator';\nimport { Reflector } from '@nestjs/core';\nimport { plainToClass } from 'class-transformer';\nimport { ContactService } from '../service/contact.service';\nimport { User } from '../../authentication/decorator/user.decorator';\nimport { UserEntity, ROLES } from '../../user/entity/user.entity';\nimport { ContactIdRO } from '../response/contact-id.ro';\nimport { AddContactDTO } from '../request/dto/add-contact.dto';\nimport { addContactSchema } from '../request/schema/add-contact.schema';\nimport { ValidationPipe } from '../../common/pipe/validation.pipe';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ErrorMessageRO } from '../../common/response/error.ro';\nimport * as LibPhoneNumber from 'google-libphonenumber';\nimport { checkPhoneNumber } from '../../common/helper/check-phone-number';\nimport { AddContactAndCheckPhoneDTO } from '../request/dto/add-contact-and-check-phone.dto';\nimport { addContactAndCheckPhoneSchema } from '../request/schema/add-contact-and-check-phone.schema';\nimport { PHONE_NUMBER_IS_INVALID } from '../../common/error/keys';\nimport { DICTIONARY } from '../../common/constant/dictionary.constant';\nimport { omit } from '../../common/helper/omit';\n\n@ApiBearerAuth()\n@UseGuards(new RolesGuard(new Reflector()))\n@UseGuards(AuthGuard('cognito'))\n@ApiTags('contact')\n@Controller()\nexport class AddContactController {\n  constructor(\n    private readonly contactService: ContactService,\n    @Inject(DICTIONARY.GOOGLE_PHONE_NUMBER)\n    private readonly phoneUtil: LibPhoneNumber.PhoneNumberUtil\n  ) {}\n\n  @ApiResponse({ status: 201, type: ContactIdRO })\n  @ApiResponse({ status: 400, type: ErrorMessageRO })\n  @ApiOperation({ summary: 'Add contact by user with phone check' })\n  @Roles([ROLES.USER])\n  @Post('api/v2/contact')\n  async addContactAndCheckPhoneNumber(\n    @User() user: UserEntity,\n    @Body(new ValidationPipe(addContactAndCheckPhoneSchema))\n    data: AddContactAndCheckPhoneDTO\n  ) {\n    if (\n      data.phone &&\n      !checkPhoneNumber(\n        this.phoneUtil,\n        data.prefix,\n        data.phone,\n        data.countryCode\n      )\n    ) {\n      throw new BadRequestException(PHONE_NUMBER_IS_INVALID);\n    }\n\n    const contact = await this.contactService.saveContact(\n      user.id,\n      omit(data, ['countryCode'])\n    );\n\n    return plainToClass(ContactIdRO, contact);\n  }\n\n  @ApiResponse({ status: 201, type: ContactIdRO })\n  @ApiResponse({ status: 400, type: ErrorMessageRO })\n  @ApiOperation({ summary: 'Add contact by user' })\n  @Roles([ROLES.USER])\n  @Post('contact')\n  async addContactWithoutPhoneNumberVerification(\n    @User() user: UserEntity,\n    @Body(new ValidationPipe(addContactSchema))\n    data: AddContactDTO\n  ) {\n    const contact = await this.contactService.saveContact(user.id, data);\n\n    return plainToClass(ContactIdRO, contact);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddContactDTO.html":{"url":"classes/AddContactDTO.html","title":"class - AddContactDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddContactDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/request/dto/add-contact.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                prefix\n                            \n                            \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/request/dto/add-contact.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 320, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/request/dto/add-contact.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/request/dto/add-contact.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 12, required: false, example: '123456789'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/request/dto/add-contact.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, maxLength: 3, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/request/dto/add-contact.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/request/dto/add-contact.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class AddContactDTO {\n  @ApiProperty({ type: String, maxLength: 100 })\n  name: string;\n\n  @ApiProperty({ type: String, maxLength: 100 })\n  surname: string;\n\n  @ApiProperty({ type: String, maxLength: 320, required: false })\n  email: string;\n\n  @ApiProperty({ type: Number, maxLength: 3, required: false })\n  prefix: number;\n\n  @ApiProperty({\n    type: String,\n    maxLength: 12,\n    required: false,\n    example: '123456789',\n  })\n  phone: string;\n\n  @ApiProperty({ type: Boolean, required: false })\n  active: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddContactTable1625819654567.html":{"url":"classes/AddContactTable1625819654567.html","title":"class - AddContactTable1625819654567","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddContactTable1625819654567\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1625819654567-addContactTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                foreignKeyUserId\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        foreignKeyUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FK_conversationToUser'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1625819654567-addContactTable.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'contact'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1625819654567-addContactTable.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1625819654567-addContactTable.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1625819654567-addContactTable.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  MigrationInterface,\n  QueryRunner,\n  Table,\n  TableIndex,\n  TableForeignKey,\n} from 'typeorm';\n\nexport class AddContactTable1625819654567 implements MigrationInterface {\n  private tableName = 'contact';\n  private foreignKeyUserId = 'FK_conversationToUser';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.createTable(\n      new Table({\n        name: this.tableName,\n        columns: [\n          {\n            name: 'id',\n            type: 'int',\n            isGenerated: true,\n            isPrimary: true,\n            generationStrategy: 'increment',\n          },\n          {\n            name: 'user_id',\n            type: 'varchar',\n            length: '36',\n            isNullable: true,\n          },\n          {\n            name: 'active',\n            type: 'boolean',\n            default: false,\n          },\n          {\n            name: 'email',\n            type: 'LONGTEXT',\n            isNullable: true,\n          },\n          {\n            name: 'name',\n            type: 'LONGTEXT',\n            isNullable: false,\n          },\n          {\n            name: 'surname',\n            type: 'LONGTEXT',\n            isNullable: false,\n          },\n          {\n            name: 'prefix',\n            type: 'LONGTEXT',\n            isNullable: true,\n          },\n          {\n            name: 'phone',\n            type: 'LONGTEXT',\n            isNullable: true,\n          },\n          {\n            name: 'created_at',\n            type: 'datetime',\n            length: '6',\n            isNullable: false,\n            default: 'CURRENT_TIMESTAMP(6)',\n          },\n          {\n            name: 'updated_at',\n            type: 'datetime',\n            length: '6',\n            isNullable: false,\n            default: 'CURRENT_TIMESTAMP(6)',\n          },\n        ],\n      }),\n      true\n    );\n    await queryRunner.createIndex(\n      this.tableName,\n      new TableIndex({\n        name: 'IDX_contactUserId',\n        columnNames: ['user_id'],\n      })\n    );\n    await queryRunner.createForeignKey(\n      this.tableName,\n      new TableForeignKey({\n        columnNames: ['user_id'],\n        referencedColumnNames: ['id'],\n        referencedTableName: 'user',\n        name: this.foreignKeyUserId,\n        onDelete: 'CASCADE',\n      })\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropForeignKey(this.tableName, this.foreignKeyUserId);\n    await queryRunner.dropTable(this.tableName);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddDeviceIdToUserTable1632482760947.html":{"url":"classes/AddDeviceIdToUserTable1632482760947.html","title":"class - AddDeviceIdToUserTable1632482760947","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddDeviceIdToUserTable1632482760947\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1632482760947-addDeviceIdToUserTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                column\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        column\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TableColumn({\n    name: 'device_id',\n    type: 'varchar',\n    length: '200',\n    isNullable: true,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1632482760947-addDeviceIdToUserTable.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1632482760947-addDeviceIdToUserTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1632482760947-addDeviceIdToUserTable.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1632482760947-addDeviceIdToUserTable.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, TableColumn } from 'typeorm';\n\nexport class AddDeviceIdToUserTable1632482760947 implements MigrationInterface {\n  private tableName = 'user';\n  private column = new TableColumn({\n    name: 'device_id',\n    type: 'varchar',\n    length: '200',\n    isNullable: true,\n  });\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.addColumn(this.tableName, this.column);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropColumn(this.tableName, this.column);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html":{"url":"classes/AddEmergencyButtonColumnsToProfileTable1626779640972.html","title":"class - AddEmergencyButtonColumnsToProfileTable1626779640972","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddEmergencyButtonColumnsToProfileTable1626779640972\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1626779640972-addEmergencyButtonColumnsToProfileTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                newColumns\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        newColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    new TableColumn({\n      name: 'emergency_email_and_sms',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'automated_voice_call',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'location_access',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'uploaded_documents_access',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'emergency_message',\n      type: 'LONGTEXT',\n      isNullable: true,\n    }),\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1626779640972-addEmergencyButtonColumnsToProfileTable.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1626779640972-addEmergencyButtonColumnsToProfileTable.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1626779640972-addEmergencyButtonColumnsToProfileTable.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1626779640972-addEmergencyButtonColumnsToProfileTable.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, TableColumn } from 'typeorm';\n\nexport class AddEmergencyButtonColumnsToProfileTable1626779640972\n  implements MigrationInterface {\n  private tableName = 'profile';\n  private newColumns = [\n    new TableColumn({\n      name: 'emergency_email_and_sms',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'automated_voice_call',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'location_access',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'uploaded_documents_access',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'emergency_message',\n      type: 'LONGTEXT',\n      isNullable: true,\n    }),\n  ];\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.addColumns(this.tableName, this.newColumns);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropColumns(this.tableName, this.newColumns);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddFileCategoryTableWithValues1630406730426.html":{"url":"classes/AddFileCategoryTableWithValues1630406730426.html","title":"class - AddFileCategoryTableWithValues1630406730426","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddFileCategoryTableWithValues1630406730426\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1630406730426-addFileCategoryTableWithValues.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'file_category'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1630406730426-addFileCategoryTableWithValues.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1630406730426-addFileCategoryTableWithValues.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1630406730426-addFileCategoryTableWithValues.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, Table } from 'typeorm';\n\nexport class AddFileCategoryTableWithValues1630406730426\n  implements MigrationInterface\n{\n  private tableName = 'file_category';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.createTable(\n      new Table({\n        name: this.tableName,\n        columns: [\n          {\n            name: 'id',\n            type: 'tinyint',\n            isGenerated: true,\n            isPrimary: true,\n            generationStrategy: 'increment',\n          },\n          {\n            name: 'code',\n            type: 'varchar',\n            length: '100',\n            isNullable: true,\n          },\n          {\n            name: 'created_at',\n            type: 'datetime',\n            length: '6',\n            isNullable: false,\n            default: 'CURRENT_TIMESTAMP(6)',\n          },\n        ],\n      }),\n      true\n    );\n    await queryRunner.query(\n      `INSERT INTO \\`${this.tableName}\\` (\\`code\\`) VALUES ('medicalDirective'),('lastWill'),('other')`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropTable(this.tableName);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddFileDTO.html":{"url":"classes/AddFileDTO.html","title":"class - AddFileDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddFileDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/request/dto/add-file.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'enum', required: false, isArray: true, enum: undefined, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/request/dto/add-file.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { CATEGORY } from '../../enum/category.enum';\nimport { getEnumKeys } from '../../../common/helper/get-enum-keys';\n\nexport class AddFileDTO {\n  @ApiProperty({\n    type: 'enum',\n    required: false,\n    isArray: true,\n    enum: Object.values(CATEGORY),\n    example: CATEGORY.MEDICAL_DIRECTIVE,\n  })\n  category: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddFileTable1630406751456.html":{"url":"classes/AddFileTable1630406751456.html","title":"class - AddFileTable1630406751456","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddFileTable1630406751456\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1630406751456-addFileTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                foreignKeyCategoryId\n                            \n                            \n                                    Private\n                                foreignKeyUserId\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        foreignKeyCategoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FK_fileToFileCategory'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1630406751456-addFileTable.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        foreignKeyUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FK_fileToUser'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1630406751456-addFileTable.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'file'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1630406751456-addFileTable.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1630406751456-addFileTable.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1630406751456-addFileTable.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  MigrationInterface,\n  QueryRunner,\n  Table,\n  TableIndex,\n  TableForeignKey,\n} from 'typeorm';\n\nexport class AddFileTable1630406751456 implements MigrationInterface {\n  private tableName = 'file';\n  private foreignKeyCategoryId = 'FK_fileToFileCategory';\n  private foreignKeyUserId = 'FK_fileToUser';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.createTable(\n      new Table({\n        name: this.tableName,\n        columns: [\n          {\n            name: 'id',\n            type: 'int',\n            isGenerated: true,\n            isPrimary: true,\n            generationStrategy: 'increment',\n          },\n          {\n            name: 'user_id',\n            type: 'varchar',\n            length: '36',\n            isNullable: true,\n          },\n          {\n            name: 'category_id',\n            type: 'tinyint',\n            isNullable: false,\n          },\n          {\n            name: 'name',\n            type: 'varchar',\n            length: '255',\n            isNullable: false,\n          },\n          {\n            name: 'key',\n            type: 'varchar',\n            length: '100',\n            isNullable: false,\n          },\n          {\n            name: 'mime_type',\n            type: 'varchar',\n            length: '100',\n            isNullable: false,\n          },\n          {\n            name: 'size',\n            type: 'int',\n            isNullable: false,\n          },\n          {\n            name: 'created_at',\n            type: 'datetime',\n            length: '6',\n            isNullable: false,\n            default: 'CURRENT_TIMESTAMP(6)',\n          },\n        ],\n      }),\n      true\n    );\n    await queryRunner.createIndex(\n      this.tableName,\n      new TableIndex({\n        name: 'IDX_fileCategoryId',\n        columnNames: ['category_id'],\n      })\n    );\n    await queryRunner.createIndex(\n      this.tableName,\n      new TableIndex({\n        name: 'IDX_fileUserId',\n        columnNames: ['user_id'],\n      })\n    );\n    await queryRunner.createForeignKey(\n      this.tableName,\n      new TableForeignKey({\n        columnNames: ['category_id'],\n        referencedColumnNames: ['id'],\n        referencedTableName: 'file_category',\n        name: this.foreignKeyCategoryId,\n        onDelete: 'CASCADE',\n      })\n    );\n    await queryRunner.createForeignKey(\n      this.tableName,\n      new TableForeignKey({\n        columnNames: ['user_id'],\n        referencedColumnNames: ['id'],\n        referencedTableName: 'user',\n        name: this.foreignKeyUserId,\n        onDelete: 'CASCADE',\n      })\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropTable(this.tableName);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddLimitToFileCategoryTable1634809042779.html":{"url":"classes/AddLimitToFileCategoryTable1634809042779.html","title":"class - AddLimitToFileCategoryTable1634809042779","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddLimitToFileCategoryTable1634809042779\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1634809042779-addLimitToFileCategoryTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                categories\n                            \n                            \n                                    Private\n                                column\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      code: 'medicalDirective',\n      limit: 1,\n    },\n    {\n      code: 'lastWill',\n      limit: 1,\n    },\n    {\n      code: 'other',\n      limit: 5,\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1634809042779-addLimitToFileCategoryTable.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        column\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TableColumn({\n    name: 'limit',\n    type: 'tinyint',\n    default: 0,\n    unsigned: true,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1634809042779-addLimitToFileCategoryTable.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'file_category'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1634809042779-addLimitToFileCategoryTable.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1634809042779-addLimitToFileCategoryTable.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1634809042779-addLimitToFileCategoryTable.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, TableColumn } from 'typeorm';\n\nexport class AddLimitToFileCategoryTable1634809042779\n  implements MigrationInterface\n{\n  private tableName = 'file_category';\n  private column = new TableColumn({\n    name: 'limit',\n    type: 'tinyint',\n    default: 0,\n    unsigned: true,\n  });\n  private categories = [\n    {\n      code: 'medicalDirective',\n      limit: 1,\n    },\n    {\n      code: 'lastWill',\n      limit: 1,\n    },\n    {\n      code: 'other',\n      limit: 5,\n    },\n  ];\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.addColumn(this.tableName, this.column);\n\n    for (const category of this.categories) {\n      await queryRunner.query(\n        `UPDATE \\`${this.tableName}\\` SET \\`limit\\` = ? WHERE code = ?`,\n        [category.limit, category.code]\n      );\n    }\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropColumn(this.tableName, this.column);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddLocationToPositiveInfoTable1633335269397.html":{"url":"classes/AddLocationToPositiveInfoTable1633335269397.html","title":"class - AddLocationToPositiveInfoTable1633335269397","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddLocationToPositiveInfoTable1633335269397\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1633335269397-addLocationToPositiveInfoTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                column\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        column\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TableColumn({\n    name: 'location',\n    type: 'LONGTEXT',\n    isNullable: true,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1633335269397-addLocationToPositiveInfoTable.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'positive_info'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1633335269397-addLocationToPositiveInfoTable.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1633335269397-addLocationToPositiveInfoTable.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1633335269397-addLocationToPositiveInfoTable.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, TableColumn } from 'typeorm';\n\nexport class AddLocationToPositiveInfoTable1633335269397\n  implements MigrationInterface {\n  private tableName = 'positive_info';\n  private column = new TableColumn({\n    name: 'location',\n    type: 'LONGTEXT',\n    isNullable: true,\n  });\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.addColumn(this.tableName, this.column);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropColumn(this.tableName, this.column);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddLocationUrlToProfile1651485257652.html":{"url":"classes/AddLocationUrlToProfile1651485257652.html","title":"class - AddLocationUrlToProfile1651485257652","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddLocationUrlToProfile1651485257652\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1651485257652-addLocationUrlToProfile.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                column\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        column\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TableColumn({\n    name: \"location\",\n    type: \"LONGTEXT\",\n    isNullable: true,\n    default: null,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1651485257652-addLocationUrlToProfile.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"profile\"\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1651485257652-addLocationUrlToProfile.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1651485257652-addLocationUrlToProfile.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1651485257652-addLocationUrlToProfile.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, TableColumn } from \"typeorm\";\n\nexport class AddLocationUrlToProfile1651485257652\n  implements MigrationInterface {\n  private tableName = \"profile\";\n\n  private column = new TableColumn({\n    name: \"location\",\n    type: \"LONGTEXT\",\n    isNullable: true,\n    default: null,\n  });\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.addColumn(this.tableName, this.column);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropColumn(this.tableName, this.column);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html":{"url":"classes/AddMedicalInfoColumnsToProfileTable1626332132301.html","title":"class - AddMedicalInfoColumnsToProfileTable1626332132301","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddMedicalInfoColumnsToProfileTable1626332132301\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1626332132301-addMedicalInfoColumnsToProfileTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                newColumns\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        newColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    new TableColumn({\n      name: 'primary_phisican',\n      type: 'LONGTEXT',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'primary_phisican_address',\n      type: 'LONGTEXT',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'serious_medical_issues',\n      type: 'LONGTEXT',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'most_recent_diagnosis',\n      type: 'LONGTEXT',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'last_hospital_visit',\n      type: 'LONGTEXT',\n      isNullable: true,\n    }),\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1626332132301-addMedicalInfoColumnsToProfileTable.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1626332132301-addMedicalInfoColumnsToProfileTable.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1626332132301-addMedicalInfoColumnsToProfileTable.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1626332132301-addMedicalInfoColumnsToProfileTable.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, TableColumn } from 'typeorm';\n\nexport class AddMedicalInfoColumnsToProfileTable1626332132301\n  implements MigrationInterface {\n  private tableName = 'profile';\n  private newColumns = [\n    new TableColumn({\n      name: 'primary_phisican',\n      type: 'LONGTEXT',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'primary_phisican_address',\n      type: 'LONGTEXT',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'serious_medical_issues',\n      type: 'LONGTEXT',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'most_recent_diagnosis',\n      type: 'LONGTEXT',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'last_hospital_visit',\n      type: 'LONGTEXT',\n      isNullable: true,\n    }),\n  ];\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.addColumns(this.tableName, this.newColumns);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropColumns(this.tableName, this.newColumns);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddPositiveInfoTable1632807482818.html":{"url":"classes/AddPositiveInfoTable1632807482818.html","title":"class - AddPositiveInfoTable1632807482818","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddPositiveInfoTable1632807482818\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1632807482818-addPositiveInfoTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                foreignKeyUserId\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        foreignKeyUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FK_positiveInfoToUser'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1632807482818-addPositiveInfoTable.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'positive_info'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1632807482818-addPositiveInfoTable.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1632807482818-addPositiveInfoTable.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1632807482818-addPositiveInfoTable.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  MigrationInterface,\n  QueryRunner,\n  Table,\n  TableIndex,\n  TableForeignKey,\n} from 'typeorm';\n\nexport class AddPositiveInfoTable1632807482818 implements MigrationInterface {\n  private tableName = 'positive_info';\n  private foreignKeyUserId = 'FK_positiveInfoToUser';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.createTable(\n      new Table({\n        name: this.tableName,\n        columns: [\n          {\n            name: 'id',\n            type: 'int',\n            isGenerated: true,\n            isPrimary: true,\n            generationStrategy: 'increment',\n          },\n          {\n            name: 'user_id',\n            type: 'varchar',\n            length: '36',\n            isNullable: true,\n          },\n          {\n            name: 'minutes_to_next',\n            type: 'smallint',\n            isNullable: false,\n            unsigned: true,\n          },\n          {\n            name: 'created_at',\n            type: 'datetime',\n            isNullable: false,\n            default: 'CURRENT_TIMESTAMP()',\n          },\n          {\n            name: 'updated_at',\n            type: 'datetime',\n            isNullable: false,\n            default: 'CURRENT_TIMESTAMP()',\n          },\n        ],\n      }),\n      true\n    );\n    await queryRunner.createIndex(\n      this.tableName,\n      new TableIndex({\n        name: 'IDX_positiveInfoUserId',\n        columnNames: ['user_id'],\n      })\n    );\n    await queryRunner.createForeignKey(\n      this.tableName,\n      new TableForeignKey({\n        columnNames: ['user_id'],\n        referencedColumnNames: ['id'],\n        referencedTableName: 'user',\n        name: this.foreignKeyUserId,\n        onDelete: 'CASCADE',\n      })\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropTable(this.tableName);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddProfileTable1626246168913.html":{"url":"classes/AddProfileTable1626246168913.html","title":"class - AddProfileTable1626246168913","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddProfileTable1626246168913\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1626246168913-addProfileTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                foreignKeyUserId\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        foreignKeyUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FK_profileToUser'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1626246168913-addProfileTable.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1626246168913-addProfileTable.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1626246168913-addProfileTable.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1626246168913-addProfileTable.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  MigrationInterface,\n  QueryRunner,\n  Table,\n  TableIndex,\n  TableForeignKey,\n} from 'typeorm';\n\nexport class AddProfileTable1626246168913 implements MigrationInterface {\n  private tableName = 'profile';\n  private foreignKeyUserId = 'FK_profileToUser';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.createTable(\n      new Table({\n        name: this.tableName,\n        columns: [\n          {\n            name: 'id',\n            type: 'int',\n            isGenerated: true,\n            isPrimary: true,\n            generationStrategy: 'increment',\n          },\n          {\n            name: 'user_id',\n            type: 'varchar',\n            length: '36',\n            isNullable: true,\n          },\n          {\n            name: 'name',\n            type: 'LONGTEXT',\n            isNullable: true,\n          },\n          {\n            name: 'surname',\n            type: 'LONGTEXT',\n            isNullable: true,\n          },\n          {\n            name: 'prefix',\n            type: 'LONGTEXT',\n            isNullable: true,\n          },\n          {\n            name: 'phone',\n            type: 'LONGTEXT',\n            isNullable: true,\n          },\n          {\n            name: 'address',\n            type: 'LONGTEXT',\n            isNullable: true,\n          },\n          {\n            name: 'date_of_birth',\n            type: 'LONGTEXT',\n            isNullable: true,\n          },\n          {\n            name: 'created_at',\n            type: 'datetime',\n            length: '6',\n            isNullable: false,\n            default: 'CURRENT_TIMESTAMP(6)',\n          },\n          {\n            name: 'updated_at',\n            type: 'datetime',\n            length: '6',\n            isNullable: true,\n            default: 'CURRENT_TIMESTAMP(6)',\n          },\n        ],\n      })\n    );\n    await queryRunner.createIndex(\n      this.tableName,\n      new TableIndex({\n        name: 'IDX_contactUserId',\n        columnNames: ['user_id'],\n      })\n    );\n    await queryRunner.createForeignKey(\n      this.tableName,\n      new TableForeignKey({\n        columnNames: ['user_id'],\n        referencedColumnNames: ['id'],\n        referencedTableName: 'user',\n        name: this.foreignKeyUserId,\n        onDelete: 'CASCADE',\n      })\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropTable(this.tableName);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddPulseBasedColumnsToProfileTable1635501555344.html":{"url":"classes/AddPulseBasedColumnsToProfileTable1635501555344.html","title":"class - AddPulseBasedColumnsToProfileTable1635501555344","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddPulseBasedColumnsToProfileTable1635501555344\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1635501555344-addPulseBasedColumnsToProfileTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                newColumns\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        newColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    new TableColumn({\n      name: 'pulse_based_trigger_ios_health_permissions',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'pulse_based_trigger_ios_apple_watch_paired',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'pulse_based_trigger_google_fit_authenticated',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'pulse_based_trigger_connected_to_google_fit',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'pulse_based_trigger_background_modes_enabled',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1635501555344-addPulseBasedColumnsToProfileTable.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1635501555344-addPulseBasedColumnsToProfileTable.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1635501555344-addPulseBasedColumnsToProfileTable.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1635501555344-addPulseBasedColumnsToProfileTable.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, TableColumn } from 'typeorm';\n\nexport class AddPulseBasedColumnsToProfileTable1635501555344\n  implements MigrationInterface\n{\n  private tableName = 'profile';\n  private newColumns = [\n    new TableColumn({\n      name: 'pulse_based_trigger_ios_health_permissions',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'pulse_based_trigger_ios_apple_watch_paired',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'pulse_based_trigger_google_fit_authenticated',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'pulse_based_trigger_connected_to_google_fit',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'pulse_based_trigger_background_modes_enabled',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n  ];\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.addColumns(this.tableName, this.newColumns);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropColumns(this.tableName, this.newColumns);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html":{"url":"classes/AddPushNotificationTimeToPositiveInfoTable1632979503392.html","title":"class - AddPushNotificationTimeToPositiveInfoTable1632979503392","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddPushNotificationTimeToPositiveInfoTable1632979503392\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1632979503392-addPushNotificationTimeToPositiveInfoTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                column\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        column\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TableColumn({\n    name: 'push_notification_time',\n    type: 'datetime',\n    isNullable: true,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1632979503392-addPushNotificationTimeToPositiveInfoTable.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'positive_info'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1632979503392-addPushNotificationTimeToPositiveInfoTable.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1632979503392-addPushNotificationTimeToPositiveInfoTable.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1632979503392-addPushNotificationTimeToPositiveInfoTable.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, TableColumn } from 'typeorm';\n\nexport class AddPushNotificationTimeToPositiveInfoTable1632979503392\n  implements MigrationInterface\n{\n  private tableName = 'positive_info';\n  private column = new TableColumn({\n    name: 'push_notification_time',\n    type: 'datetime',\n    isNullable: true,\n  });\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.addColumn(this.tableName, this.column);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropColumn(this.tableName, this.column);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html":{"url":"classes/AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245.html","title":"class - AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1632733981245-addRegularPushNotificationAndFrequencySettingsToProfileTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                newColumns\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        newColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    new TableColumn({\n      name: 'regular_push_notification',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'frequency_of_regular_notification',\n      type: 'smallint',\n      isNullable: true,\n      unsigned: true,\n    }),\n    new TableColumn({\n      name: 'positive_info_period',\n      type: 'smallint',\n      isNullable: true,\n      unsigned: true,\n    }),\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1632733981245-addRegularPushNotificationAndFrequencySettingsToProfileTable.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1632733981245-addRegularPushNotificationAndFrequencySettingsToProfileTable.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1632733981245-addRegularPushNotificationAndFrequencySettingsToProfileTable.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1632733981245-addRegularPushNotificationAndFrequencySettingsToProfileTable.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, TableColumn } from 'typeorm';\n\nexport class AddRegularPushNotificationAndFrequencySettingsToProfileTable1632733981245\n  implements MigrationInterface\n{\n  private tableName = 'profile';\n  private newColumns = [\n    new TableColumn({\n      name: 'regular_push_notification',\n      type: 'tinyint',\n      length: '1',\n      isNullable: true,\n    }),\n    new TableColumn({\n      name: 'frequency_of_regular_notification',\n      type: 'smallint',\n      isNullable: true,\n      unsigned: true,\n    }),\n    new TableColumn({\n      name: 'positive_info_period',\n      type: 'smallint',\n      isNullable: true,\n      unsigned: true,\n    }),\n  ];\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.addColumns(this.tableName, this.newColumns);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropColumns(this.tableName, this.newColumns);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddRoleToUserTable1625843279739.html":{"url":"classes/AddRoleToUserTable1625843279739.html","title":"class - AddRoleToUserTable1625843279739","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddRoleToUserTable1625843279739\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1625843279739-addRoleToUserTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                column\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        column\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TableColumn({\n    name: 'role',\n    type: 'tinyint',\n    length: '1',\n    isNullable: false,\n    default: 0,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1625843279739-addRoleToUserTable.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1625843279739-addRoleToUserTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1625843279739-addRoleToUserTable.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1625843279739-addRoleToUserTable.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, TableColumn } from 'typeorm';\n\nexport class AddRoleToUserTable1625843279739 implements MigrationInterface {\n  private tableName = 'user';\n  private column = new TableColumn({\n    name: 'role',\n    type: 'tinyint',\n    length: '1',\n    isNullable: false,\n    default: 0,\n  });\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.addColumn(this.tableName, this.column);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropColumn(this.tableName, this.column);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddSmsTimeToPositiveInfoTable1632995635641.html":{"url":"classes/AddSmsTimeToPositiveInfoTable1632995635641.html","title":"class - AddSmsTimeToPositiveInfoTable1632995635641","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddSmsTimeToPositiveInfoTable1632995635641\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1632995635641-addSmsTimeToPositiveInfoTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                column\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        column\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TableColumn({\n    name: 'sms_time',\n    type: 'datetime',\n    isNullable: true,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1632995635641-addSmsTimeToPositiveInfoTable.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'positive_info'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1632995635641-addSmsTimeToPositiveInfoTable.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1632995635641-addSmsTimeToPositiveInfoTable.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1632995635641-addSmsTimeToPositiveInfoTable.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, TableColumn } from 'typeorm';\n\nexport class AddSmsTimeToPositiveInfoTable1632995635641\n  implements MigrationInterface\n{\n  private tableName = 'positive_info';\n  private column = new TableColumn({\n    name: 'sms_time',\n    type: 'datetime',\n    isNullable: true,\n  });\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.addColumn(this.tableName, this.column);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropColumn(this.tableName, this.column);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AddTimeSlotController.html":{"url":"controllers/AddTimeSlotController.html","title":"controller - AddTimeSlotController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AddTimeSlotController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/trigger-time-slot/controller/add-time-slot.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTimeSlot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addTimeSlot\n                        \n                    \n                \n            \n            \n                \n                    \n                    addTimeSlot(user: UserEntity, data: AddTimeSlotDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, type: TimeSlotIdRO})@ApiResponse({status: 400, type: ErrorMessageRO})@ApiOperation({summary: 'Add time slot by user'})@Roles(['undefined'])@Post('time-slot')\n                \n            \n\n            \n                \n                    Defined in src/trigger-time-slot/controller/add-time-slot.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AddTimeSlotDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, UseGuards } from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n} from '@nestjs/swagger';\nimport { RolesGuard } from '../../authentication/roles.guard';\nimport { Roles } from '../../authentication/decorator/roles.decorator';\nimport { Reflector } from '@nestjs/core';\nimport { plainToClass } from 'class-transformer';\nimport { TriggerTimeSlotService } from '../service/trigger-time-slot.service';\nimport { User } from '../../authentication/decorator/user.decorator';\nimport { UserEntity, ROLES } from '../../user/entity/user.entity';\nimport { TimeSlotIdRO } from '../response/time-slot-id.ro';\nimport { AddTimeSlotDTO } from '../request/dto/add-time-slot.dto';\nimport { addTimeSlotSchema } from '../request/schema/add-time-slot.schema';\nimport { ValidationPipe } from '../../common/pipe/validation.pipe';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ErrorMessageRO } from '../../common/response/error.ro';\nimport { TimeSlotEntity } from '../entity/time-slot.entity';\n\n@ApiBearerAuth()\n@UseGuards(new RolesGuard(new Reflector()))\n@UseGuards(AuthGuard('cognito'))\n@ApiTags('time-slot')\n@Controller()\nexport class AddTimeSlotController {\n  constructor(\n    private readonly triggerTimeSlotService: TriggerTimeSlotService\n  ) {}\n\n  @ApiResponse({ status: 201, type: TimeSlotIdRO })\n  @ApiResponse({ status: 400, type: ErrorMessageRO })\n  @ApiOperation({ summary: 'Add time slot by user' })\n  @Roles([ROLES.USER])\n  @Post('time-slot')\n  async addTimeSlot(\n    @User() user: UserEntity,\n    @Body(new ValidationPipe(addTimeSlotSchema))\n    data: AddTimeSlotDTO\n  ) {\n    let timeSlot: TimeSlotEntity;\n\n    if (!data.from) {\n      timeSlot = await this.triggerTimeSlotService.findByUserIdAndPeriodStart(\n        user.id,\n        null\n      );\n    }\n\n    if (!timeSlot) {\n      timeSlot = await this.triggerTimeSlotService.saveTimeSlot(user.id, data);\n    } else {\n      timeSlot = await this.triggerTimeSlotService.updateTimeSlot(\n        timeSlot,\n        user.id,\n        data\n      );\n    }\n\n    return plainToClass(TimeSlotIdRO, timeSlot);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddTimeSlotDTO.html":{"url":"classes/AddTimeSlotDTO.html","title":"class - AddTimeSlotDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddTimeSlotDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/trigger-time-slot/request/dto/add-time-slot.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                active\n                            \n                            \n                                days\n                            \n                            \n                                    Optional\n                                from\n                            \n                            \n                                timezone\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/request/dto/add-time-slot.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        days\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'enum', required: false, isArray: true, enum: undefined, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/request/dto/add-time-slot.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/request/dto/add-time-slot.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timezone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/request/dto/add-time-slot.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/request/dto/add-time-slot.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { DAYS_OF_WEEKS } from '../../enum/days-of-week.enum';\nimport { getEnumKeys } from '../../../common/helper/get-enum-keys';\n\nexport class AddTimeSlotDTO {\n  @ApiProperty({ type: Boolean, required: false })\n  active?: boolean;\n\n  @ApiProperty({ type: Date, required: false })\n  from?: Date;\n\n  @ApiProperty({ type: Date, required: true })\n  to: Date;\n\n  @ApiProperty({ type: String, required: true })\n  timezone: string;\n\n  @ApiProperty({\n    type: 'enum',\n    required: false,\n    isArray: true,\n    enum: getEnumKeys(DAYS_OF_WEEKS, true),\n    example: [getEnumKeys(DAYS_OF_WEEKS, true)[0]],\n  })\n  days: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddTimeSlotDayTable1629364845785.html":{"url":"classes/AddTimeSlotDayTable1629364845785.html","title":"class - AddTimeSlotDayTable1629364845785","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddTimeSlotDayTable1629364845785\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1629364845785-addTimeSlotDayTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                foreignKeyUserId\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        foreignKeyUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FK_timeSlotDayToTimeSlot'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1629364845785-addTimeSlotDayTable.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'time_slot_day'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1629364845785-addTimeSlotDayTable.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1629364845785-addTimeSlotDayTable.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1629364845785-addTimeSlotDayTable.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  MigrationInterface,\n  QueryRunner,\n  Table,\n  TableIndex,\n  TableForeignKey,\n} from 'typeorm';\n\nexport class AddTimeSlotDayTable1629364845785 implements MigrationInterface {\n  private tableName = 'time_slot_day';\n  private foreignKeyUserId = 'FK_timeSlotDayToTimeSlot';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.createTable(\n      new Table({\n        name: this.tableName,\n        columns: [\n          {\n            name: 'id',\n            type: 'int',\n            isGenerated: true,\n            isPrimary: true,\n            generationStrategy: 'increment',\n          },\n          {\n            name: 'time_slot_id',\n            type: 'int',\n            isNullable: false,\n          },\n          {\n            name: 'day_of_week',\n            type: 'tinyint',\n            isNullable: false,\n          },\n        ],\n      }),\n      true\n    );\n    await queryRunner.createIndex(\n      this.tableName,\n      new TableIndex({\n        name: 'IDX_timeSlotDayTimeSlotId',\n        columnNames: ['time_slot_id'],\n      })\n    );\n    await queryRunner.createForeignKey(\n      this.tableName,\n      new TableForeignKey({\n        columnNames: ['time_slot_id'],\n        referencedColumnNames: ['id'],\n        referencedTableName: 'time_slot',\n        name: this.foreignKeyUserId,\n        onDelete: 'CASCADE',\n      })\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddTimeSlotTable1629364182226.html":{"url":"classes/AddTimeSlotTable1629364182226.html","title":"class - AddTimeSlotTable1629364182226","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddTimeSlotTable1629364182226\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1629364182226-addTimeSlotTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                foreignKeyUserId\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        foreignKeyUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FK_timeSlotToUser'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1629364182226-addTimeSlotTable.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'time_slot'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1629364182226-addTimeSlotTable.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1629364182226-addTimeSlotTable.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1629364182226-addTimeSlotTable.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  MigrationInterface,\n  QueryRunner,\n  Table,\n  TableIndex,\n  TableForeignKey,\n} from 'typeorm';\n\nexport class AddTimeSlotTable1629364182226 implements MigrationInterface {\n  private tableName = 'time_slot';\n  private foreignKeyUserId = 'FK_timeSlotToUser';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.createTable(\n      new Table({\n        name: this.tableName,\n        columns: [\n          {\n            name: 'id',\n            type: 'int',\n            isGenerated: true,\n            isPrimary: true,\n            generationStrategy: 'increment',\n          },\n          {\n            name: 'user_id',\n            type: 'varchar',\n            length: '36',\n            isNullable: true,\n          },\n          {\n            name: 'active',\n            type: 'boolean',\n            default: false,\n          },\n          {\n            name: 'from',\n            type: 'datetime',\n            length: '6',\n            isNullable: true,\n          },\n          {\n            name: 'to',\n            type: 'datetime',\n            length: '6',\n            isNullable: false,\n          },\n          {\n            name: 'created_at',\n            type: 'datetime',\n            length: '6',\n            isNullable: false,\n            default: 'CURRENT_TIMESTAMP(6)',\n          },\n        ],\n      }),\n      true\n    );\n    await queryRunner.createIndex(\n      this.tableName,\n      new TableIndex({\n        name: 'IDX_timeSlotUserId',\n        columnNames: ['user_id'],\n      })\n    );\n    await queryRunner.createForeignKey(\n      this.tableName,\n      new TableForeignKey({\n        columnNames: ['user_id'],\n        referencedColumnNames: ['id'],\n        referencedTableName: 'user',\n        name: this.foreignKeyUserId,\n        onDelete: 'CASCADE',\n      })\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropForeignKey(this.tableName, this.foreignKeyUserId);\n    await queryRunner.dropTable(this.tableName);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddTimezoneToProfile1651485422367.html":{"url":"classes/AddTimezoneToProfile1651485422367.html","title":"class - AddTimezoneToProfile1651485422367","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddTimezoneToProfile1651485422367\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1651485422367-addTimezoneToProfile.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                column\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        column\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TableColumn({\n    name: \"timezone\",\n    type: \"varchar\",\n    length: \"200\",\n    isNullable: true,\n    default: null,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1651485422367-addTimezoneToProfile.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"profile\"\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1651485422367-addTimezoneToProfile.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1651485422367-addTimezoneToProfile.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1651485422367-addTimezoneToProfile.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, TableColumn } from \"typeorm\";\n\nexport class AddTimezoneToProfile1651485422367\n  implements MigrationInterface {\n  private tableName = \"profile\";\n\n  private column = new TableColumn({\n    name: \"timezone\",\n    type: \"varchar\",\n    length: \"200\",\n    isNullable: true,\n    default: null,\n  });\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.addColumn(this.tableName, this.column);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropColumn(this.tableName, this.column);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddTimezoneToSlots1651485422366.html":{"url":"classes/AddTimezoneToSlots1651485422366.html","title":"class - AddTimezoneToSlots1651485422366","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddTimezoneToSlots1651485422366\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1651485422366-addTimezoneToSlots.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                column\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        column\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TableColumn({\n    name: \"timezone\",\n    type: \"varchar\",\n    length: \"200\",\n    isNullable: true,\n    default: null,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1651485422366-addTimezoneToSlots.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"time_slot\"\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1651485422366-addTimezoneToSlots.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1651485422366-addTimezoneToSlots.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1651485422366-addTimezoneToSlots.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, TableColumn } from \"typeorm\";\n\nexport class AddTimezoneToSlots1651485422366\n  implements MigrationInterface\n{\n  private tableName = \"time_slot\";\n\n  private column = new TableColumn({\n    name: \"timezone\",\n    type: \"varchar\",\n    length: \"200\",\n    isNullable: true,\n    default: null,\n  });\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.addColumn(this.tableName, this.column);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropColumn(this.tableName, this.column);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html":{"url":"classes/AddTriggerTimeToPositiveInfoTable1633099510340.html","title":"class - AddTriggerTimeToPositiveInfoTable1633099510340","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddTriggerTimeToPositiveInfoTable1633099510340\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1633099510340-addTriggerTimeToPositiveInfoTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                column\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        column\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TableColumn({\n    name: 'trigger_time',\n    type: 'datetime',\n    isNullable: true,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1633099510340-addTriggerTimeToPositiveInfoTable.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'positive_info'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1633099510340-addTriggerTimeToPositiveInfoTable.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1633099510340-addTriggerTimeToPositiveInfoTable.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1633099510340-addTriggerTimeToPositiveInfoTable.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, TableColumn } from 'typeorm';\n\nexport class AddTriggerTimeToPositiveInfoTable1633099510340\n  implements MigrationInterface\n{\n  private tableName = 'positive_info';\n  private column = new TableColumn({\n    name: 'trigger_time',\n    type: 'datetime',\n    isNullable: true,\n  });\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.addColumn(this.tableName, this.column);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropColumn(this.tableName, this.column);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddUnconfirmedEmailTable1626421452168.html":{"url":"classes/AddUnconfirmedEmailTable1626421452168.html","title":"class - AddUnconfirmedEmailTable1626421452168","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddUnconfirmedEmailTable1626421452168\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1626421452168-addUnconfirmedEmailTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                foreignKeyUserId\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        foreignKeyUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FK_unconfirmedEmailToUser'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1626421452168-addUnconfirmedEmailTable.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'unconfirmed_email'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1626421452168-addUnconfirmedEmailTable.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1626421452168-addUnconfirmedEmailTable.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1626421452168-addUnconfirmedEmailTable.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  MigrationInterface,\n  QueryRunner,\n  Table,\n  TableIndex,\n  TableForeignKey,\n} from 'typeorm';\n\nexport class AddUnconfirmedEmailTable1626421452168\n  implements MigrationInterface {\n  private tableName = 'unconfirmed_email';\n  private foreignKeyUserId = 'FK_unconfirmedEmailToUser';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.createTable(\n      new Table({\n        name: this.tableName,\n        columns: [\n          {\n            name: 'id',\n            type: 'int',\n            isGenerated: true,\n            isPrimary: true,\n            generationStrategy: 'increment',\n          },\n          {\n            name: 'user_id',\n            type: 'varchar',\n            length: '36',\n            isNullable: false,\n          },\n          {\n            name: 'email',\n            type: 'LONGTEXT',\n            isNullable: false,\n          },\n          {\n            name: 'code',\n            type: 'varchar',\n            isNullable: false,\n            length: '36',\n          },\n          {\n            name: 'created_at',\n            type: 'datetime',\n            length: '6',\n            isNullable: false,\n            default: 'CURRENT_TIMESTAMP(6)',\n          },\n        ],\n      })\n    );\n    await queryRunner.createIndex(\n      this.tableName,\n      new TableIndex({\n        name: 'IDX_contactUserId',\n        columnNames: ['user_id'],\n      })\n    );\n    await queryRunner.createForeignKey(\n      this.tableName,\n      new TableForeignKey({\n        columnNames: ['user_id'],\n        referencedColumnNames: ['id'],\n        referencedTableName: 'user',\n        name: this.foreignKeyUserId,\n        onDelete: 'CASCADE',\n      })\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropTable(this.tableName);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddUserTable1625563196521.html":{"url":"classes/AddUserTable1625563196521.html","title":"class - AddUserTable1625563196521","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddUserTable1625563196521\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1625563196521-addUserTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1625563196521-addUserTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1625563196521-addUserTable.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1625563196521-addUserTable.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, Table } from 'typeorm';\n\nexport class AddUserTable1625563196521 implements MigrationInterface {\n  private tableName = 'user';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.createTable(\n      new Table({\n        name: this.tableName,\n        columns: [\n          {\n            name: 'id',\n            type: 'varchar',\n            length: '36',\n            isPrimary: true,\n          },\n          {\n            name: 'email',\n            type: 'LONGTEXT',\n            isNullable: false,\n          },\n          {\n            name: 'created_at',\n            type: 'datetime',\n            length: '6',\n            isNullable: false,\n            default: 'CURRENT_TIMESTAMP(6)',\n          },\n          {\n            name: 'updated_at',\n            type: 'datetime',\n            length: '6',\n            isNullable: true,\n            default: 'CURRENT_TIMESTAMP(6)',\n          },\n        ],\n      })\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropTable(this.tableName);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthorizationModule->AppModule\n\n\n\n\n\nContactModule\n\nContactModule\n\nAppModule -->\n\nContactModule->AppModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nMessageModule\n\nMessageModule\n\nAppModule -->\n\nMessageModule->AppModule\n\n\n\n\n\nNotificationModule\n\nNotificationModule\n\nAppModule -->\n\nNotificationModule->AppModule\n\n\n\n\n\nQueueModule\n\nQueueModule\n\nAppModule -->\n\nQueueModule->AppModule\n\n\n\n\n\nSchedulerModule\n\nSchedulerModule\n\nAppModule -->\n\nSchedulerModule->AppModule\n\n\n\n\n\nTriggerTimeSlotModule\n\nTriggerTimeSlotModule\n\nAppModule -->\n\nTriggerTimeSlotModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            ContactModule\n                        \n                        \n                            FileModule\n                        \n                        \n                            MessageModule\n                        \n                        \n                            NotificationModule\n                        \n                        \n                            QueueModule\n                        \n                        \n                            SchedulerModule\n                        \n                        \n                            TriggerTimeSlotModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule, TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport { AuthorizationModule } from './authentication/authenticaiton.module';\nimport { UserModule } from './user/user.module';\nimport { ContactModule } from './contact/contact.module';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport configuration from './config/default';\nimport { NotificationModule } from './notification/notification.module';\nimport { MessageModule } from './message/message.module';\nimport { BullModule } from '@nestjs/bull';\nimport { QueueModule } from './queue/queue.module';\nimport { RedisProvider } from './common/provider/redis.provider';\nimport { TriggerTimeSlotModule } from './trigger-time-slot/trigger-time-slot.module';\nimport { FileModule } from './file/file.module';\nimport { SchedulerModule } from './scheduler/scheduler.module';\nimport { ConfigModule } from '@nestjs/config';\n\nconst config = configuration();\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      ...config.database,\n      entities: [`${__dirname}/**/*.entity{.ts,.js}`],\n      migrationsRun: process.env.NODE_ENV === 'test',\n      migrations: [`${__dirname}/migrations/*{.ts,.js}`],\n      subscribers: [`${__dirname}/**/*.entity-subscriber{.ts,.js}`],\n      timezone: 'Z',\n    } as TypeOrmModuleOptions),\n    ThrottlerModule.forRoot({\n      ttl: 10,\n      limit: 10,\n    }),\n    BullModule.forRoot({\n      redis: {\n        host: config.redis.host,\n        port: +config.redis.port,\n        password: config.redis.password,\n      },\n    }),\n    SchedulerModule,\n    AuthorizationModule,\n    UserModule,\n    ContactModule,\n    NotificationModule,\n    QueueModule,\n    MessageModule,\n    TriggerTimeSlotModule,\n    FileModule,\n    ConfigModule.forRoot({\n      load: [configuration],\n    }),\n  ],\n  providers: [RedisProvider],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/service/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                pem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                authenticate\n                            \n                            \n                                    Public\n                                    Async\n                                getPem\n                            \n                            \n                                    Async\n                                getTokens\n                            \n                            \n                                getUserAttributes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cognito: AWS.CognitoIdentityServiceProvider, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/service/authentication.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cognito\n                                                  \n                                                        \n                                                                        AWS.CognitoIdentityServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                    \n                    authenticate(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/authentication/service/authentication.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getPem\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPem()\n                \n            \n\n\n            \n                \n                    Defined in src/authentication/service/authentication.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTokens(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/authentication/service/authentication.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserAttributes\n                        \n                    \n                \n            \n            \n                \ngetUserAttributes(tokenSub: string)\n                \n            \n\n\n            \n                \n                    Defined in src/authentication/service/authentication.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tokenSub\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AuthenticationService.name)\n                    \n                \n                    \n                        \n                                Defined in src/authentication/service/authentication.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        pem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/authentication/service/authentication.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport * as AWS from 'aws-sdk';\nimport axios from 'axios';\nimport * as jwkToPem from 'jwk-to-pem';\nimport { DICTIONARY } from '../../common/constant/dictionary.constant';\nimport * as jwt from 'jsonwebtoken';\nimport { ICognito } from '../interface/cognito.interface';\n\n@Injectable()\nexport class AuthenticationService {\n  private pem: string;\n  protected readonly logger = new Logger(AuthenticationService.name);\n\n  constructor(\n    @Inject(AWS.CognitoIdentityServiceProvider)\n    private readonly cognito: AWS.CognitoIdentityServiceProvider,\n    @Inject(DICTIONARY.CONFIG) private readonly config: ConfigService\n  ) {}\n\n  public async getPem() {\n    return axios\n      .get(this.config.get('authorization.jwks'))\n      .then((res: any) => {\n        const jwks = res.data.keys[1];\n\n        if (res?.data?.keys.length  {\n        this.logger.error(error.response, 'AWS credentials are wrong');\n      });\n  }\n\n  public async authenticate(token: string) {\n    return new Promise(async (resolve, reject) => {\n      if (!this.pem) {\n        await this.getPem();\n      }\n\n      jwt.verify(token, this.pem, (error, decodedToken) => {\n        if (error) {\n          reject(error);\n        }\n        resolve(decodedToken);\n      });\n    });\n  }\n\n  getUserAttributes(tokenSub: string): Promise {\n    return new Promise((resolve) => {\n      this.cognito.listUsers(\n        {\n          UserPoolId: this.config.get('authorization.userPoolId'),\n          Filter: `sub = \"${tokenSub}\"`,\n        },\n        (error, data) => {\n          if (error || data.Users.length !== 1) {\n            Logger.error(error?.message || null, error?.stack);\n            resolve(null);\n            return;\n          }\n\n          const attributes = {};\n\n          data.Users[0].Attributes.forEach(\n            (attribute) => (attributes[attribute.Name] = attribute.Value)\n          );\n\n          resolve(attributes as ICognito);\n        }\n      );\n    });\n  }\n\n  async getTokens(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      this.cognito.initiateAuth(\n        {\n          AuthFlow: 'USER_PASSWORD_AUTH',\n          AuthParameters: {\n            USERNAME: email,\n            PASSWORD: password,\n          },\n          ClientId: this.config.get('authorization.clientId'),\n        },\n        (error, result) => {\n          if (!error) {\n            resolve(result);\n            return;\n          }\n          reject(error);\n        }\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\n\nAuthenticationService \n\nAuthenticationService \n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthenticationService  -->\n\nAuthorizationModule->AuthenticationService \n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAuthorizationModule -->\n\nAuthenticationService->AuthorizationModule\n\n\n\n\n\nCognitoStrategy\n\nCognitoStrategy\n\nAuthorizationModule -->\n\nCognitoStrategy->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/authentication/authenticaiton.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                        \n                            CognitoStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GetAccessTokenController\n                        \n                        \n                            LogoutController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthenticationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { CognitoStrategy } from './strategy/cognito.strategy';\nimport { AuthenticationService } from './service/authentication.service';\nimport { CognitoIdentityServiceProvider } from '../common/provider/cognito-identity-service.provider';\nimport { ConfigProvider } from '../common/provider/config.provider';\nimport { UserModule } from '../user/user.module';\nimport { GetAccessTokenController } from './controller/get-access-token.controller';\nimport { ConfigModule } from '@nestjs/config';\nimport configuration from '../config/default';\nimport { LogoutController } from './controller/logout.controller';\n\n@Module({\n  imports: [\n    PassportModule.register({ defaultStrategy: 'cognito' }),\n    forwardRef(() => UserModule),\n    ConfigModule.forRoot({\n      load: [configuration],\n    }),\n  ],\n  controllers: [GetAccessTokenController, LogoutController],\n  providers: [\n    CognitoStrategy,\n    AuthenticationService,\n    CognitoIdentityServiceProvider,\n    ConfigProvider,\n  ],\n  exports: [AuthenticationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BasicConsumer.html":{"url":"classes/BasicConsumer.html","title":"class - BasicConsumer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BasicConsumer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queue/consumer/basic.consumer.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onActive\n                            \n                            \n                                onComplete\n                            \n                            \n                                onError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/queue/consumer/basic.consumer.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/queue/consumer/basic.consumer.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onActive\n                        \n                    \n                \n            \n            \n                \nonActive(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueActive()\n                \n            \n\n            \n                \n                    Defined in src/queue/consumer/basic.consumer.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onComplete\n                        \n                    \n                \n            \n            \n                \nonComplete(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueCompleted()\n                \n            \n\n            \n                \n                    Defined in src/queue/consumer/basic.consumer.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onError\n                        \n                    \n                \n            \n            \n                \nonError(job: Job, error: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueFailed()\n                \n            \n\n            \n                \n                    Defined in src/queue/consumer/basic.consumer.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OnQueueActive, OnQueueCompleted, OnQueueFailed } from '@nestjs/bull';\nimport { Logger } from '@nestjs/common';\nimport { Job } from 'bull';\n\nexport class BasicConsumer {\n  protected readonly logger: Logger;\n\n  constructor(logger: Logger) {\n    this.logger = logger;\n  }\n\n  @OnQueueActive()\n  onActive(job: Job): void { }\n\n  @OnQueueCompleted()\n  onComplete(job: Job): void { }\n\n  @OnQueueFailed()\n  onError(job: Job, error: any): void {\n    this.logger.error(\n      `Failed job ${job.id} of type ${job.name}: ${error.message}`,\n      error.stack\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CancelEmergencyMessageController.html":{"url":"controllers/CancelEmergencyMessageController.html","title":"controller - CancelEmergencyMessageController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CancelEmergencyMessageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/message/controller/cancel-emergency-message.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                message\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                cancelEmergencyMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        cancelEmergencyMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelEmergencyMessage(user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, type: SuccessRO})@ApiResponse({status: 400, type: ErrorMessageRO})@ApiOperation({summary: 'Cancel emergency message'})@Roles(['undefined'])@Delete('cancel/emergency')\n                \n            \n\n            \n                \n                    Defined in src/message/controller/cancel-emergency-message.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Delete,\n  Body,\n  UseGuards,\n  BadRequestException,\n} from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n} from '@nestjs/swagger';\nimport { RolesGuard } from '../../authentication/roles.guard';\nimport { Roles } from '../../authentication/decorator/roles.decorator';\nimport { Reflector } from '@nestjs/core';\nimport { MessageService } from '../../queue/service/message.service';\nimport { User } from '../../authentication/decorator/user.decorator';\nimport { UserEntity, ROLES } from '../../user/entity/user.entity';\nimport { SuccessRO } from '../../common/response/success.ro';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ErrorMessageRO } from '../../common/response/error.ro';\n\n@ApiBearerAuth()\n@UseGuards(new RolesGuard(new Reflector()))\n@UseGuards(AuthGuard('cognito'))\n@ApiTags('message')\n@Controller('message')\nexport class CancelEmergencyMessageController {\n  constructor(private readonly messageService: MessageService) {}\n\n  @ApiResponse({ status: 201, type: SuccessRO })\n  @ApiResponse({ status: 400, type: ErrorMessageRO })\n  @ApiOperation({ summary: 'Cancel emergency message' })\n  @Roles([ROLES.USER])\n  @Delete('cancel/emergency')\n  async cancelEmergencyMessage(@User() user: UserEntity) {\n    await this.messageService.removeJobsByUserId(user.id);\n\n    return { success: true };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryRO.html":{"url":"classes/CategoryRO.html","title":"class - CategoryRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/response/category.ro.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                files\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/response/category.ro.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileRO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: FileRO, isArray: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/response/category.ro.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { FileRO } from './file.ro';\n\n@Exclude()\nexport class CategoryRO {\n  @Expose()\n  @ApiProperty({ type: String })\n  code: string;\n\n  @Expose()\n  @ApiProperty({ type: FileRO, isArray: true })\n  files: FileRO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CognitoStrategy.html":{"url":"injectables/CognitoStrategy.html","title":"injectable - CognitoStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CognitoStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/strategy/cognito.strategy.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/strategy/cognito.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ExtractJwt } from 'passport-jwt';\nimport { UserService } from '../../user/service/user.service';\nimport { PassportStrategy as Strategy } from '../strategy/passport.strategy';\nimport { AuthenticationService } from '../service/authentication.service';\n\n@Injectable()\nexport class CognitoStrategy extends PassportStrategy(Strategy, 'cognito') {\n  constructor(\n    private readonly userService: UserService,\n    private readonly authService: AuthenticationService\n  ) {\n    super(\n      {\n        jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n        auth: authService,\n        logger: new Logger(CognitoStrategy.name),\n      },\n      async (request, token, done) => {\n        const userAttributes = await this.authService.getUserAttributes(\n          token?.sub\n        );\n\n        if (!userAttributes) {\n          done(null);\n          return;\n        }\n\n        let user = await this.userService.findByEmail(userAttributes.email);\n\n        if (!user) {\n          await new Promise((resolve, reject) => {\n            this.userService\n              .saveUser(token?.sub, userAttributes.email)\n              .then((result) => resolve(result))\n              .catch((err) => {\n                this.logger.error(JSON.stringify(err));\n                reject(err);\n              });\n          }).catch(() => {\n            done(null);\n          });\n\n          user = await this.userService.findByEmail(userAttributes.email);\n        }\n\n        done(user, null);\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ConfirmUserEmailController.html":{"url":"controllers/ConfirmUserEmailController.html","title":"controller - ConfirmUserEmailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ConfirmUserEmailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/confirm-user-email.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmUserEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        confirmUserEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    confirmUserEmail(data: ConfirmUserEmailDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: SuccessRO})@ApiResponse({status: 400, type: ErrorMessageRO})@ApiOperation({summary: 'Confirm email by user'})@Roles(['undefined'])@Patch('email/confirm')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/confirm-user-email.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ConfirmUserEmailDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Patch, Body } from '@nestjs/common';\nimport { ApiTags, ApiResponse, ApiOperation } from '@nestjs/swagger';\nimport { plainToClass } from 'class-transformer';\nimport { Roles } from '../../authentication/decorator/roles.decorator';\nimport { UserService } from '../service/user.service';\nimport { ROLES } from '../../user/entity/user.entity';\nimport { ConfirmUserEmailDTO } from '../request/dto/confirm-user-email.dto';\nimport { confirmUserEmailSchema } from '../request/schema/confirm-user-email.schema';\nimport { ValidationPipe } from '../../common/pipe/validation.pipe';\nimport { ErrorMessageRO } from '../../common/response/error.ro';\nimport { UnconfirmedEmailService } from '../service/unconfirmed-email.service';\nimport { SuccessRO } from '../../common/response/success.ro';\n\n@ApiTags('user')\n@Controller('user')\nexport class ConfirmUserEmailController {\n  constructor(\n    private readonly userService: UserService,\n    private readonly unconfirmedEmailService: UnconfirmedEmailService\n  ) {}\n\n  @ApiResponse({ status: 200, type: SuccessRO })\n  @ApiResponse({ status: 400, type: ErrorMessageRO })\n  @ApiOperation({ summary: 'Confirm email by user' })\n  @Roles([ROLES.USER])\n  @Patch('email/confirm')\n  async confirmUserEmail(\n    @Body(new ValidationPipe(confirmUserEmailSchema))\n    data: ConfirmUserEmailDTO\n  ) {\n    const unconfirmedEmail =\n      await this.unconfirmedEmailService.findByCodeOrFail(data.code);\n\n    await this.unconfirmedEmailService.changeUserEmailInCognito(\n      unconfirmedEmail.user,\n      unconfirmedEmail.email\n    );\n\n    const result = await this.userService.updateUserEmail(\n      unconfirmedEmail.user.id,\n      unconfirmedEmail.email\n    );\n\n    return plainToClass(SuccessRO, { success: !!result.affected });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfirmUserEmailDTO.html":{"url":"classes/ConfirmUserEmailDTO.html","title":"class - ConfirmUserEmailDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfirmUserEmailDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/request/dto/confirm-user-email.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 36, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/confirm-user-email.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class ConfirmUserEmailDTO {\n  @ApiProperty({ type: String, maxLength: 36, required: true })\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ContactEntity.html":{"url":"entities/ContactEntity.html","title":"entity - ContactEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ContactEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/entity/contact.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                prefix\n                            \n                            \n                                surname\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/entity/contact.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/entity/contact.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 320})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/entity/contact.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/entity/contact.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/entity/contact.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 12})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/entity/contact.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/entity/contact.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/entity/contact.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/entity/contact.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @JoinColumn({name: 'user_id'})@ManyToOne(undefined, user => user.contacts)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/entity/contact.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'user_id', type: 'varchar', length: 36})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/entity/contact.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  PrimaryGeneratedColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n  JoinColumn,\n  ManyToOne,\n} from 'typeorm';\nimport { UserEntity } from '../../user/entity/user.entity';\n\n@Entity('contact')\nexport class ContactEntity {\n  @PrimaryGeneratedColumn({ type: 'int' })\n  id: number;\n\n  @Column({ type: 'boolean' })\n  active: boolean;\n\n  @Column({ name: 'user_id', type: 'varchar', length: 36 })\n  userId: string;\n\n  @Column({ type: 'varchar', length: 320 })\n  email: string;\n\n  @Column({ type: 'varchar', length: 100 })\n  name: string;\n\n  @Column({ type: 'varchar', length: 100 })\n  surname: string;\n\n  @Column({ type: 'varchar', length: 3 })\n  prefix: number;\n\n  @Column({ type: 'varchar', length: 12 })\n  phone: string;\n\n  @CreateDateColumn({ name: 'created_at', type: 'datetime' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at', type: 'datetime' })\n  updatedAt: Date;\n\n  @JoinColumn({ name: 'user_id' })\n  @ManyToOne(() => UserEntity, (user: UserEntity) => user.contacts)\n  user: UserEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContactEntitySubscriber.html":{"url":"classes/ContactEntitySubscriber.html","title":"class - ContactEntitySubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContactEntitySubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/entity/contact.entity-subscriber.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        EntitySubscriberInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                encryptionColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterLoad\n                            \n                            \n                                beforeInsert\n                            \n                            \n                                beforeUpdate\n                            \n                            \n                                listenTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        encryptionColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n        'email',\n        'name',\n        'surname',\n        'prefix',\n        'phone',\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/contact/entity/contact.entity-subscriber.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterLoad\n                        \n                    \n                \n            \n            \n                \nafterLoad(entity: ContactEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/entity/contact.entity-subscriber.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                ContactEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        beforeInsert\n                        \n                    \n                \n            \n            \n                \nbeforeInsert(event: InsertEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/entity/contact.entity-subscriber.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                InsertEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     void | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        beforeUpdate\n                        \n                    \n                \n            \n            \n                \nbeforeUpdate(event: UpdateEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/entity/contact.entity-subscriber.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     void | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listenTo\n                        \n                    \n                \n            \n            \n                \nlistenTo()\n                \n            \n\n\n            \n                \n                    Defined in src/contact/entity/contact.entity-subscriber.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntitySubscriberInterface, EventSubscriber, InsertEvent, UpdateEvent } from \"typeorm\"\nimport { decryptEntity, encryptEntity } from \"../../common/helper/entity-encrypter\";\nimport { ContactEntity } from \"./contact.entity\";\n\n@EventSubscriber()\nexport class ContactEntitySubscriber implements EntitySubscriberInterface {\n    private readonly encryptionColumns = [\n        'email',\n        'name',\n        'surname',\n        'prefix',\n        'phone',\n    ];\n\n    listenTo() {\n        return ContactEntity\n    }\n\n    beforeInsert(event: InsertEvent): void | Promise {\n        encryptEntity(event.entity, this.encryptionColumns);\n    }\n\n    beforeUpdate(event: UpdateEvent): void | Promise {\n        encryptEntity(event.entity, this.encryptionColumns);\n    }\n\n    afterLoad(entity: ContactEntity) {\n        decryptEntity(entity, this.encryptionColumns);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContactIdRO.html":{"url":"classes/ContactIdRO.html","title":"class - ContactIdRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContactIdRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/response/contact-id.ro.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/response/contact-id.ro.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Exclude()\nexport class ContactIdRO {\n  @Expose()\n  @ApiProperty({ type: String })\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ContactListController.html":{"url":"controllers/ContactListController.html","title":"controller - ContactListController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ContactListController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/controller/contact-list.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                contact\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getContactList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getContactList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getContactList(user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: ContactRO, isArray: true})@ApiResponse({status: 400, type: ErrorMessageRO})@ApiOperation({summary: 'Get contact list'})@Roles(['undefined'])@Get()\n                \n            \n\n            \n                \n                    Defined in src/contact/controller/contact-list.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n} from '@nestjs/swagger';\nimport { RolesGuard } from '../../authentication/roles.guard';\nimport { Roles } from '../../authentication/decorator/roles.decorator';\nimport { Reflector } from '@nestjs/core';\nimport { plainToClass } from 'class-transformer';\nimport { ContactService } from '../service/contact.service';\nimport { User } from '../../authentication/decorator/user.decorator';\nimport { UserEntity, ROLES } from '../../user/entity/user.entity';\nimport { ContactRO } from '../response/contact.ro';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ErrorMessageRO } from '../../common/response/error.ro';\n\n@ApiBearerAuth()\n@UseGuards(new RolesGuard(new Reflector()))\n@UseGuards(AuthGuard('cognito'))\n@ApiTags('contact')\n@Controller('contact')\nexport class ContactListController {\n  constructor(private readonly contactService: ContactService) {}\n\n  @ApiResponse({ status: 200, type: ContactRO, isArray: true })\n  @ApiResponse({ status: 400, type: ErrorMessageRO })\n  @ApiOperation({ summary: 'Get contact list' })\n  @Roles([ROLES.USER])\n  @Get()\n  async getContactList(@User() user: UserEntity) {\n    const contacts = await this.contactService.findContactsByUserId(user.id);\n\n    return contacts.map((contact) => plainToClass(ContactRO, contact));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactModule.html":{"url":"modules/ContactModule.html","title":"module - ContactModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ContactModule\n\n\n\ncluster_ContactModule_exports\n\n\n\ncluster_ContactModule_providers\n\n\n\n\nContactService \n\nContactService \n\n\n\nContactModule\n\nContactModule\n\nContactService  -->\n\nContactModule->ContactService \n\n\n\n\n\nContactService\n\nContactService\n\nContactModule -->\n\nContactService->ContactModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/contact/contact.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ContactService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AddContactController\n                        \n                        \n                            ContactListController\n                        \n                        \n                            UpdateContactController\n                        \n                        \n                            DeleteContactController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContactService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ContactService } from './service/contact.service';\nimport { ConfigProvider } from '../common/provider/config.provider';\nimport { ContactRepositoryProvider } from './provider/contact-repository.provider';\nimport { AddContactController } from './controller/add-contact.controller';\nimport { ContactListController } from './controller/contact-list.controller';\nimport { UpdateContactController } from './controller/update-contact.controller';\nimport { DeleteContactController } from './controller/delete-contact.controller';\nimport { GoogleLibPhoneNumberProvider } from '../common/provider/google-phone-number.provider';\nimport { ConfigModule } from '@nestjs/config';\nimport configuration from '../config/default';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [configuration],\n    }),\n  ],\n  controllers: [\n    AddContactController,\n    ContactListController,\n    UpdateContactController,\n    DeleteContactController,\n  ],\n  providers: [\n    ContactService,\n    ConfigProvider,\n    ContactRepositoryProvider,\n    GoogleLibPhoneNumberProvider,\n  ],\n  exports: [ContactService, ContactRepositoryProvider],\n})\nexport class ContactModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContactRO.html":{"url":"classes/ContactRO.html","title":"class - ContactRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContactRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/response/contact.ro.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                active\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                    Optional\n                                prefix\n                            \n                            \n                                    Optional\n                                surname\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/response/contact.ro.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/response/contact.ro.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/response/contact.ro.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/response/contact.ro.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/response/contact.ro.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/response/contact.ro.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        prefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/response/contact.ro.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/response/contact.ro.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/response/contact.ro.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Exclude()\nexport class ContactRO {\n  @Expose()\n  @ApiProperty({ type: String })\n  id: string;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  name?: string;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  surname?: string;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  phone?: string;\n\n  @Expose()\n  @ApiProperty({ type: Number })\n  prefix?: number;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  email?: string;\n\n  @Expose()\n  @ApiProperty({ type: Boolean })\n  active?: boolean;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  createdAt: string;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  updatedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContactRepository.html":{"url":"classes/ContactRepository.html","title":"class - ContactRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContactRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/repository/contact.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findManyByParams\n                            \n                            \n                                findOneByParams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ContactRepository.name)\n                    \n                \n                    \n                        \n                                Defined in src/contact/repository/contact.repository.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findManyByParams\n                        \n                    \n                \n            \n            \n                \nfindManyByParams(params: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/repository/contact.repository.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByParams\n                        \n                    \n                \n            \n            \n                \nfindOneByParams(params: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/repository/contact.repository.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Logger } from '@nestjs/common';\nimport { ContactEntity } from '../entity/contact.entity';\n\n@EntityRepository(ContactEntity)\nexport class ContactRepository extends Repository {\n  protected readonly logger = new Logger(ContactRepository.name);\n\n  findOneByParams(params: Record): Promise {\n    return new Promise((resolve) => {\n      this.findOne(params)\n        .then((data) => resolve(data))\n        .catch((error) => this.logger.error(error));\n    });\n  }\n\n  findManyByParams(params: Record): Promise {\n    return new Promise((resolve) => {\n      this.find(params)\n        .then((data) => resolve(data))\n        .catch((error) => this.logger.error(error));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/service/contact.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteContact\n                            \n                            \n                                    Async\n                                findActiveContactsByUserId\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByIdAndUserIdOrFail\n                            \n                            \n                                    Async\n                                findContactsByUserId\n                            \n                            \n                                    Async\n                                saveContact\n                            \n                            \n                                    Async\n                                updateContact\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(contactRepository: ContactRepository)\n                    \n                \n                        \n                            \n                                Defined in src/contact/service/contact.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contactRepository\n                                                  \n                                                        \n                                                                        ContactRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteContact(contactId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/service/contact.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contactId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findActiveContactsByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findActiveContactsByUserId(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/service/contact.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/service/contact.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByIdAndUserIdOrFail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAndUserIdOrFail(id: number, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/service/contact.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findContactsByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findContactsByUserId(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/service/contact.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveContact(userId: string, data: AddContactDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/service/contact.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AddContactDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateContact(contact: ContactEntity, data: UpdateContactDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/service/contact.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contact\n                                    \n                                                ContactEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateContactDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ContactService.name)\n                    \n                \n                    \n                        \n                                Defined in src/contact/service/contact.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  BadRequestException,\n  Logger,\n} from '@nestjs/common';\nimport { UpdateResult, DeleteResult } from 'typeorm';\nimport { ContactRepository } from '../repository/contact.repository';\nimport { ContactEntity } from '../entity/contact.entity';\nimport { AddContactDTO } from '../request/dto/add-contact.dto';\nimport { UpdateContactDTO } from '../request/dto/update-contact.dto';\nimport {\n  CONTACT_NOT_FOUND,\n  VALIDATION_FAILED,\n  SAVE_CONTACT_FAILED,\n  DELETE_CONTACT_FAILED,\n  UPDATE_CONTACT_FAILED,\n} from '../../common/error/keys';\n\n@Injectable()\nexport class ContactService {\n  private readonly logger = new Logger(ContactService.name);\n\n  constructor(\n    @Inject(ContactRepository)\n    private readonly contactRepository: ContactRepository\n  ) {}\n\n  async findContactsByUserId(userId: string) {\n    return this.contactRepository.findManyByParams({ userId });\n  }\n\n  async findActiveContactsByUserId(userId: string) {\n    const contacts = await this.findContactsByUserId(userId);\n\n    return contacts.filter((contact) => contact.active);\n  }\n\n  async findByIdAndUserIdOrFail(\n    id: number,\n    userId: string\n  ): Promise {\n    return this.contactRepository\n      .findOneByParams({\n        id,\n        userId,\n      })\n      .then((data) => {\n        if (!data) {\n          throw new BadRequestException(CONTACT_NOT_FOUND);\n        }\n\n        return data;\n      });\n  }\n\n  async findById(id: number) {\n    return this.contactRepository.findOneByParams({ id });\n  }\n\n  async deleteContact(contactId: number): Promise {\n    return this.contactRepository.delete(contactId).catch((error) => {\n      this.logger.error(error);\n      throw new BadRequestException(DELETE_CONTACT_FAILED);\n    });\n  }\n\n  async saveContact(\n    userId: string,\n    data: AddContactDTO\n  ): Promise {\n    return this.contactRepository\n      .save({\n        ...data,\n        userId,\n      })\n      .catch((error) => {\n        this.logger.error(error);\n        throw new BadRequestException(SAVE_CONTACT_FAILED);\n      });\n  }\n\n  async updateContact(\n    contact: ContactEntity,\n    data: UpdateContactDTO\n  ): Promise {\n    if (\n      !(\n        (data.email === undefined && data.phone === undefined) ||\n        data.email ||\n        data.phone\n      )\n    ) {\n      throw new BadRequestException(VALIDATION_FAILED);\n    }\n\n    return this.contactRepository\n      .update(\n        {\n          id: contact.id,\n        },\n        { ...data }\n      )\n      .catch((error) => {\n        this.logger.error(error);\n        throw new BadRequestException(UPDATE_CONTACT_FAILED);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomError.html":{"url":"classes/CustomError.html","title":"class - CustomError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/error/custom-error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Private\n                                    Readonly\n                                httpCode\n                            \n                            \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, error: object | ValidationError, httpCode: number)\n                    \n                \n                        \n                            \n                                Defined in src/common/error/custom-error.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                    object | ValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :     object | ValidationError\n\n                    \n                \n                    \n                        \n                                Defined in src/common/error/custom-error.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        httpCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/error/custom-error.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/error/custom-error.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/common/error/custom-error.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ValidationError} from 'joi';\n\nexport class CustomError extends Error {\n  public error: object | ValidationError;\n  public message: string;\n  private readonly httpCode: number;\n\n  constructor(\n    message: string,\n    error: object | ValidationError,\n    httpCode: number = 400,\n  ) {\n    super();\n    this.message = message;\n    this.httpCode = httpCode;\n    this.error = error;\n  }\n\n  getStatus() {\n    return this.httpCode;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeleteContactController.html":{"url":"controllers/DeleteContactController.html","title":"controller - DeleteContactController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeleteContactController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/controller/delete-file.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                file\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFile(user: UserEntity, fileId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: SuccessRO})@ApiResponse({status: 400, type: ErrorMessageRO})@ApiOperation({summary: 'Delete file by user'})@Roles(['undefined'])@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/file/controller/delete-file.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, UseGuards, Param } from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n} from '@nestjs/swagger';\nimport { RolesGuard } from '../../authentication/roles.guard';\nimport { Roles } from '../../authentication/decorator/roles.decorator';\nimport { Reflector } from '@nestjs/core';\nimport { plainToClass } from 'class-transformer';\nimport { FileService } from '../service/file.service';\nimport { User } from '../../authentication/decorator/user.decorator';\nimport { UserEntity, ROLES } from '../../user/entity/user.entity';\nimport { SuccessRO } from '../../common/response/success.ro';\nimport { AuthGuard } from '@nestjs/passport';\nimport { NumericIdValidationPipe } from '../../common/pipe/numeric-id-validation.pipe';\nimport { ErrorMessageRO } from '../../common/response/error.ro';\n\n@ApiBearerAuth()\n@UseGuards(new RolesGuard(new Reflector()))\n@UseGuards(AuthGuard('cognito'))\n@ApiTags('file')\n@Controller('file')\nexport class DeleteContactController {\n  constructor(private readonly fileService: FileService) {}\n\n  @ApiResponse({ status: 200, type: SuccessRO })\n  @ApiResponse({ status: 400, type: ErrorMessageRO })\n  @ApiOperation({ summary: 'Delete file by user' })\n  @Roles([ROLES.USER])\n  @Delete(':id')\n  async deleteFile(\n    @User() user: UserEntity,\n    @Param('id', new NumericIdValidationPipe()) fileId: number\n  ) {\n    const file = await this.fileService.findByIdAndUserIdOrFail(\n      fileId,\n      user.id\n    );\n\n    const result = await this.fileService.deleteFile(file);\n\n    return plainToClass(SuccessRO, { success: !!result?.affected });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeleteContactController-1.html":{"url":"controllers/DeleteContactController-1.html","title":"controller - DeleteContactController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeleteContactController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/controller/delete-contact.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                contact\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteContact\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteContact(user: UserEntity, contactId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: SuccessRO})@ApiResponse({status: 400, type: ErrorMessageRO})@ApiOperation({summary: 'Delete contact by user'})@Roles(['undefined'])@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/contact/controller/delete-contact.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contactId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, UseGuards, Param } from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n} from '@nestjs/swagger';\nimport { RolesGuard } from '../../authentication/roles.guard';\nimport { Roles } from '../../authentication/decorator/roles.decorator';\nimport { Reflector } from '@nestjs/core';\nimport { plainToClass } from 'class-transformer';\nimport { ContactService } from '../service/contact.service';\nimport { User } from '../../authentication/decorator/user.decorator';\nimport { UserEntity, ROLES } from '../../user/entity/user.entity';\nimport { SuccessRO } from '../../common/response/success.ro';\nimport { AuthGuard } from '@nestjs/passport';\nimport { NumericIdValidationPipe } from '../../common/pipe/numeric-id-validation.pipe';\nimport { ErrorMessageRO } from '../../common/response/error.ro';\n\n@ApiBearerAuth()\n@UseGuards(new RolesGuard(new Reflector()))\n@UseGuards(AuthGuard('cognito'))\n@ApiTags('contact')\n@Controller('contact')\nexport class DeleteContactController {\n  constructor(private readonly contactService: ContactService) {}\n\n  @ApiResponse({ status: 200, type: SuccessRO })\n  @ApiResponse({ status: 400, type: ErrorMessageRO })\n  @ApiOperation({ summary: 'Delete contact by user' })\n  @Roles([ROLES.USER])\n  @Delete(':id')\n  async deleteContact(\n    @User() user: UserEntity,\n    @Param('id', new NumericIdValidationPipe()) contactId: number\n  ) {\n    const contact = await this.contactService.findByIdAndUserIdOrFail(\n      contactId,\n      user.id\n    );\n\n    const result = await this.contactService.deleteContact(contact.id);\n\n    return plainToClass(SuccessRO, { success: !!result?.affected });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeleteTimeSlotController.html":{"url":"controllers/DeleteTimeSlotController.html","title":"controller - DeleteTimeSlotController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeleteTimeSlotController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/trigger-time-slot/controller/delete-time-slot.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                time-slot\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteTimeSlot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteTimeSlot\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTimeSlot(user: UserEntity, timeSlotId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: SuccessRO})@ApiResponse({status: 400, type: ErrorMessageRO})@ApiOperation({summary: 'Delete time slot by user'})@Roles(['undefined'])@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/trigger-time-slot/controller/delete-time-slot.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeSlotId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, UseGuards, Param } from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n} from '@nestjs/swagger';\nimport { RolesGuard } from '../../authentication/roles.guard';\nimport { Roles } from '../../authentication/decorator/roles.decorator';\nimport { Reflector } from '@nestjs/core';\nimport { plainToClass } from 'class-transformer';\nimport { TriggerTimeSlotService } from '../service/trigger-time-slot.service';\nimport { User } from '../../authentication/decorator/user.decorator';\nimport { UserEntity, ROLES } from '../../user/entity/user.entity';\nimport { SuccessRO } from '../../common/response/success.ro';\nimport { AuthGuard } from '@nestjs/passport';\nimport { NumericIdValidationPipe } from '../../common/pipe/numeric-id-validation.pipe';\nimport { ErrorMessageRO } from '../../common/response/error.ro';\n\n@ApiBearerAuth()\n@UseGuards(new RolesGuard(new Reflector()))\n@UseGuards(AuthGuard('cognito'))\n@ApiTags('time-slot')\n@Controller('time-slot')\nexport class DeleteTimeSlotController {\n  constructor(private readonly timeSlotService: TriggerTimeSlotService) {}\n\n  @ApiResponse({ status: 200, type: SuccessRO })\n  @ApiResponse({ status: 400, type: ErrorMessageRO })\n  @ApiOperation({ summary: 'Delete time slot by user' })\n  @Roles([ROLES.USER])\n  @Delete(':id')\n  async deleteTimeSlot(\n    @User() user: UserEntity,\n    @Param('id', new NumericIdValidationPipe()) timeSlotId: number\n  ) {\n    const contact = await this.timeSlotService.findByIdAndUserIdOrFail(\n      timeSlotId,\n      user.id\n    );\n\n    const result = await this.timeSlotService.deleteTimeSlot(contact.id);\n\n    return plainToClass(SuccessRO, { success: !!result?.affected });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeleteUserController.html":{"url":"controllers/DeleteUserController.html","title":"controller - DeleteUserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeleteUserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/delete-account.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAccount(user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: SuccessRO})@ApiResponse({status: 400, type: ErrorMessageRO})@ApiOperation({summary: 'Delete account by owner'})@Roles(['undefined'])@Delete()\n                \n            \n\n            \n                \n                    Defined in src/user/controller/delete-account.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, UseGuards, Param } from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n} from '@nestjs/swagger';\nimport { RolesGuard } from '../../authentication/roles.guard';\nimport { Roles } from '../../authentication/decorator/roles.decorator';\nimport { Reflector } from '@nestjs/core';\nimport { plainToClass } from 'class-transformer';\nimport { UserService } from '../service/user.service';\nimport { User } from '../../authentication/decorator/user.decorator';\nimport { UserEntity, ROLES } from '../../user/entity/user.entity';\nimport { SuccessRO } from '../../common/response/success.ro';\nimport { AuthGuard } from '@nestjs/passport';\nimport { NumericIdValidationPipe } from '../../common/pipe/numeric-id-validation.pipe';\nimport { ErrorMessageRO } from '../../common/response/error.ro';\n\n@ApiBearerAuth()\n@UseGuards(new RolesGuard(new Reflector()))\n@UseGuards(AuthGuard('cognito'))\n@ApiTags('user')\n@Controller('user')\nexport class DeleteUserController {\n  constructor(private readonly userService: UserService) {}\n\n  @ApiResponse({ status: 200, type: SuccessRO })\n  @ApiResponse({ status: 400, type: ErrorMessageRO })\n  @ApiOperation({ summary: 'Delete account by owner' })\n  @Roles([ROLES.USER])\n  @Delete()\n  async deleteAccount(@User() user: UserEntity) {\n    const result = await this.userService.deleteUser(user);\n\n    return plainToClass(SuccessRO, { success: !!result?.affected });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Encrypter.html":{"url":"classes/Encrypter.html","title":"class - Encrypter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Encrypter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helper/encrypter.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                algorithm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                decrypt\n                            \n                            \n                                    Static\n                                encrypt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        algorithm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'aes-256-ctr'\n                    \n                \n                    \n                        \n                                Defined in src/common/helper/encrypter.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        decrypt\n                        \n                    \n                \n            \n            \n                \n                    \n                    decrypt(hash: string, secretKey?: string, iv?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/helper/encrypter.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    secretKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    iv\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        encrypt\n                        \n                    \n                \n            \n            \n                \n                    \n                    encrypt(text: string, secretKey?: string, iv?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/helper/encrypter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    secretKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    iv\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as crypto from 'crypto';\nimport configuration from '../../config/default';\n\nexport class Encrypter {\n    private static readonly algorithm = 'aes-256-ctr';\n\n    static encrypt(text: string, secretKey?: string, iv?: string): string {\n        if (!text) return null;\n\n        const cipher = crypto.createCipheriv(\n            Encrypter.algorithm,\n            secretKey || configuration()?.application?.encryptionKey,\n            Buffer.from(iv || configuration()?.application?.encryptionIv, 'hex'),\n        );\n\n        const encrypted = Buffer.concat([cipher.update(text), cipher.final()]);\n\n        return encrypted.toString('hex');\n    }\n\n    static decrypt(hash: string, secretKey?: string, iv?: string): string {\n        if (!hash) return null;\n\n        const decipher = crypto.createDecipheriv(\n            Encrypter.algorithm,\n            secretKey || configuration()?.application?.encryptionKey,\n            Buffer.from(iv || configuration()?.application?.encryptionIv, 'hex'),\n        );\n\n        const decrpyted = Buffer.concat([\n            decipher.update(Buffer.from(hash, 'hex')),\n            decipher.final(),\n        ]);\n\n        return decrpyted.toString();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorMessageRO.html":{"url":"classes/ErrorMessageRO.html","title":"class - ErrorMessageRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorMessageRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/response/error.ro.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                error\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ErrorRO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: ErrorRO})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/response/error.ro.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\n\nexport class ErrorRO {\n  @Expose()\n  @ApiProperty({ type: Number })\n  readonly status: number;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  readonly timestamp: string;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  readonly path: string;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  readonly method: string;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  readonly code: string;\n}\n\n@Exclude()\nexport class ErrorMessageRO {\n  @Expose()\n  @ApiProperty({ type: ErrorRO })\n  readonly error: ErrorRO;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorRO.html":{"url":"classes/ErrorRO.html","title":"class - ErrorRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/response/error.ro.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                method\n                            \n                            \n                                    Readonly\n                                path\n                            \n                            \n                                    Readonly\n                                status\n                            \n                            \n                                    Readonly\n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/response/error.ro.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/response/error.ro.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/response/error.ro.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/response/error.ro.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/response/error.ro.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\n\nexport class ErrorRO {\n  @Expose()\n  @ApiProperty({ type: Number })\n  readonly status: number;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  readonly timestamp: string;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  readonly path: string;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  readonly method: string;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  readonly code: string;\n}\n\n@Exclude()\nexport class ErrorMessageRO {\n  @Expose()\n  @ApiProperty({ type: ErrorRO })\n  readonly error: ErrorRO;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExceptionsFilter.html":{"url":"classes/ExceptionsFilter.html","title":"class - ExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/error/exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ExceptionsFilter.name)\n                    \n                \n                    \n                        \n                                Defined in src/common/error/exception.filter.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        catch\n                        \n                    \n                \n            \n            \n                \n                    \n                    catch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/error/exception.filter.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpStatus,\n  Logger,\n} from '@nestjs/common';\nimport { UNKNOWN_ERROR, VALIDATION_FAILED } from './keys';\nimport { CustomError } from './custom-error';\n\n@Catch()\nexport class ExceptionsFilter implements ExceptionFilter {\n  protected readonly logger = new Logger(ExceptionsFilter.name);\n\n  public catch(exception: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n\n    const status = exception.getStatus\n      ? exception.getStatus()\n      : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const code =\n      status !== HttpStatus.INTERNAL_SERVER_ERROR\n        ? exception.message.message || exception.message || null\n        : UNKNOWN_ERROR;\n\n    const message =\n      status !== HttpStatus.INTERNAL_SERVER_ERROR\n        ? exception.error\n        : exception.message;\n    const errorResponse = {\n      error: {\n        status,\n        timestamp: new Date().toLocaleString(),\n        path: request.url,\n        method: request.method,\n        code,\n        data: {\n          body: request ? request?.body : null,\n          query: request ? request?.query : null,\n        }\n      },\n    };\n    if (process.env.NODE_ENV !== 'test' && status !== 404) {\n      const stack =\n        exception instanceof CustomError\n          ? JSON.stringify(exception.error) || exception\n          : exception.stack;\n      this.logger.error({ ...errorResponse, message }, stack);\n    }\n\n    response\n      .status(status)\n      .json(\n        code === VALIDATION_FAILED\n          ? { ...errorResponse, message }\n          : errorResponse\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExportService.html":{"url":"injectables/ExportService.html","title":"injectable - ExportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/service/export.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportDataAsBase64\n                            \n                            \n                                prepareContactsToExport\n                            \n                            \n                                prepareFilesToExport\n                            \n                            \n                                prepareProfileToExport\n                            \n                            \n                                prepareTimeSlotsToExport\n                            \n                            \n                                prepareUnconfirmedEmailsToExport\n                            \n                            \n                                prepareUserToExport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(contactRepository: ContactRepository, userRepository: UserRepository, profileRepository: ProfileRepository, timeSlotRepository: TimeSlotRepository, contactService: ContactService, unconfirmedEmailRepository: UnconfirmedEmailRepository, fileRepository: FileRepository, fileService: FileService)\n                    \n                \n                        \n                            \n                                Defined in src/user/service/export.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contactRepository\n                                                  \n                                                        \n                                                                        ContactRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        ProfileRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeSlotRepository\n                                                  \n                                                        \n                                                                        TimeSlotRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contactService\n                                                  \n                                                        \n                                                                        ContactService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unconfirmedEmailRepository\n                                                  \n                                                        \n                                                                        UnconfirmedEmailRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        FileRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportDataAsBase64\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportDataAsBase64(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/export.service.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepareContactsToExport\n                        \n                    \n                \n            \n            \n                \nprepareContactsToExport(contacts: ContactEntity[], data: Record[])\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/export.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contacts\n                                    \n                                                ContactEntity[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepareFilesToExport\n                        \n                    \n                \n            \n            \n                \nprepareFilesToExport(files: FileEntity[], data: Record[])\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/export.service.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                                FileEntity[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepareProfileToExport\n                        \n                    \n                \n            \n            \n                \nprepareProfileToExport(profile: ProfileEntity, data: Record[])\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/export.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profile\n                                    \n                                                ProfileEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepareTimeSlotsToExport\n                        \n                    \n                \n            \n            \n                \nprepareTimeSlotsToExport(timeSlots: TimeSlotEntity[], data: Record[])\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/export.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeSlots\n                                    \n                                                TimeSlotEntity[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepareUnconfirmedEmailsToExport\n                        \n                    \n                \n            \n            \n                \nprepareUnconfirmedEmailsToExport(unconfirmedEmails: UnconfirmedEmailEntity[], data: Record[])\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/export.service.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unconfirmedEmails\n                                    \n                                                UnconfirmedEmailEntity[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepareUserToExport\n                        \n                    \n                \n            \n            \n                \nprepareUserToExport(user: UserEntity, data: Record[])\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/export.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ExportService.name)\n                    \n                \n                    \n                        \n                                Defined in src/user/service/export.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from '@nestjs/common';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as uuid from 'uuid';\nimport * as moment from 'moment';\nimport { UserRepository } from '../repository/user.repository';\nimport { ProfileRepository } from '../repository/profile.repository';\nimport { omit } from '../../common/helper/omit';\nimport { ContactService } from '../../contact/service/contact.service';\nimport { UserEntity } from '../entity/user.entity';\nimport { ProfileEntity } from '../entity/profile.entity';\nimport { ContactRepository } from '../../contact/repository/contact.repository';\nimport { ContactEntity } from '../../contact/entity/contact.entity';\nimport { TimeSlotRepository } from '../../trigger-time-slot/repository/time-slot.repository';\nimport { TimeSlotEntity } from '../../trigger-time-slot/entity/time-slot.entity';\nimport { getEnumKeyByValue } from '../../common/helper/get-enum-key-by-value';\nimport { DAYS_OF_WEEKS } from '../../trigger-time-slot/enum/days-of-week.enum';\nimport { UnconfirmedEmailRepository } from '../../user/repository/unconfirmed-email.repository';\nimport { UnconfirmedEmailEntity } from '../entity/unconfirmed_email.entity';\nimport { FileRepository } from '../../file/repository/file.repository';\nimport { FileEntity } from '../../file/entity/file.entity';\nimport { FileService } from '../../file/service/file.service';\n\n@Injectable()\nexport class ExportService {\n  private readonly logger = new Logger(ExportService.name);\n\n  constructor(\n    @Inject(ContactRepository)\n    private readonly contactRepository: ContactRepository,\n    @Inject(UserRepository) private readonly userRepository: UserRepository,\n    @Inject(ProfileRepository)\n    private readonly profileRepository: ProfileRepository,\n    @Inject(TimeSlotRepository)\n    private readonly timeSlotRepository: TimeSlotRepository,\n    private readonly contactService: ContactService,\n    @Inject(UnconfirmedEmailRepository)\n    private readonly unconfirmedEmailRepository: UnconfirmedEmailRepository,\n    @Inject(FileRepository)\n    private readonly fileRepository: FileRepository,\n    private readonly fileService: FileService\n  ) {}\n\n  prepareUserToExport(\n    user: UserEntity,\n    data: Record[]\n  ): Record[] {\n    const useKeys = {};\n    const tableName = this.userRepository.metadata.tableName;\n\n    Object.keys(omit(user, ['id', 'role', 'profile'])).forEach(\n      (key, index) => (useKeys[index] = `${key} [${tableName}]`)\n    );\n\n    data.push(useKeys);\n    data.push(\n      omit(\n        {\n          ...user,\n          updatedAt: moment(user.updatedAt).toISOString(),\n          createdAt: moment(user.createdAt).toISOString(),\n        },\n        ['id', 'role', 'profile']\n      )\n    );\n    data.push({});\n\n    return data;\n  }\n\n  prepareProfileToExport(\n    profile: ProfileEntity,\n    data: Record[]\n  ): Record[] {\n    const profileKeys = {};\n    const tableName = this.profileRepository.metadata.tableName;\n\n    Object.keys(omit(profile, ['id', 'userId'])).forEach(\n      (key, index) => (profileKeys[index] = `${key} [${tableName}]`)\n    );\n\n    data.push(profileKeys);\n    data.push(\n      omit(\n        {\n          ...profile,\n          updatedAt: moment(profile.updatedAt).toISOString(),\n          createdAt: moment(profile.createdAt).toISOString(),\n          regularNotificationTime: moment(\n            profile.regularNotificationTime\n          ).toISOString(),\n        },\n        ['id', 'userId']\n      )\n    );\n    data.push({});\n\n    return data;\n  }\n\n  prepareContactsToExport(\n    contacts: ContactEntity[],\n    data: Record[]\n  ): Record[] {\n    const contactKeys = {};\n    const tableName = this.contactRepository.metadata.tableName;\n\n    Object.keys(omit(contacts[0], ['id', 'userId'])).forEach(\n      (key, index) => (contactKeys[index] = `${key} [${tableName}]`)\n    );\n    data.push(contactKeys);\n\n    for (const contact of contacts) {\n      data.push(\n        omit(\n          {\n            ...contact,\n            updatedAt: moment(contact.updatedAt).toISOString(),\n            createdAt: moment(contact.createdAt).toISOString(),\n          },\n          ['id', 'userId']\n        )\n      );\n    }\n\n    data.push({});\n\n    return data;\n  }\n\n  prepareTimeSlotsToExport(\n    timeSlots: TimeSlotEntity[],\n    data: Record[]\n  ): Record[] {\n    let timeSlotKeys = {};\n    const tableName = this.timeSlotRepository.metadata.tableName;\n\n    Object.keys(omit(timeSlots[0], ['id', 'userId'])).forEach(\n      (key, index) => (timeSlotKeys[index] = `${key} [${tableName}]`)\n    );\n\n    data.push(timeSlotKeys);\n\n    for (const timeSlot of timeSlots) {\n      data.push(\n        omit(\n          {\n            ...timeSlot,\n            from: timeSlot.from ? moment(timeSlot.from).toISOString() : null,\n            to: moment(timeSlot.from).toISOString(),\n            days: timeSlot.days\n              .map((item) => getEnumKeyByValue(DAYS_OF_WEEKS, item.day))\n              .join(', '),\n            createdAt: moment(timeSlot.createdAt).toISOString(),\n          },\n          ['id', 'userId']\n        )\n      );\n    }\n\n    data.push({});\n\n    return data;\n  }\n\n  prepareUnconfirmedEmailsToExport(\n    unconfirmedEmails: UnconfirmedEmailEntity[],\n    data: Record[]\n  ): Record[] {\n    const unconfirmedEmailKeys = {};\n    const tableName = this.unconfirmedEmailRepository.metadata.tableName;\n\n    Object.keys(omit(unconfirmedEmails[0], ['id', 'userId', 'code'])).forEach(\n      (key, index) => (unconfirmedEmailKeys[index] = `${key} [${tableName}]`)\n    );\n    data.push(unconfirmedEmailKeys);\n\n    for (const unconfirmedEmail of unconfirmedEmails) {\n      data.push(\n        omit(\n          {\n            ...unconfirmedEmail,\n            createdAt: moment(unconfirmedEmail.createdAt).toISOString(),\n          },\n          ['id', 'userId', 'code']\n        )\n      );\n    }\n\n    data.push({});\n\n    return data;\n  }\n\n  prepareFilesToExport(\n    files: FileEntity[],\n    data: Record[]\n  ): Record[] {\n    const fileKeys = {};\n    const tableName = this.fileRepository.metadata.tableName;\n\n    Object.keys(omit(files[0], ['id', 'userId', 'categoryId'])).forEach(\n      (key, index) => (fileKeys[index] = `${key} [${tableName}]`)\n    );\n    data.push(fileKeys);\n\n    for (const file of files) {\n      data.push(\n        omit(\n          {\n            ...file,\n            category: file.category.code,\n            url: this.fileService.getFileURL(file.key),\n            createdAt: moment(file.createdAt).toISOString(),\n          },\n          ['id', 'userId', 'categoryId']\n        )\n      );\n    }\n\n    data.push({});\n\n    return data;\n  }\n\n  async exportDataAsBase64(userId: string): Promise {\n    const filePath = `storage/${uuid.v4()}.xls`;\n    const [user, contacts, timeSlots, unconfirmedEmails, files] =\n      await Promise.all([\n        this.userRepository.findById(userId),\n        this.contactService.findContactsByUserId(userId),\n        this.timeSlotRepository.findByUserId(userId),\n        this.unconfirmedEmailRepository.findByUserId(userId),\n        this.fileRepository.findManyByParams({\n          where: { userId },\n          relations: ['category'],\n        }),\n      ]);\n\n    let dataAsString = '';\n    let dataAsArray = [];\n\n    dataAsArray = this.prepareUserToExport(user, dataAsArray);\n\n    if (user.profile) {\n      dataAsArray = this.prepareProfileToExport(user.profile, dataAsArray);\n    }\n\n    if (unconfirmedEmails.length > 0) {\n      dataAsArray = this.prepareUnconfirmedEmailsToExport(\n        unconfirmedEmails,\n        dataAsArray\n      );\n    }\n\n    if (contacts.length > 0) {\n      dataAsArray = this.prepareContactsToExport(contacts, dataAsArray);\n    }\n\n    if (timeSlots.length > 0) {\n      dataAsArray = this.prepareTimeSlotsToExport(timeSlots, dataAsArray);\n    }\n\n    if (files.length > 0) {\n      dataAsArray = this.prepareFilesToExport(files, dataAsArray);\n    }\n\n    Object.values(dataAsArray).forEach((item) => {\n      dataAsString += `${Object.values(item).join('\\t')}\\n`;\n    });\n\n    let base64content: string;\n\n    try {\n      fs.appendFileSync(filePath, dataAsString);\n\n      base64content = fs.readFileSync(path.resolve(filePath), {\n        encoding: 'base64',\n      });\n\n      fs.unlinkSync(path.resolve(filePath));\n\n      return base64content;\n    } catch (error) {\n      this.logger.error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExportUserDataController.html":{"url":"controllers/ExportUserDataController.html","title":"controller - ExportUserDataController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExportUserDataController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/export-user-data.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportUserData\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportUserData(user: UserEntity, data: ExportUserDataDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: SuccessRO})@ApiOperation({summary: 'Export user data'})@Roles(['undefined'])@Post('/export')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/export-user-data.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                ExportUserDataDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, UseGuards, Body } from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n} from '@nestjs/swagger';\nimport { RolesGuard } from '../../authentication/roles.guard';\nimport { Roles } from '../../authentication/decorator/roles.decorator';\nimport { Reflector } from '@nestjs/core';\nimport { ProfileService } from '../service/profile.service';\nimport { User } from '../../authentication/decorator/user.decorator';\nimport { UserEntity, ROLES } from '../../user/entity/user.entity';\nimport { AuthGuard } from '@nestjs/passport';\nimport { NotificationService } from '../../notification/service/notification.service';\nimport { getMailTemplateId } from '../../notification/helper/get-template-id';\nimport { getNameOrEmail } from '../../common/helper/get-name-or-email';\nimport { SuccessRO } from '../../common/response/success.ro';\nimport { plainToClass } from 'class-transformer';\nimport { ValidationPipe } from '../../common/pipe/validation.pipe';\nimport { ExportUserDataDTO } from '../request/dto/export-user-data.dto';\nimport { exportUserDataSchema } from '../request/schema/export-user-data.schema';\n\n@ApiBearerAuth()\n@UseGuards(new RolesGuard(new Reflector()))\n@UseGuards(AuthGuard('cognito'))\n@ApiTags('user')\n@Controller('user')\nexport class ExportUserDataController {\n  constructor(\n    private readonly profileService: ProfileService,\n    private readonly notificationService: NotificationService\n  ) {}\n\n  @ApiResponse({ status: 200, type: SuccessRO })\n  @ApiOperation({ summary: 'Export user data' })\n  @Roles([ROLES.USER])\n  @Post('/export')\n  async exportUserData(\n    @User() user: UserEntity,\n    @Body(new ValidationPipe(exportUserDataSchema))\n    data: ExportUserDataDTO\n  ) {\n    const profile = await this.profileService.findByUserId(user.id);\n    const emailData = this.notificationService.prepareEmailData(\n      getMailTemplateId('DATA_EXPORT'),\n      {\n        username: getNameOrEmail(profile?.name, profile?.surname, user.email),\n      },\n      {},\n      [\n        {\n          Email: data.email,\n        },\n      ]\n    );\n\n    await this.notificationService.sendEmail({\n      data: emailData,\n      exportedData: true,\n      userId: user.id,\n    });\n\n    return plainToClass(SuccessRO, { success: true });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExportUserDataDTO.html":{"url":"classes/ExportUserDataDTO.html","title":"class - ExportUserDataDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExportUserDataDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/request/dto/export-user-data.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 320, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/export-user-data.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class ExportUserDataDTO {\n  @ApiProperty({ type: String, maxLength: 320, required: false })\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/File.html":{"url":"interfaces/File.html","title":"interface - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/type/file.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buffer\n                                        \n                                \n                                \n                                        \n                                            mimetype\n                                        \n                                \n                                \n                                        \n                                            originalname\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buffer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buffer:     Buffer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Buffer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        originalname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface File {\n  originalname: string;\n  buffer: Buffer;\n  mimetype: string;\n  size: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/FileCategoryEntity.html":{"url":"entities/FileCategoryEntity.html","title":"entity - FileCategoryEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  FileCategoryEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/entity/file-category.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                createdAt\n                            \n                            \n                                files\n                            \n                            \n                                id\n                            \n                            \n                                limit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/entity/file-category.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/entity/file-category.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, file => file.category)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/entity/file-category.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/entity/file-category.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'tinyint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/entity/file-category.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  PrimaryGeneratedColumn,\n  ManyToOne,\n  JoinColumn,\n  OneToMany,\n  CreateDateColumn,\n} from 'typeorm';\nimport { FileEntity } from './file.entity';\n\n@Entity('file_category')\nexport class FileCategoryEntity {\n  @PrimaryGeneratedColumn({ type: 'int' })\n  id: number;\n\n  @Column({ type: 'varchar' })\n  code: string;\n\n  @Column({ type: 'tinyint' })\n  limit: number;\n\n  @OneToMany(() => FileEntity, (file) => file.category)\n  files: FileEntity[];\n\n  @CreateDateColumn({ name: 'created_at', type: 'datetime' })\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileCategoryRepository.html":{"url":"classes/FileCategoryRepository.html","title":"class - FileCategoryRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileCategoryRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/repository/file-category.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findManyByParams\n                            \n                            \n                                findOneByParams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(FileCategoryRepository.name)\n                    \n                \n                    \n                        \n                                Defined in src/file/repository/file-category.repository.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findManyByParams\n                        \n                    \n                \n            \n            \n                \nfindManyByParams(params: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/file/repository/file-category.repository.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByParams\n                        \n                    \n                \n            \n            \n                \nfindOneByParams(params: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/file/repository/file-category.repository.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository, In } from 'typeorm';\nimport { FileCategoryEntity } from '../entity/file-category.entity';\nimport { Logger } from '@nestjs/common';\n\n@EntityRepository(FileCategoryEntity)\nexport class FileCategoryRepository extends Repository {\n  protected readonly logger = new Logger(FileCategoryRepository.name);\n\n  findManyByParams(\n    params: Record\n  ): Promise {\n    return new Promise((resolve) => {\n      this.find(params)\n        .then((data) => resolve(data))\n        .catch((error) => this.logger.error(error));\n    });\n  }\n\n  findOneByParams(\n    params: Record\n  ): Promise {\n    return new Promise((resolve) => {\n      this.findOne(params)\n        .then((data) => resolve(data))\n        .catch((error) => this.logger.error(error));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileCategoryService.html":{"url":"injectables/FileCategoryService.html","title":"injectable - FileCategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileCategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/service/file-category.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByCodeOrFail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileCategoryRepository: FileCategoryRepository)\n                    \n                \n                        \n                            \n                                Defined in src/file/service/file-category.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileCategoryRepository\n                                                  \n                                                        \n                                                                        FileCategoryRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/file/service/file-category.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCodeOrFail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCodeOrFail(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/file/service/file-category.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, BadRequestException } from '@nestjs/common';\nimport {\n  FILE_CATEGORY_NOT_FOUND,\n  GET_FILE_CATEGORIES_FAILED,\n} from '../../common/error/keys';\nimport { FileCategoryEntity } from '../entity/file-category.entity';\nimport { FileCategoryRepository } from '../repository/file-category.repository';\n\n@Injectable()\nexport class FileCategoryService {\n  constructor(\n    private readonly fileCategoryRepository: FileCategoryRepository\n  ) {}\n\n  async findAll(): Promise {\n    return this.fileCategoryRepository.findManyByParams({\n      order: { id: 'ASC' },\n    });\n  }\n\n  async findByCodeOrFail(code: string): Promise {\n    return this.fileCategoryRepository\n      .findOneByParams({\n        code,\n      })\n      .then((data) => {\n        if (!data) {\n          throw new BadRequestException(FILE_CATEGORY_NOT_FOUND);\n        }\n\n        return data;\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/FileEntity.html":{"url":"entities/FileEntity.html","title":"entity - FileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  FileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/entity/file.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                categoryId\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                key\n                            \n                            \n                                mimeType\n                            \n                            \n                                name\n                            \n                            \n                                size\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileCategoryEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @JoinColumn({name: 'category_id'})@ManyToOne(undefined, category => category.files)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/entity/file.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'category_id', type: 'tinyint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/entity/file.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/entity/file.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/entity/file.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/entity/file.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mimeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'mime_type', type: 'varchar', length: 50})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/entity/file.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/entity/file.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'mediumint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/entity/file.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @JoinColumn({name: 'user_id'})@ManyToOne(undefined, user => user.files)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/entity/file.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'user_id', type: 'varchar', length: 36})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/entity/file.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  PrimaryGeneratedColumn,\n  CreateDateColumn,\n  JoinColumn,\n  ManyToOne,\n  OneToMany,\n} from 'typeorm';\nimport { UserEntity } from '../../user/entity/user.entity';\nimport { FileCategoryEntity } from './file-category.entity';\n\n@Entity('file')\nexport class FileEntity {\n  @PrimaryGeneratedColumn({ type: 'int' })\n  id: number;\n\n  @Column({ name: 'user_id', type: 'varchar', length: 36 })\n  userId: string;\n\n  @Column({ name: 'category_id', type: 'tinyint' })\n  categoryId: number;\n\n  @Column({ type: 'varchar', length: 255 })\n  name: string;\n\n  @Column({ type: 'varchar', length: 100 })\n  key: string;\n\n  @Column({ name: 'mime_type', type: 'varchar', length: 50 })\n  mimeType: string;\n\n  @Column({ type: 'mediumint' })\n  size: number;\n\n  @CreateDateColumn({ name: 'created_at', type: 'datetime' })\n  createdAt: Date;\n\n  @JoinColumn({ name: 'user_id' })\n  @ManyToOne(() => UserEntity, (user: UserEntity) => user.files)\n  user: UserEntity;\n\n  @JoinColumn({ name: 'category_id' })\n  @ManyToOne(\n    () => FileCategoryEntity,\n    (category: FileCategoryEntity) => category.files\n  )\n  category: FileCategoryEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileIdRO.html":{"url":"classes/FileIdRO.html","title":"class - FileIdRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileIdRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/response/file-id.ro.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/response/file-id.ro.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Exclude()\nexport class FileIdRO {\n  @Expose()\n  @ApiProperty({ type: String })\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FileListController.html":{"url":"controllers/FileListController.html","title":"controller - FileListController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FileListController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/controller/file-list.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                file\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getFileList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFileList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFileList(user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: CategoryRO, isArray: true})@ApiResponse({status: 400, type: ErrorMessageRO})@ApiOperation({summary: 'Get file list'})@Roles(['undefined'])@Get()\n                \n            \n\n            \n                \n                    Defined in src/file/controller/file-list.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n} from '@nestjs/swagger';\nimport { RolesGuard } from '../../authentication/roles.guard';\nimport { Roles } from '../../authentication/decorator/roles.decorator';\nimport { Reflector } from '@nestjs/core';\nimport { plainToClass } from 'class-transformer';\nimport { FileService } from '../service/file.service';\nimport { User } from '../../authentication/decorator/user.decorator';\nimport { UserEntity, ROLES } from '../../user/entity/user.entity';\nimport { CategoryRO } from '../response/category.ro';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ErrorMessageRO } from '../../common/response/error.ro';\nimport { FileCategoryService } from '../service/file-category.service';\nimport { filesMapper } from '../mapper/files.mapper';\n\n@ApiBearerAuth()\n@UseGuards(new RolesGuard(new Reflector()))\n@UseGuards(AuthGuard('cognito'))\n@ApiTags('file')\n@Controller('file')\nexport class FileListController {\n  constructor(\n    private readonly fileService: FileService,\n    private readonly fileCategoryService: FileCategoryService\n  ) {}\n\n  @ApiResponse({ status: 200, type: CategoryRO, isArray: true })\n  @ApiResponse({ status: 400, type: ErrorMessageRO })\n  @ApiOperation({ summary: 'Get file list' })\n  @Roles([ROLES.USER])\n  @Get()\n  async getFileList(@User() user: UserEntity) {\n    const [categories, files] = await Promise.all([\n      this.fileCategoryService.findAll(),\n      this.fileService.findFilesByUserId(user.id),\n    ]);\n\n    return filesMapper(\n      categories,\n      files.map((file) => ({\n        ...file,\n        url: this.fileService.getFileURL(file.key),\n      }))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileModule.html":{"url":"modules/FileModule.html","title":"module - FileModule","body":"\n                   \n\n\n\n\n    Modules\n    FileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FileModule\n\n\n\ncluster_FileModule_providers\n\n\n\ncluster_FileModule_exports\n\n\n\n\nFileCategoryService \n\nFileCategoryService \n\n\n\nFileService \n\nFileService \n\n\n\nFileModule\n\nFileModule\n\nFileCategoryService  -->\n\nFileModule->FileCategoryService \n\n\n\nFileService  -->\n\nFileModule->FileService \n\n\n\n\n\nFileCategoryService\n\nFileCategoryService\n\nFileModule -->\n\nFileCategoryService->FileModule\n\n\n\n\n\nFileService\n\nFileService\n\nFileModule -->\n\nFileService->FileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/file/file.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileCategoryService\n                        \n                        \n                            FileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UploadFileController\n                        \n                        \n                            DeleteContactController\n                        \n                        \n                            FileListController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FileCategoryService\n                        \n                        \n                            FileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileService } from './service/file.service';\nimport { ConfigProvider } from '../common/provider/config.provider';\nimport { UploadFileController } from './controller/upload-file.controller';\nimport { AWSS3Provider } from './provider/aws-s3.provider';\nimport { AWSCloudFrontSignerProvider } from './provider/aws-cloud-front-sign.provider';\nimport { FileRepositoryProvider } from './provider/file-repository.provider';\nimport { FileCategoryRepositoryProvider } from './provider/file-category-repository.provider';\nimport { FileCategoryService } from './service/file-category.service';\nimport { DeleteContactController } from './controller/delete-file.controller';\nimport { FileListController } from './controller/file-list.controller';\nimport { ConfigModule } from '@nestjs/config';\nimport configuration from '../config/default';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [configuration],\n    }),\n  ],\n  controllers: [\n    UploadFileController,\n    DeleteContactController,\n    FileListController,\n  ],\n  providers: [\n    FileService,\n    ConfigProvider,\n    AWSS3Provider,\n    AWSCloudFrontSignerProvider,\n    FileRepositoryProvider,\n    FileCategoryRepositoryProvider,\n    FileCategoryService,\n  ],\n  exports: [\n    FileService,\n    FileCategoryService,\n    FileRepositoryProvider,\n    FileCategoryRepositoryProvider,\n  ],\n})\nexport class FileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileRO.html":{"url":"classes/FileRO.html","title":"class - FileRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/response/file.ro.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                mimeType\n                            \n                            \n                                name\n                            \n                            \n                                size\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/response/file.ro.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/response/file.ro.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mimeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/response/file.ro.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/response/file.ro.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/response/file.ro.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/file/response/file.ro.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Exclude()\nexport class FileRO {\n  @Expose()\n  @ApiProperty({ type: String })\n  id: string;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  name: string;\n\n  @Expose()\n  @ApiProperty({ type: Number })\n  size: number;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  mimeType: string;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  url: string;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  createdAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileRepository.html":{"url":"classes/FileRepository.html","title":"class - FileRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/repository/file.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findByCategoryCodeAndUserId\n                            \n                            \n                                findManyByParams\n                            \n                            \n                                findOneByParams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(FileRepository.name)\n                    \n                \n                    \n                        \n                                Defined in src/file/repository/file.repository.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findByCategoryCodeAndUserId\n                        \n                    \n                \n            \n            \n                \nfindByCategoryCodeAndUserId(codes: string[], userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/file/repository/file.repository.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codes\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findManyByParams\n                        \n                    \n                \n            \n            \n                \nfindManyByParams(params: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/file/repository/file.repository.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByParams\n                        \n                    \n                \n            \n            \n                \nfindOneByParams(params: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/file/repository/file.repository.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Logger } from '@nestjs/common';\nimport { FileEntity } from '../entity/file.entity';\n\n@EntityRepository(FileEntity)\nexport class FileRepository extends Repository {\n  private readonly logger = new Logger(FileRepository.name);\n\n  findManyByParams(params: Record): Promise {\n    return new Promise((resolve) => {\n      this.find(params)\n        .then((data) => resolve(data))\n        .catch((error) => this.logger.error(error));\n    });\n  }\n\n  findOneByParams(params: Record): Promise {\n    return new Promise((resolve) => {\n      this.findOne(params)\n        .then((data) => resolve(data))\n        .catch((error) => this.logger.error(error));\n    });\n  }\n\n  findByCategoryCodeAndUserId(\n    codes: string[],\n    userId: string\n  ): Promise {\n    return this.createQueryBuilder('file')\n      .innerJoin(\n        'file_category',\n        'category',\n        'category.id = file.category_id and category.code IN (:codes)',\n        {\n          codes,\n        }\n      )\n      .where('file.user_id = :userId', { userId })\n      .getMany();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/service/file.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                findByCategoryCodeAndUserId\n                            \n                            \n                                    Async\n                                findByIdAndUserIdOrFail\n                            \n                            \n                                    Async\n                                findFilesByUserId\n                            \n                            \n                                    Async\n                                getFileAsBase64\n                            \n                            \n                                getFileURL\n                            \n                            \n                                    Async\n                                saveFile\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                            \n                                    Async\n                                uploadFileOrFail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(s3: AWS.S3, cloudFrontSigner: AWS.CloudFront.Signer, config: ConfigService, fileRepository: FileRepository)\n                    \n                \n                        \n                            \n                                Defined in src/file/service/file.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        s3\n                                                  \n                                                        \n                                                                    AWS.S3\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cloudFrontSigner\n                                                  \n                                                        \n                                                                    AWS.CloudFront.Signer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        FileRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFile(file: FileEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/file/service/file.service.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                FileEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByCategoryCodeAndUserId\n                        \n                    \n                \n            \n            \n                \nfindByCategoryCodeAndUserId(codes: string[], userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/file/service/file.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codes\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByIdAndUserIdOrFail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAndUserIdOrFail(id: number, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/file/service/file.service.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findFilesByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findFilesByUserId(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/file/service/file.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFileAsBase64\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFileAsBase64(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/file/service/file.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFileURL\n                        \n                    \n                \n            \n            \n                \ngetFileURL(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/file/service/file.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveFile(userId: string, file: File, key: string, categoryId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/file/service/file.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                                File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    categoryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(file: File)\n                \n            \n\n\n            \n                \n                    Defined in src/file/service/file.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFileOrFail\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFileOrFail(file: File)\n                \n            \n\n\n            \n                \n                    Defined in src/file/service/file.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(FileService.name)\n                    \n                \n                    \n                        \n                                Defined in src/file/service/file.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  BadRequestException,\n  Logger,\n} from '@nestjs/common';\nimport UploadResult from '../type/upload-result';\nimport { DICTIONARY } from '../constant/dictionary.constant';\nimport { DICTIONARY as COMMON_DI } from '../../common/constant/dictionary.constant';\nimport * as AWS from 'aws-sdk';\nimport { ConfigService } from '@nestjs/config';\nimport * as uuid from 'uuid';\nimport * as moment from 'moment';\nimport File from '../type/file';\nimport {\n  FILE_UPLOAD_FAILED,\n  FILE_IS_REQUIRED,\n  FILE_TYPE_IS_INVALID,\n  FILE_IS_TOO_BIG,\n  SAVE_FILE_FAILED,\n  FILE_NOT_FOUND,\n  DELETE_FILE_FROM_DB_FAILED,\n  DELETE_FILE_FROM_S3_FAILED,\n  GET_FILE_URL_FAILED,\n} from '../../common/error/keys';\nimport { FileEntity } from '../entity/file.entity';\nimport { FileRepository } from '../repository/file.repository';\nimport { DeleteResult } from 'typeorm';\n\n@Injectable()\nexport class FileService {\n  private readonly logger = new Logger(FileService.name);\n\n  constructor(\n    @Inject(DICTIONARY.S3) private readonly s3: AWS.S3,\n    @Inject(DICTIONARY.CLOUD_FRONT_SIGNER)\n    private readonly cloudFrontSigner: AWS.CloudFront.Signer,\n    @Inject(COMMON_DI.CONFIG) private readonly config: ConfigService,\n    @Inject(FileRepository)\n    private readonly fileRepository: FileRepository\n  ) {}\n\n  async findFilesByUserId(userId: string) {\n    return this.fileRepository.findManyByParams({ userId });\n  }\n\n  findByCategoryCodeAndUserId(\n    codes: string[],\n    userId: string\n  ): Promise {\n    return this.fileRepository.findByCategoryCodeAndUserId(codes, userId);\n  }\n\n  getFileURL(key: string): string {\n    try {\n      return this.cloudFrontSigner.getSignedUrl({\n        url: `${this.config.get('cloudFrontSigner.url')}/${key}`,\n        expires: moment()\n          .add(this.config.get('cloudFrontSigner.validityTime'), 'hours')\n          .unix(),\n      });\n    } catch (error) {\n      this.logger.error(error);\n      throw new BadRequestException(GET_FILE_URL_FAILED);\n    }\n  }\n\n  async uploadFileOrFail(file: File): Promise {\n    if (!file) {\n      throw new BadRequestException(FILE_IS_REQUIRED);\n    }\n\n    if (\n      ![\n        'image/jpeg',\n        'image/jpg',\n        'image/png',\n        'application/pdf',\n        'application/msword',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n      ].includes(file.mimetype)\n    ) {\n      throw new BadRequestException(FILE_TYPE_IS_INVALID);\n    }\n\n    if (file.size > Number(this.config.get('s3.fileSizeLimit')) * 1024 * 1024) {\n      throw new BadRequestException(FILE_IS_TOO_BIG);\n    }\n\n    return this.uploadFile(file).catch((error) => {\n      this.logger.error(error);\n      throw new BadRequestException(FILE_UPLOAD_FAILED);\n    });\n  }\n\n  async uploadFile(file: File): Promise {\n    return new Promise((resolve, reject) => {\n      this.s3.upload(\n        {\n          Bucket: this.config.get('s3.bucket'),\n          Key: `${uuid.v4()}.${file.originalname.split('.').reverse()[0]}`,\n          Body: file.buffer,\n          ServerSideEncryption: 'AES256',\n        },\n        (error, data) => {\n          if (!error) {\n            resolve(data as UploadResult);\n          } else {\n            reject(error);\n          }\n        }\n      );\n    });\n  }\n\n  async getFileAsBase64(key: string): Promise {\n    return new Promise((resolve) => {\n      this.s3.getObject(\n        {\n          Bucket: this.config.get('s3.bucket'),\n          Key: key,\n        },\n        (error, data) => {\n          if (!error) {\n            resolve(data.Body.toString('base64'));\n          } else {\n            this.logger.error(JSON.stringify(error));\n            resolve(null);\n          }\n        }\n      );\n    });\n  }\n\n  async saveFile(\n    userId: string,\n    file: File,\n    key: string,\n    categoryId: number\n  ): Promise {\n    return this.fileRepository\n      .save({\n        userId,\n        categoryId,\n        key,\n        name: file.originalname.replace(/ /g, '_'),\n        size: file.size,\n        mimeType: file.mimetype,\n      })\n      .catch((error) => {\n        this.logger.error(error);\n        throw new BadRequestException(SAVE_FILE_FAILED);\n      });\n  }\n\n  async findByIdAndUserIdOrFail(\n    id: number,\n    userId: string\n  ): Promise {\n    return this.fileRepository\n      .findOneByParams({\n        id,\n        userId,\n      })\n      .then((data) => {\n        if (!data) {\n          throw new BadRequestException(FILE_NOT_FOUND);\n        }\n\n        return data;\n      });\n  }\n\n  async deleteFile(file: FileEntity): Promise {\n    await new Promise((resolve, reject) => {\n      this.s3.deleteObject(\n        {\n          Bucket: this.config.get('s3.bucket'),\n          Key: file.key,\n        },\n        (error, data) => {\n          if (!error) {\n            resolve(data);\n          } else {\n            reject(error);\n          }\n        }\n      );\n    }).catch((error) => {\n      this.logger.error(error);\n      throw new BadRequestException(DELETE_FILE_FROM_S3_FAILED);\n    });\n\n    return this.fileRepository.delete(file.id).catch((error) => {\n      this.logger.error(error);\n      throw new BadRequestException(DELETE_FILE_FROM_DB_FAILED);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GetAccessTokenController.html":{"url":"controllers/GetAccessTokenController.html","title":"controller - GetAccessTokenController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GetAccessTokenController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/controller/get-access-token.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAccessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAccessToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccessToken(params: GetAccessTokenDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200})@ApiOperation({summary: 'Get access token'})@Post('token')\n                \n            \n\n            \n                \n                    Defined in src/authentication/controller/get-access-token.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                GetAccessTokenDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body } from '@nestjs/common';\nimport { plainToClass } from 'class-transformer';\nimport { ApiTags, ApiResponse, ApiOperation } from '@nestjs/swagger';\nimport { ValidationPipe } from '../../common/pipe/validation.pipe';\nimport { GetAccessTokenDTO } from '../request/dto/get-access-token.dto';\nimport { getAccessTokenSchema } from '../request/schema/get-access-token.schema';\nimport { AuthenticationService } from '../../authentication/service/authentication.service';\nimport { TokenRO } from '../response/token.ro';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class GetAccessTokenController {\n  constructor(private readonly authenticationService: AuthenticationService) {}\n\n  @ApiResponse({ status: 200 })\n  @ApiOperation({ summary: 'Get access token' })\n  @Post('token')\n  async getAccessToken(\n    @Body(new ValidationPipe(getAccessTokenSchema))\n    params: GetAccessTokenDTO\n  ) {\n    const data = await this.authenticationService.getTokens(\n      params.email,\n      params.password\n    );\n\n    return plainToClass(TokenRO, data?.AuthenticationResult);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAccessTokenDTO.html":{"url":"classes/GetAccessTokenDTO.html","title":"class - GetAccessTokenDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAccessTokenDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/request/dto/get-access-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/request/dto/get-access-token.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/request/dto/get-access-token.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class GetAccessTokenDTO {\n  @ApiProperty({ type: String })\n  email: string;\n\n  @ApiProperty({ type: String })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GetListOfTimeSlotsController.html":{"url":"controllers/GetListOfTimeSlotsController.html","title":"controller - GetListOfTimeSlotsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GetListOfTimeSlotsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/trigger-time-slot/controller/get-list-of-time-slots.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getListOfTimeSlots\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getListOfTimeSlots\n                        \n                    \n                \n            \n            \n                \n                    \n                    getListOfTimeSlots(user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: TimeSlotRO, isArray: true})@ApiResponse({status: 400, type: ErrorMessageRO})@ApiOperation({summary: 'Get list of time slots by user'})@Roles(['undefined'])@Get('time-slot')\n                \n            \n\n            \n                \n                    Defined in src/trigger-time-slot/controller/get-list-of-time-slots.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n} from '@nestjs/swagger';\nimport { RolesGuard } from '../../authentication/roles.guard';\nimport { Roles } from '../../authentication/decorator/roles.decorator';\nimport { Reflector } from '@nestjs/core';\nimport { TriggerTimeSlotService } from '../service/trigger-time-slot.service';\nimport { User } from '../../authentication/decorator/user.decorator';\nimport { UserEntity, ROLES } from '../../user/entity/user.entity';\nimport { TimeSlotRO } from '../response/time-slot.ro';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ErrorMessageRO } from '../../common/response/error.ro';\nimport { timeSlotsMapper } from '../mapper/time-slots.mapper';\n\n@ApiBearerAuth()\n@UseGuards(new RolesGuard(new Reflector()))\n@UseGuards(AuthGuard('cognito'))\n@ApiTags('time-slot')\n@Controller()\nexport class GetListOfTimeSlotsController {\n  constructor(\n    private readonly triggerTimeSlotService: TriggerTimeSlotService\n  ) {}\n\n  @ApiResponse({ status: 200, type: TimeSlotRO, isArray: true })\n  @ApiResponse({ status: 400, type: ErrorMessageRO })\n  @ApiOperation({ summary: 'Get list of time slots by user' })\n  @Roles([ROLES.USER])\n  @Get('time-slot')\n  async getListOfTimeSlots(@User() user: UserEntity) {\n    const timeSlots = await this.triggerTimeSlotService.findByUserIdOrFail(\n      user.id\n    );\n\n    return timeSlotsMapper(timeSlots);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GetUserController.html":{"url":"controllers/GetUserController.html","title":"controller - GetUserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GetUserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/get-user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserProfile(user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: UserRO})@ApiOperation({summary: 'Get user profile'})@Roles(['undefined'])@Get()\n                \n            \n\n            \n                \n                    Defined in src/user/controller/get-user.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n} from '@nestjs/swagger';\nimport { RolesGuard } from '../../authentication/roles.guard';\nimport { Roles } from '../../authentication/decorator/roles.decorator';\nimport { Reflector } from '@nestjs/core';\nimport { UserService } from '../service/user.service';\nimport { User } from '../../authentication/decorator/user.decorator';\nimport { UserEntity, ROLES } from '../../user/entity/user.entity';\nimport { UserRO } from '../response/user.ro';\nimport { AuthGuard } from '@nestjs/passport';\nimport { userMapper } from '../mapper/user.mapper';\nimport { MessageService } from '../../queue/service/message.service';\n\n@ApiBearerAuth()\n@UseGuards(new RolesGuard(new Reflector()))\n@UseGuards(AuthGuard('cognito'))\n@ApiTags('user')\n@Controller('user')\nexport class GetUserController {\n  constructor(\n    private readonly userService: UserService,\n    private readonly messageService: MessageService\n  ) {}\n\n  @ApiResponse({ status: 200, type: UserRO })\n  @ApiOperation({ summary: 'Get user profile' })\n  @Roles([ROLES.USER])\n  @Get()\n  async getUserProfile(@User() user: UserEntity) {\n    const [details, trigger] = await Promise.all([\n      this.userService.findByIdOrFail(user.id),\n      this.messageService.findJobByUserId(user.id),\n    ]);\n\n    return userMapper(details, trigger);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICognito.html":{"url":"interfaces/ICognito.html","title":"interface - ICognito","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICognito\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/interface/cognito.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email_verified\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email_verified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email_verified:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICognito {\n  sub: string;\n  email_verified?: string;\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IContactData.html":{"url":"interfaces/IContactData.html","title":"interface - IContactData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IContactData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/interface/contact-data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            active\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            prefix\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prefix:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IContactData {\n  id?: number;\n  email?: string;\n  prefix?: number;\n  phone?: string;\n  name?: string;\n  surname?: string;\n  userId: string;\n  active?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProfileData.html":{"url":"interfaces/IProfileData.html","title":"interface - IProfileData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProfileData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/interface/profile-data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            automatedEmergency\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dateOfBirth\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            emergencyEmailAndSms\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            emergencyMessage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            frequencyOfRegularNotification\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastHospitalVisit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            location\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            locationAccess\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mostRecentDiagnosis\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            positiveInfoPeriod\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            prefix\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            primaryPhysician\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            primaryPhysicianAddress\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            readManual\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            regularPushNotification\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            seriousMedicalIssues\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        automatedEmergency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        automatedEmergency:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateOfBirth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateOfBirth:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emergencyEmailAndSms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emergencyEmailAndSms:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emergencyMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emergencyMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        frequencyOfRegularNotification\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        frequencyOfRegularNotification:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastHospitalVisit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastHospitalVisit:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locationAccess\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        locationAccess:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mostRecentDiagnosis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mostRecentDiagnosis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positiveInfoPeriod\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        positiveInfoPeriod:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prefix:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryPhysician\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primaryPhysician:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryPhysicianAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primaryPhysicianAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readManual\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        readManual:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        regularPushNotification\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        regularPushNotification:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seriousMedicalIssues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        seriousMedicalIssues:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IProfileData {\n  userId: string;\n  name?: string;\n  surname?: string;\n  prefix?: number;\n  phone?: string;\n  address?: string;\n  dateOfBirth?: Date;\n  primaryPhysician?: string;\n  primaryPhysicianAddress?: string;\n  seriousMedicalIssues?: boolean;\n  mostRecentDiagnosis?: string;\n  lastHospitalVisit?: Date;\n  emergencyEmailAndSms?: boolean;\n  locationAccess?: boolean;\n  location?: string;\n  automatedEmergency?: boolean;\n  readManual?: boolean;\n  emergencyMessage?: string;\n  regularPushNotification?: boolean;\n  frequencyOfRegularNotification?: number;\n  positiveInfoPeriod?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITimeSlotData.html":{"url":"interfaces/ITimeSlotData.html","title":"interface - ITimeSlotData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITimeSlotData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/interface/time-slot-data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            days\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            from\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            to\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        days\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        days:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DateImported } from 'aws-sdk/clients/transfer';\n\nexport interface ITimeSlotData {\n  id?: number;\n  active?: boolean;\n  from?: Date;\n  to?: Date;\n  userId: string;\n  days: {\n    day: number;\n  }[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserData.html":{"url":"interfaces/IUserData.html","title":"interface - IUserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/interface/user-data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUserData {\n  email?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LogoutController.html":{"url":"controllers/LogoutController.html","title":"controller - LogoutController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LogoutController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/controller/logout.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200})@ApiOperation({summary: 'Logout from the application'})@Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/authentication/controller/logout.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, UseGuards } from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n} from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\nimport { UserService } from '../../user/service/user.service';\nimport { User } from '../decorator/user.decorator';\nimport { UserEntity } from '../../user/entity/user.entity';\nimport { PositiveInfoService } from '../../user/service/positive-info.service';\nimport { ProfileService } from '../../user/service/profile.service';\n\n@ApiBearerAuth()\n@UseGuards(AuthGuard('cognito'))\n@ApiTags('auth')\n@Controller('auth')\nexport class LogoutController {\n  constructor(\n    private readonly userService: UserService,\n    private readonly profileService: ProfileService,\n    private readonly positiveInfoService: PositiveInfoService\n  ) {}\n\n  @ApiResponse({ status: 200 })\n  @ApiOperation({ summary: 'Logout from the application' })\n  @Post('logout')\n  async logout(@User() user: UserEntity) {\n    let profile = await this.profileService.findByUserId(user.id);\n\n    if (profile) {\n      await this.profileService.saveProfile(\n        { ...profile, userId: user.id },\n        { automatedEmergency: false } as any\n      )\n    }\n\n    await Promise.all([\n      this.positiveInfoService.savePositiveInfo(user.id, null),\n      this.userService.updateUserDeviceId(user.id, null)\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageConsumer.html":{"url":"classes/MessageConsumer.html","title":"class - MessageConsumer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageConsumer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queue/consumer/message.consumer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BasicConsumer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleEmailProcess\n                            \n                            \n                                    Async\n                                handleEmergencyProcess\n                            \n                            \n                                    Async\n                                handleSmsProcess\n                            \n                            \n                                onActive\n                            \n                            \n                                onComplete\n                            \n                            \n                                onError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/queue/consumer/message.consumer.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         BasicConsumer\n\n                            \n                        \n                    \n                        \n                                Defined in         BasicConsumer:6\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleEmailProcess\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleEmailProcess(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process(PROCESS.EMAIL)\n                \n            \n\n            \n                \n                    Defined in src/queue/consumer/message.consumer.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleEmergencyProcess\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleEmergencyProcess(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process(PROCESS.EMERGENCY)\n                \n            \n\n            \n                \n                    Defined in src/queue/consumer/message.consumer.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleSmsProcess\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleSmsProcess(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process(PROCESS.SMS)\n                \n            \n\n            \n                \n                    Defined in src/queue/consumer/message.consumer.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onActive\n                        \n                    \n                \n            \n            \n                \nonActive(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueActive()\n                \n            \n\n            \n                \n                    Inherited from         BasicConsumer\n\n                \n            \n            \n                \n                        Defined in         BasicConsumer:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onComplete\n                        \n                    \n                \n            \n            \n                \nonComplete(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueCompleted()\n                \n            \n\n            \n                \n                    Inherited from         BasicConsumer\n\n                \n            \n            \n                \n                        Defined in         BasicConsumer:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onError\n                        \n                    \n                \n            \n            \n                \nonError(job: Job, error: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueFailed()\n                \n            \n\n            \n                \n                    Inherited from         BasicConsumer\n\n                \n            \n            \n                \n                        Defined in         BasicConsumer:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Process, Processor } from '@nestjs/bull';\nimport { Logger, Inject } from '@nestjs/common';\nimport { Job } from 'bull';\nimport { QUEUE } from '../constant/queue.constant';\nimport { NotificationService } from '../../notification/service/notification.service';\nimport { BasicConsumer } from './basic.consumer';\nimport { PROCESS } from '../constant/process.constant';\n\n@Processor(QUEUE.MESSAGE)\nexport class MessageConsumer extends BasicConsumer {\n  constructor(private notificationService: NotificationService) {\n    super(new Logger(MessageConsumer.name));\n  }\n\n  @Process(PROCESS.EMAIL)\n  async handleEmailProcess(job: Job) {\n    this.notificationService.sendEmail({\n      ...job.data,\n      isFromQueue: true,\n    });\n  }\n\n  @Process(PROCESS.SMS)\n  async handleSmsProcess(job: Job) {\n    this.notificationService.sendSms({ ...job.data, isFromQueue: true });\n  }\n\n  @Process(PROCESS.EMERGENCY)\n  async handleEmergencyProcess(job: Job) {\n    const [, userId] = job.id.toString().split('_');\n\n    if (job.data.sms) {\n      this.notificationService.sendSms({ ...job.data.sms, isFromQueue: true });\n    }\n\n    if (job.data.email) {\n      this.notificationService.sendEmail({\n        data: job.data.email,\n        isFromQueue: true,\n        emergencyMessage: true,\n        userId: userId,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessageModule.html":{"url":"modules/MessageModule.html","title":"module - MessageModule","body":"\n                   \n\n\n\n\n    Modules\n    MessageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MessageModule\n\n\n\ncluster_MessageModule_providers\n\n\n\ncluster_MessageModule_exports\n\n\n\ncluster_MessageModule_imports\n\n\n\n\nContactModule\n\nContactModule\n\n\n\nMessageModule\n\nMessageModule\n\nMessageModule -->\n\nContactModule->MessageModule\n\n\n\n\n\nMessageService \n\nMessageService \n\nMessageService  -->\n\nMessageModule->MessageService \n\n\n\n\n\nMessageService\n\nMessageService\n\nMessageModule -->\n\nMessageService->MessageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/message/message.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MessageService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SendSMSController\n                        \n                        \n                            SendEmergencyMessageController\n                        \n                        \n                            CancelEmergencyMessageController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContactModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MessageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { ConfigProvider } from '../common/provider/config.provider';\nimport { NotificationModule } from '../notification/notification.module';\nimport { UserModule } from '../user/user.module';\nimport { ContactModule } from '../contact/contact.module';\nimport { SendSMSController } from './controller/send-sms.controller';\nimport { SendEmergencyMessageController } from './controller/send-emergency-message.controller';\nimport { QueueModule } from '../queue/queue.module';\nimport { CancelEmergencyMessageController } from './controller/cancel-emergency-message.controller';\nimport { MessageService } from './service/mesage.service';\nimport { FirebaseProvider } from './provider/firebase.provider';\nimport { TriggerTimeSlotModule } from '../trigger-time-slot/trigger-time-slot.module';\nimport { ConfigModule } from '@nestjs/config';\nimport configuration from '../config/default';\n\n@Module({\n  imports: [\n    forwardRef(() => NotificationModule),\n    forwardRef(() => UserModule),\n    ContactModule,\n    forwardRef(() => QueueModule),\n    forwardRef(() => TriggerTimeSlotModule),\n    ConfigModule.forRoot({\n      load: [configuration],\n    }),\n  ],\n  controllers: [\n    SendSMSController,\n    SendEmergencyMessageController,\n    CancelEmergencyMessageController,\n  ],\n  providers: [ConfigProvider, MessageService, FirebaseProvider],\n  exports: [MessageService],\n})\nexport class MessageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/message/service/mesage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMessageToDevice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebase, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/message/service/mesage.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMessageToDevice\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessageToDevice(deviceId: string, data: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/message/service/mesage.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(MessageService.name)\n                    \n                \n                    \n                        \n                                Defined in src/message/service/mesage.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from '@nestjs/common';\nimport { UserService } from '../../user/service/user.service';\nimport { DICTIONARY } from '../constant/dictionary.constant';\n\n@Injectable()\nexport class MessageService {\n  private readonly logger = new Logger(MessageService.name);\n\n  constructor(\n    @Inject(DICTIONARY.FIREBASE)\n    private readonly firebase,\n    private readonly userService: UserService\n  ) { }\n\n  async sendMessageToDevice(\n    deviceId: string,\n    data: Record\n  ): Promise> {\n    const user = await this.userService.findByDeviceId(deviceId);\n\n    if (user?.profile?.allowNotifications === false) {\n      return;\n    }\n\n    const payload: Record> = {\n      notification: {\n        title: data.title,\n        body: data.message,\n      },\n      data: {\n        source: 'backend',\n        type: data.type,\n      },\n    };\n\n    if (data.sound) {\n      payload.notification.sound = data.sound;\n    }\n\n    return this.firebase\n      .messaging()\n      .sendToDevice(\n        deviceId,\n        {\n          ...payload,\n        },\n        {\n          priority: 'high',\n        }\n      )\n      .then((result) => {\n        if (result.successCount === 1) {\n          Logger.log(`Push notification has been sent: `, JSON.stringify({ deviceId, ...payload }));\n\n          return result;\n        }\n\n        Logger.error(`Push notification has NOT been sent: `, JSON.stringify({ deviceId, ...payload }));\n\n        throw result;\n      })\n      .catch((error) => {\n        this.logger.error(error, JSON.stringify(payload), deviceId);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService-1.html":{"url":"injectables/MessageService-1.html","title":"injectable - MessageService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queue/service/message.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJobToQueue\n                            \n                            \n                                    Async\n                                findJobByUserId\n                            \n                            \n                                    Async\n                                removeJobsByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messageQueue: Bull.Queue)\n                    \n                \n                        \n                            \n                                Defined in src/queue/service/message.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messageQueue\n                                                  \n                                                        \n                                                                    Bull.Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addJobToQueue\n                        \n                    \n                \n            \n            \n                \n                    \n                    addJobToQueue(jobName: string, params: Email.SendParams | MessageListInstanceCreateOptions | Record, delay: number, jobId?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/queue/service/message.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    jobName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Email.SendParams | MessageListInstanceCreateOptions | Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    delay\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jobId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findJobByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findJobByUserId(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/queue/service/message.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeJobsByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeJobsByUserId(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/queue/service/message.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(MessageService.name)\n                    \n                \n                    \n                        \n                                Defined in src/queue/service/message.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  Logger,\n  BadRequestException,\n} from '@nestjs/common';\nimport { QUEUE } from '../constant/queue.constant';\nimport * as Bull from 'bull';\nimport { Email } from 'node-mailjet';\nimport { MessageListInstanceCreateOptions } from 'twilio/lib/rest/api/v2010/account/message';\nimport { JOB_REMOVE_FAILED, GET_JOB_FAILED } from '../../common/error/keys';\nimport { PROCESS } from '../../queue/constant/process.constant';\n\n@Injectable()\nexport class MessageService {\n  private readonly logger = new Logger(MessageService.name);\n\n  constructor(\n    @Inject(QUEUE.MESSAGE)\n    private messageQueue: Bull.Queue\n  ) {}\n\n  async findJobByUserId(userId: string): Promise {\n    return this.messageQueue\n      .getJob(`${PROCESS.EMERGENCY}_${userId}`)\n      .catch((error) => {\n        this.logger.error(JSON.stringify(error));\n        throw new BadRequestException(GET_JOB_FAILED, error);\n      });\n  }\n\n  async removeJobsByUserId(userId: string): Promise {\n    return this.messageQueue.removeJobs(`*_${userId}*`).catch((error) => {\n      this.logger.error(JSON.stringify(error));\n      throw new BadRequestException(JOB_REMOVE_FAILED, error);\n    });\n  }\n\n  async addJobToQueue(\n    jobName: string,\n    params:\n      | Email.SendParams\n      | MessageListInstanceCreateOptions\n      | Record,\n    delay: number,\n    jobId?: string\n  ): Promise {\n    return this.messageQueue\n      .add(jobName, params, {\n        delay,\n        jobId,\n      })\n      .catch((error) => this.logger.error(JSON.stringify(error)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html":{"url":"classes/MinutesAsNullableInPositiveInfoTable1633500446819.html","title":"class - MinutesAsNullableInPositiveInfoTable1633500446819","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MinutesAsNullableInPositiveInfoTable1633500446819\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1633500446819-minutesAsNullableInPositiveInfoTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                columName\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        columName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'minutes_to_next'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1633500446819-minutesAsNullableInPositiveInfoTable.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'positive_info'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1633500446819-minutesAsNullableInPositiveInfoTable.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1633500446819-minutesAsNullableInPositiveInfoTable.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1633500446819-minutesAsNullableInPositiveInfoTable.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class MinutesAsNullableInPositiveInfoTable1633500446819\n  implements MigrationInterface\n{\n  private tableName = 'positive_info';\n  private columName = 'minutes_to_next';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE ${this.tableName} MODIFY ${this.columName} smallint UNSIGNED null`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE ${this.tableName} MODIFY ${this.columName} smallint UNSIGNED not null`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NotePositiveInfoController.html":{"url":"controllers/NotePositiveInfoController.html","title":"controller - NotePositiveInfoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NotePositiveInfoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/note-positive-info.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                notePositiveInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        notePositiveInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    notePositiveInfo(user: UserEntity, data: NotePositiveInfoDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: SuccessRO})@ApiOperation({summary: 'Take note of positive information'})@Roles(['undefined'])@Post('/positive-info')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/note-positive-info.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                NotePositiveInfoDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  UseGuards,\n  Body,\n  BadRequestException,\n} from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n} from '@nestjs/swagger';\nimport { RolesGuard } from '../../authentication/roles.guard';\nimport { Roles } from '../../authentication/decorator/roles.decorator';\nimport { Reflector } from '@nestjs/core';\nimport { User } from '../../authentication/decorator/user.decorator';\nimport { UserEntity, ROLES } from '../../user/entity/user.entity';\nimport { AuthGuard } from '@nestjs/passport';\nimport { SuccessRO } from '../../common/response/success.ro';\nimport { plainToClass } from 'class-transformer';\nimport { ValidationPipe } from '../../common/pipe/validation.pipe';\nimport { NotePositiveInfoDTO } from '../request/dto/note-positive-info.dto';\nimport { notePositiveInfoSchema } from '../request/schema/note-positive-info.schema';\nimport { PositiveInfoService } from '../service/positive-info.service';\nimport { ProfileService } from '../service/profile.service';\nimport { MINUTES_TO_NEXT_MESSAGE_ARE_REQUIRED } from '../../common/error/keys';\n\n@ApiBearerAuth()\n@UseGuards(new RolesGuard(new Reflector()))\n@UseGuards(AuthGuard('cognito'))\n@ApiTags('user')\n@Controller('user')\nexport class NotePositiveInfoController {\n  constructor(\n    private readonly positiveInfoService: PositiveInfoService,\n    private readonly profileService: ProfileService\n  ) {}\n\n  @ApiResponse({ status: 200, type: SuccessRO })\n  @ApiOperation({ summary: 'Take note of positive information' })\n  @Roles([ROLES.USER])\n  @Post('/positive-info')\n  async notePositiveInfo(\n    @User() user: UserEntity,\n    @Body(new ValidationPipe(notePositiveInfoSchema))\n    data: NotePositiveInfoDTO\n  ) {\n    const profile = await this.profileService.findByUserId(user.id);\n\n    if (!profile.regularPushNotification && !data.minutesToNext) {\n      throw new BadRequestException(MINUTES_TO_NEXT_MESSAGE_ARE_REQUIRED);\n    }\n\n    let success = false;\n\n    if (profile?.automatedEmergency) {\n      await this.positiveInfoService.savePositiveInfo(\n        user.id,\n        data\n      );\n\n      success = true;\n    }\n\n    return plainToClass(SuccessRO, { success });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotePositiveInfoDTO.html":{"url":"classes/NotePositiveInfoDTO.html","title":"class - NotePositiveInfoDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotePositiveInfoDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/request/dto/note-positive-info.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                minutesToNext\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        minutesToNext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, maxLength: 2880, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/note-positive-info.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class NotePositiveInfoDTO {\n  @ApiProperty({ type: Number, maxLength: 2880, required: true })\n  minutesToNext: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationModule.html":{"url":"modules/NotificationModule.html","title":"module - NotificationModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_providers\n\n\n\ncluster_NotificationModule_exports\n\n\n\ncluster_NotificationModule_imports\n\n\n\n\nFileModule\n\nFileModule\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nFileModule->NotificationModule\n\n\n\n\n\nQueueModule\n\nQueueModule\n\nNotificationModule -->\n\nQueueModule->NotificationModule\n\n\n\n\n\nNotificationService \n\nNotificationService \n\nNotificationService  -->\n\nNotificationModule->NotificationService \n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/notification/notification.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotificationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FileModule\n                        \n                        \n                            QueueModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NotificationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { NotificationService } from './service/notification.service';\nimport { MailJetProvider } from './provider/mail-jet.provider';\nimport { ConfigProvider } from '../common/provider/config.provider';\nimport { TwilioProvider } from './provider/twilio.provider';\nimport { QueueModule } from '../queue/queue.module';\nimport { UserModule } from '../user/user.module';\nimport { FileModule } from '../file/file.module';\nimport { ConfigModule } from '@nestjs/config';\nimport configuration from '../config/default';\n\n@Module({\n  imports: [\n    QueueModule,\n    FileModule,\n    forwardRef(() => UserModule),\n    ConfigModule.forRoot({\n      load: [configuration],\n    }),\n  ],\n  providers: [\n    NotificationService,\n    MailJetProvider,\n    ConfigProvider,\n    TwilioProvider,\n  ],\n  exports: [NotificationService],\n})\nexport class NotificationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notification/service/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleSmsException\n                            \n                            \n                                    Async\n                                prepareAttachmentWithExportedData\n                            \n                            \n                                prepareEmailData\n                            \n                            \n                                    Async\n                                prepareEmergencyMessageAttachments\n                            \n                            \n                                prepareSmsData\n                            \n                            \n                                    Async\n                                sendEmail\n                            \n                            \n                                    Async\n                                sendEmergencyMessage\n                            \n                            \n                                    Async\n                                sendSms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, mailJet: Email.Client, twilio: twilioLibrary.Twilio, messageService: MessageService, exportService: ExportService, fileRepository: FileRepository, fileService: FileService, positiveInfoRepository: PositiveInfoRepository, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/notification/service/notification.service.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailJet\n                                                  \n                                                        \n                                                                    Email.Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        twilio\n                                                  \n                                                        \n                                                                    twilioLibrary.Twilio\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exportService\n                                                  \n                                                        \n                                                                        ExportService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        FileRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        positiveInfoRepository\n                                                  \n                                                        \n                                                                        PositiveInfoRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleSmsException\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleSmsException(error: Record, params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/notification/service/notification.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        prepareAttachmentWithExportedData\n                        \n                    \n                \n            \n            \n                \n                    \n                    prepareAttachmentWithExportedData(userId: string, isFromQueue: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/notification/service/notification.service.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isFromQueue\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepareEmailData\n                        \n                    \n                \n            \n            \n                \nprepareEmailData(templateId: number, variablesToEscapeAndSend: object, variablesToSend: object, to: literal type[], wantToGetNotifications?: number | null)\n                \n            \n\n\n            \n                \n                    Defined in src/notification/service/notification.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    templateId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    variablesToEscapeAndSend\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    variablesToSend\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                            literal type[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    wantToGetNotifications\n                                    \n                                            number | null\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Email.SendParams\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        prepareEmergencyMessageAttachments\n                        \n                    \n                \n            \n            \n                \n                    \n                    prepareEmergencyMessageAttachments(userId: string, isFromQueue: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/notification/service/notification.service.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isFromQueue\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepareSmsData\n                        \n                    \n                \n            \n            \n                \nprepareSmsData(to: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/notification/service/notification.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MessageListInstanceCreateOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmail(params?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/notification/service/notification.service.ts:224\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmergencyMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmergencyMessage(contact: literal type, user: UserEntity, data)\n                \n            \n\n\n            \n                \n                    Defined in src/notification/service/notification.service.ts:279\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contact\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendSms\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendSms(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/notification/service/notification.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(NotificationService.name)\n                    \n                \n                    \n                        \n                                Defined in src/notification/service/notification.service.ts:37\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  BadRequestException,\n  Logger,\n} from \"@nestjs/common\";\nimport { Email } from \"node-mailjet\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { DICTIONARY } from \"../../common/constant/dictionary.constant\";\nimport {\n  SEND_MAIL_FAILED,\n  SEND_SMS_FAILED,\n  EMAIL_AND_SMS_NOT_ALLOWED,\n  EXPORT_DATA_FAILED,\n  GET_FILE_CONTENT_FAILED,\n} from \"../../common/error/keys\";\nimport { CustomError } from \"../../common/error/custom-error\";\nimport { DICTIONARY as NOTIFICATION_DI } from \"../constant/dictionary.constant\";\nimport * as twilioLibrary from \"twilio\";\nimport { UserEntity } from \"../../user/entity/user.entity\";\nimport { escapeHTML } from \"../helper/escape-html\";\nimport { getMailTemplateId } from \"../helper/get-template-id\";\nimport { getNameOrEmail } from \"../../common/helper/get-name-or-email\";\nimport { SendEmergencyMessageDTO } from \"../../message/request/dto/send-emergency-message.dto\";\nimport { MessageListInstanceCreateOptions } from \"twilio/lib/rest/api/v2010/account/message\";\nimport { MessageInstance } from \"twilio/lib/rest/api/v2010/account/message\";\nimport { MessageService } from \"../../queue/service/message.service\";\nimport { PROCESS } from \"../../queue/constant/process.constant\";\nimport { ExportService } from \"../../user/service/export.service\";\nimport { FileRepository } from \"../../file/repository/file.repository\";\nimport { FileService } from \"../../file/service/file.service\";\nimport { PositiveInfoRepository } from \"../../user/repository/positive-info.repository\";\nimport { UserService } from \"../../user/service/user.service\";\n\n@Injectable()\nexport class NotificationService {\n  private readonly logger = new Logger(NotificationService.name);\n\n  constructor(\n    @Inject(DICTIONARY.CONFIG) private readonly config: ConfigService,\n    @Inject(NOTIFICATION_DI.MAIL_JET) private readonly mailJet: Email.Client,\n    @Inject(twilioLibrary.Twilio) private readonly twilio: twilioLibrary.Twilio,\n    private readonly messageService: MessageService,\n    private readonly exportService: ExportService,\n    @Inject(FileRepository)\n    private readonly fileRepository: FileRepository,\n    private readonly fileService: FileService,\n    @Inject(PositiveInfoRepository)\n    private readonly positiveInfoRepository: PositiveInfoRepository,\n    private readonly userService: UserService\n  ) { }\n\n  prepareSmsData(\n    to: string,\n    message: string\n  ): MessageListInstanceCreateOptions {\n    return {\n      from: this.config.get(\"twilio.phoneNumber\"),\n      to,\n      body: message,\n    };\n  }\n\n  async handleSmsException(\n    error: Record,\n    params: {\n      data: MessageListInstanceCreateOptions;\n      isPositiveInfoQuestion?: boolean;\n      userId?: string;\n      isFromQueue?: boolean;\n      stopPropagation?: boolean;\n    }\n  ) {\n    this.logger.error(`Sms has not been sent (uid: ${params.userId})`);\n    this.logger.error(JSON.stringify(error));\n\n    if (params?.stopPropagation) {\n      return;\n    }\n\n    if (!params?.isFromQueue) {\n      await this.messageService.addJobToQueue(\n        PROCESS.SMS,\n        params,\n        this.config.get(\"queue.sendAfterTime.repeatTryingToSendMessage\")\n      );\n\n      throw new CustomError(SEND_SMS_FAILED, error);\n    }\n\n    await this.sendSms({ ...params, stopPropagation: true });\n  }\n\n  async sendSms(params: {\n    data: MessageListInstanceCreateOptions;\n    isPositiveInfoQuestion?: boolean;\n    userId?: string;\n    isFromQueue?: boolean;\n    stopPropagation?: boolean;\n  }): Promise {\n    try {\n      return this.twilio.messages\n        .create(params.data)\n        .then(async (result) => {\n          this.logger.log(`(uid: ${params?.userId}) SMS has been ${result?.status || 'sent to twilio'}. SMS status available at: ${result?.uri || 'not available'}. SMS body: `)\n          this.logger.log(result?.body || 'not delivered')\n\n          if (result.errorMessage) {\n            this.logger.error(\n              `[sendSms 1] Twilio result contains error message`,\n              JSON.stringify(result)\n            );\n            throw result;\n          }\n\n          if (params.isPositiveInfoQuestion && params.userId) {\n            await this.positiveInfoRepository.setSmsTime(\n              params.userId,\n              this.config.get(\n                \"queue.sendAfterTime.triggerIfNoPositiveInfoAfterSms\"\n              ),\n              this.config.get(\n                \"queue.sendAfterTime.alertIfNoPositiveInfoAfterSms\"\n              )\n            );\n          }\n\n          return result;\n        })\n        .catch(async (error) => {\n          await this.handleSmsException(error, params);\n        });\n    } catch (error) {\n      await this.handleSmsException(error, params);\n    }\n  }\n\n  prepareEmailData(\n    templateId: number,\n    variablesToEscapeAndSend: object,\n    variablesToSend: object,\n    to: { Email: string; Name?: string }[],\n    wantToGetNotifications?: number | null\n  ): Email.SendParams {\n    if (wantToGetNotifications === 0) {\n      return;\n    }\n\n    const escapedVariables = {};\n    for (const [key, value] of Object.entries(variablesToEscapeAndSend)) {\n      escapedVariables[key] =\n        typeof value === \"string\" ? escapeHTML(value) : value;\n    }\n\n    return {\n      Messages: [\n        {\n          From: {\n            Email: this.config.get(\"mailJet.email\"),\n            Name: this.config.get(\"mailJet.username\"),\n          },\n          To: to,\n          TemplateID: templateId,\n          TemplateLanguage: true,\n          Variables:\n            Object.keys(variablesToSend).length > 0\n              ? { ...escapedVariables, ...variablesToSend }\n              : escapedVariables,\n        },\n      ],\n    };\n  }\n\n  async prepareAttachmentWithExportedData(\n    userId: string,\n    isFromQueue: boolean\n  ): Promise {\n    const content = await this.exportService.exportDataAsBase64(userId);\n\n    if (!content) {\n      this.logger.error(\"Exported content is empty\");\n\n      if (!isFromQueue) {\n        throw new BadRequestException(EXPORT_DATA_FAILED);\n      }\n    }\n\n    return {\n      ContentType: \"application/vnd.ms-excel\",\n      Filename: \"exported-data.xls\",\n      Base64Content: content,\n    };\n  }\n\n  async prepareEmergencyMessageAttachments(\n    userId: string,\n    isFromQueue: boolean\n  ): Promise {\n    const files = await this.fileRepository.findManyByParams({ userId });\n    const attachments: Email.Attachment[] = [];\n    let content: string;\n\n    for (const file of files) {\n      /**\n       * Possible attachment's size problem\n       */\n\n      content = await this.fileService.getFileAsBase64(file.key);\n\n      if (!content && !isFromQueue) {\n        throw new BadRequestException(GET_FILE_CONTENT_FAILED);\n      }\n\n      attachments.push({\n        ContentType: file.mimeType,\n        Filename: file.name,\n        Base64Content: content,\n      });\n    }\n\n    return attachments;\n  }\n\n  async sendEmail(params?: {\n    data: Email.SendParams;\n    isFromQueue?: boolean;\n    exportedData?: boolean;\n    emergencyMessage?: boolean;\n    userId?: string;\n  }): Promise {\n    const user = await this.userService.findById(params.userId);\n\n    if (!params.userId || !user || user?.profile?.uploadedDocumentsAccess) {\n      let attachments: Email.Attachment[] = [];\n\n      if (params?.exportedData) {\n        const attachment = await this.prepareAttachmentWithExportedData(\n          params?.userId,\n          params?.isFromQueue\n        );\n\n        attachments.push(attachment);\n      }\n\n      if (params?.emergencyMessage) {\n        attachments = await this.prepareEmergencyMessageAttachments(\n          params.userId,\n          params.isFromQueue\n        );\n      }\n\n      params.data.Messages[0].Attachments = attachments;\n    }\n\n    return this.mailJet\n      .post(\"send\", { version: \"v3.1\" })\n      .request(params.data)\n      .then((result: any) => {\n        if (result.body.Messages[0].Status !== \"success\") {\n          throw result.body;\n        }\n\n        return result;\n      })\n      .catch(async (error) => {\n        Logger.error(`${error?.ErrorMessage || 'Mail has not been sent.'}`)\n        if (!params.isFromQueue) {\n          await this.messageService.addJobToQueue(\n            PROCESS.EMAIL,\n            params,\n            this.config.get(\"queue.sendAfterTime.repeatTryingToSendMessage\")\n          );\n        } else {\n          throw new CustomError(SEND_MAIL_FAILED, error);\n        }\n      });\n  }\n\n  async sendEmergencyMessage(\n    contact: {\n      name: string;\n      email: string;\n      phone: string;\n    },\n    user: UserEntity,\n    data: SendEmergencyMessageDTO & {\n      isFromQueue?: boolean;\n      locationUrl?: string;\n    }\n  ): Promise {\n    if (user.profile?.emergencyEmailAndSms === false) {\n      throw new BadRequestException(EMAIL_AND_SMS_NOT_ALLOWED);\n    }\n\n    let message =\n      user.profile?.emergencyMessage ??\n      this.config\n        .get(\"emergencyTrigger.defaultMessage\")\n        .toString()\n        .replace(\n          \"{name}\",\n          getNameOrEmail(user.profile?.name, user.profile?.surname, user.email)\n        );\n\n    let smsData: MessageListInstanceCreateOptions;\n\n    if (contact.phone) {\n      smsData = this.prepareSmsData(\n        contact.phone,\n        `${message === user.profile?.emergencyMessage\n          ? `${this.config.get(\n            \"emergencyTrigger.customMessagePrefix\"\n          )} ${message}`\n          : message\n          } ${user.profile?.locationAccess === true && data.locationUrl\n            ? data.locationUrl\n            : \"\"\n          }`.trim()\n      );\n\n      if (!data.delayed) {\n        await this.sendSms({ data: smsData, isFromQueue: data.isFromQueue });\n      }\n    }\n\n    const files = await this.fileRepository.findManyByParams({\n      userId: user.id,\n    });\n\n    let params: Record = {\n      contactName: contact.name,\n      username: getNameOrEmail(\n        user.profile?.name,\n        user.profile?.surname,\n        user.email\n      ),\n      message:\n        files.length > 0\n          ? `${message} ${this.config.get(\n            \"emergencyTrigger.ifThereAreAttachments\"\n          )}`\n          : message,\n    };\n\n    if (user.profile?.locationAccess === true) {\n      params.locationUrl = data.locationUrl ?? \"\";\n    }\n\n    const emailData = this.prepareEmailData(\n      getMailTemplateId(\n        `EMERGENCY_MESSAGE_WITH${user.profile?.locationAccess !== true ? \"OUT\" : \"\"\n        }_LOCATION`\n      ),\n      params,\n      {},\n      [\n        {\n          Email: contact.email,\n        },\n      ]\n    );\n\n    if (!data.delayed) {\n      await this.sendEmail({\n        data: emailData,\n        emergencyMessage: true,\n        userId: user.id,\n        isFromQueue: data.isFromQueue,\n      });\n    }\n\n    if (data.delayed) {\n      await this.messageService.addJobToQueue(\n        PROCESS.EMERGENCY,\n        {\n          sms: smsData,\n          email: emailData,\n        },\n        this.config.get(`queue.sendAfterTime.${data.messageType}`),\n        `${PROCESS.EMERGENCY}_${user.id}`\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NumericIdValidationPipe.html":{"url":"injectables/NumericIdValidationPipe.html","title":"injectable - NumericIdValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NumericIdValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipe/numeric-id-validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/pipe/numeric-id-validation.pipe.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(data: string, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipe/numeric-id-validation.pipe.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Joi.Schema\n\n                    \n                \n                    \n                        \n                                Defined in src/common/pipe/numeric-id-validation.pipe.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, Injectable, PipeTransform } from '@nestjs/common';\nimport * as Joi from 'joi';\nimport { VALIDATION_FAILED } from '../error/keys';\nimport { CustomError } from '../error/custom-error';\n\n@Injectable()\nexport class NumericIdValidationPipe implements PipeTransform {\n  private schema: Joi.Schema;\n\n  constructor() {\n    this.schema = Joi.number().integer().positive().required();\n  }\n\n  public transform(data: string, metadata: ArgumentMetadata): number {\n    const { error, value } = (this.schema as any).validate(+data);\n    if (error) {\n      throw new CustomError(VALIDATION_FAILED, error);\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PassportStrategy.html":{"url":"classes/PassportStrategy.html","title":"class - PassportStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PassportStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/strategy/passport.strategy.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                auth\n                            \n                            \n                                    Private\n                                fail\n                            \n                            \n                                    Private\n                                    Readonly\n                                jwtFromRequest\n                            \n                            \n                                    Protected\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                success\n                            \n                            \n                                    Private\n                                    Readonly\n                                verify\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                authenticate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: literal type, verify: (undefined,undefined) => void)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/strategy/passport.strategy.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        verify\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthenticationService\n\n                    \n                \n                    \n                        \n                                Defined in src/authentication/strategy/passport.strategy.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fail\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/authentication/strategy/passport.strategy.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        jwtFromRequest\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JwtFromRequestFunction\n\n                    \n                \n                    \n                        \n                                Defined in src/authentication/strategy/passport.strategy.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(PassportStrategy.name)\n                    \n                \n                    \n                        \n                                Defined in src/authentication/strategy/passport.strategy.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        success\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/authentication/strategy/passport.strategy.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        verify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/authentication/strategy/passport.strategy.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                    \n                    authenticate(request)\n                \n            \n\n\n            \n                \n                    Defined in src/authentication/strategy/passport.strategy.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as util from 'util';\nimport * as passport from 'passport';\nimport { Logger, ForbiddenException } from '@nestjs/common';\nimport { UserEntity } from '../../user/entity/user.entity';\nimport { JwtFromRequestFunction } from 'passport-jwt';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { MISSING_AUTHENTICATION_TOKEN } from '../../common/error/keys';\n\nexport class PassportStrategy {\n  private fail;\n  private readonly jwtFromRequest: JwtFromRequestFunction;\n  private readonly verify: (request, token, done) => UserEntity;\n  private success: (user, error) => UserEntity;\n  private auth: AuthenticationService;\n  protected readonly logger = new Logger(PassportStrategy.name);\n\n  constructor(\n    options: {\n      jwtFromRequest: JwtFromRequestFunction;\n      auth: AuthenticationService;\n      logger: Logger;\n    },\n    verify: (request, token) => UserEntity\n  ) {\n    passport.Strategy.call(this);\n\n    this.verify = verify;\n\n    this.auth = options.auth;\n    this.logger = options.logger;\n    this.jwtFromRequest = options.jwtFromRequest;\n  }\n\n  async authenticate(request) {\n    try {\n      const token = this.jwtFromRequest(request);\n      if (!token) {\n        throw new ForbiddenException(MISSING_AUTHENTICATION_TOKEN);\n      }\n\n      const decodedToken = await this.auth\n        .authenticate(token)\n        .catch((error) => this.logger.error(error));\n\n      return this.verify(request, decodedToken, this.success);\n    } catch (e) {\n      this.logger.error(e);\n      return this.fail(e);\n    }\n  }\n}\n\nutil.inherits(PassportStrategy, passport.Strategy);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PositiveInfoEntity.html":{"url":"entities/PositiveInfoEntity.html","title":"entity - PositiveInfoEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PositiveInfoEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entity/positive-info.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alertTime\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                minutesToNext\n                            \n                            \n                                pushNotificationTime\n                            \n                            \n                                smsTime\n                            \n                            \n                                triggerTime\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alertTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'alert_time', type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/positive-info.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/positive-info.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/positive-info.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minutesToNext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'minutes_to_next', type: 'smallint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/positive-info.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pushNotificationTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'push_notification_time', type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/positive-info.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        smsTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'sms_time', type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/positive-info.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'trigger_time', type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/positive-info.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'updated_at', type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/positive-info.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @JoinColumn({name: 'user_id'})@OneToOne(undefined, user => user.positiveInfo)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/positive-info.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'user_id', type: 'varchar', length: 36})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/positive-info.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  PrimaryGeneratedColumn,\n  CreateDateColumn,\n  JoinColumn,\n  OneToOne,\n} from \"typeorm\";\nimport { UserEntity } from \"../../user/entity/user.entity\";\n\n@Entity(\"positive_info\")\nexport class PositiveInfoEntity {\n  @PrimaryGeneratedColumn({ type: \"int\" })\n  id: number;\n\n  @Column({ name: \"user_id\", type: \"varchar\", length: 36 })\n  userId: string;\n\n  @Column({ name: \"minutes_to_next\", type: \"smallint\" })\n  minutesToNext: number;\n\n  @CreateDateColumn({ name: \"created_at\", type: \"datetime\" })\n  createdAt: Date;\n\n  @Column({ name: \"updated_at\", type: \"datetime\" })\n  updatedAt: string;\n\n  @Column({ name: \"push_notification_time\", type: \"datetime\" })\n  pushNotificationTime: Date;\n\n  @Column({ name: \"sms_time\", type: \"datetime\" })\n  smsTime: Date;\n\n  @Column({ name: \"alert_time\", type: \"datetime\" })\n  alertTime: Date;\n\n  @Column({ name: \"trigger_time\", type: \"datetime\" })\n  triggerTime: Date;\n\n  @JoinColumn({ name: \"user_id\" })\n  @OneToOne(() => UserEntity, (user) => user.positiveInfo)\n  user: UserEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PositiveInfoRepository.html":{"url":"classes/PositiveInfoRepository.html","title":"class - PositiveInfoRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PositiveInfoRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/repository/positive-info.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearAlertTime\n                            \n                            \n                                clearEverythingForUsers\n                            \n                            \n                                findByUserId\n                            \n                            \n                                findExpiredInformation\n                            \n                            \n                                findPushNotificationWithoutReaction\n                            \n                            \n                                findSmsWithoutReaction\n                            \n                            \n                                postponeBySlotTime\n                            \n                            \n                                setPushNotificationTime\n                            \n                            \n                                setSmsTime\n                            \n                            \n                                setTriggerTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(PositiveInfoRepository.name)\n                    \n                \n                    \n                        \n                                Defined in src/user/repository/positive-info.repository.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearAlertTime\n                        \n                    \n                \n            \n            \n                \nclearAlertTime(userIds: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/positive-info.repository.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userIds\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearEverythingForUsers\n                        \n                    \n                \n            \n            \n                \nclearEverythingForUsers(userIds: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/positive-info.repository.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userIds\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByUserId\n                        \n                    \n                \n            \n            \n                \nfindByUserId(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/positive-info.repository.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findExpiredInformation\n                        \n                    \n                \n            \n            \n                \nfindExpiredInformation()\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/positive-info.repository.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findPushNotificationWithoutReaction\n                        \n                    \n                \n            \n            \n                \nfindPushNotificationWithoutReaction(regularPushNotification: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/positive-info.repository.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    regularPushNotification\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findSmsWithoutReaction\n                        \n                    \n                \n            \n            \n                \nfindSmsWithoutReaction(regularPushNotification: boolean, column: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/positive-info.repository.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    regularPushNotification\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    column\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postponeBySlotTime\n                        \n                    \n                \n            \n            \n                \npostponeBySlotTime(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/positive-info.repository.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPushNotificationTime\n                        \n                    \n                \n            \n            \n                \nsetPushNotificationTime(userIds: string[], period: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/positive-info.repository.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userIds\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    period\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSmsTime\n                        \n                    \n                \n            \n            \n                \nsetSmsTime(userId: string, smsTime: number, alertTime: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/positive-info.repository.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    smsTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    alertTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTriggerTime\n                        \n                    \n                \n            \n            \n                \nsetTriggerTime(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/positive-info.repository.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository, UpdateResult, Brackets } from 'typeorm';\nimport { Logger } from '@nestjs/common';\nimport { PositiveInfoEntity } from '../entity/positive-info.entity';\n\n@EntityRepository(PositiveInfoEntity)\nexport class PositiveInfoRepository extends Repository {\n  protected readonly logger = new Logger(PositiveInfoRepository.name);\n\n  findExpiredInformation(): Promise {\n    return new Promise((resolve) => {\n      this.createQueryBuilder('positiveInfo')\n        .leftJoinAndSelect('positiveInfo.user', 'user')\n        .leftJoinAndSelect('user.profile', 'profile')\n        .where(\n          'date_add(positiveInfo.updated_at , interval minutes_to_next minute)  {\n            qb.where('regular_push_notification IS NULL');\n            qb.orWhere(`regular_push_notification = 0`);\n          })\n        )\n        .andWhere('positive_info_period IS NOT NULL')\n        .andWhere('sms_time IS NULL')\n        .getMany()\n        .then((data) => resolve(data))\n        .catch((error) => this.logger.error(error));\n    });\n  }\n\n  findPushNotificationWithoutReaction(\n    regularPushNotification: boolean\n  ): Promise {\n    let query = this.createQueryBuilder('positiveInfo')\n      .leftJoinAndSelect('positiveInfo.user', 'user')\n      .leftJoinAndSelect('user.profile', 'profile')\n      .where('push_notification_time IS NOT NULL')\n      .andWhere('NOW() >= push_notification_time')\n      .andWhere('sms_time IS NULL')\n      .andWhere('prefix IS NOT NULL');\n\n    if (regularPushNotification) {\n      query.andWhere('regular_push_notification = 1');\n    } else {\n      query.andWhere(\n        new Brackets((qb) => {\n          qb.where('regular_push_notification IS NULL');\n          qb.orWhere(`regular_push_notification = 0`);\n        })\n      );\n    }\n\n    return query.getMany();\n  }\n\n  findSmsWithoutReaction(\n    regularPushNotification: boolean,\n    column: string\n  ): Promise {\n    let query = this.createQueryBuilder('positiveInfo')\n      .leftJoinAndSelect('positiveInfo.user', 'user')\n      .leftJoinAndSelect('user.profile', 'profile')\n      .leftJoinAndSelect('user.contacts', 'contacts')\n      .where(`${column} IS NOT NULL`)\n      .andWhere(`NOW() >= ${column}`)\n      .andWhere('trigger_time IS NULL');\n\n    if (regularPushNotification) {\n      query.andWhere('regular_push_notification = 1');\n    } else {\n      query.andWhere(\n        new Brackets((qb) => {\n          qb.where('regular_push_notification IS NULL');\n          qb.orWhere(`regular_push_notification = 0`);\n        })\n      );\n    }\n\n    return query.getMany();\n  }\n\n  findByUserId(userId: string): Promise {\n    return this.createQueryBuilder()\n      .select('id')\n      .addSelect('NOW()', 'now')\n      .where('user_id = :userId', { userId })\n      .execute()\n      .then((data) => data.pop())\n      .catch((error) => this.logger.error(error));\n  }\n\n  setPushNotificationTime(\n    userIds: string[],\n    period: number\n  ): Promise {\n    return this.createQueryBuilder()\n      .update(PositiveInfoEntity)\n      .set({\n        pushNotificationTime: () => 'NOW() + INTERVAL :period MINUTE',\n      })\n      .where('user_id IN (:...userIds)', { userIds })\n      .setParameter('period', period)\n      .execute();\n  }\n\n  setSmsTime(\n    userId: string,\n    smsTime: number,\n    alertTime: number\n  ): Promise {\n    return this.createQueryBuilder()\n      .update(PositiveInfoEntity)\n      .set({\n        smsTime: () => 'NOW() + INTERVAL :smsTime MINUTE',\n        alertTime: () => 'NOW() + INTERVAL :alertTime MINUTE',\n      })\n      .where('user_id = :userId', { userId })\n      .setParameter('smsTime', smsTime)\n      .setParameter('alertTime', alertTime)\n      .execute();\n  }\n\n  clearAlertTime(userIds: string[]): Promise {\n    return this.createQueryBuilder()\n      .update(PositiveInfoEntity)\n      .set({\n        alertTime: null,\n      })\n      .where('user_id IN (:...userIds)', { userIds })\n      .execute();\n  }\n\n  clearEverythingForUsers(userIds: string[]): Promise {\n    return this.createQueryBuilder()\n      .update(PositiveInfoEntity)\n      .set({\n        alertTime: null,\n        smsTime: null,\n        pushNotificationTime: null,\n        triggerTime: null,\n      })\n      .where('user_id IN (:...userIds)', { userIds })\n      .execute();\n  }\n\n  setTriggerTime(userId: string): Promise {\n    return this.createQueryBuilder()\n      .update(PositiveInfoEntity)\n      .set({\n        triggerTime: () => 'NOW()',\n      })\n      .where('user_id = :userId', { userId })\n      .execute();\n  }\n\n  postponeBySlotTime(userId: string): Promise {\n    return this.createQueryBuilder()\n      .update(PositiveInfoEntity)\n      .set({\n        updatedAt: () => 'NOW()',\n      })\n      .where('user_id = :userId', { userId })\n      .execute();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PositiveInfoService.html":{"url":"injectables/PositiveInfoService.html","title":"injectable - PositiveInfoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PositiveInfoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/service/positive-info.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findByUserId\n                            \n                            \n                                    Async\n                                savePositiveInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(positiveInfoRepository: PositiveInfoRepository, triggerTimeSlotService: TriggerTimeSlotService)\n                    \n                \n                        \n                            \n                                Defined in src/user/service/positive-info.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        positiveInfoRepository\n                                                  \n                                                        \n                                                                        PositiveInfoRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        triggerTimeSlotService\n                                                  \n                                                        \n                                                                        TriggerTimeSlotService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findByUserId\n                        \n                    \n                \n            \n            \n                \nfindByUserId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/positive-info.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        savePositiveInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    savePositiveInfo(userId: string, params: NotePositiveInfoDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/positive-info.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                NotePositiveInfoDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(PositiveInfoService.name)\n                    \n                \n                    \n                        \n                                Defined in src/user/service/positive-info.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  Logger,\n  BadRequestException,\n} from \"@nestjs/common\";\nimport { PositiveInfoRepository } from \"../repository/positive-info.repository\";\nimport { PositiveInfoEntity } from \"../entity/positive-info.entity\";\nimport { SAVE_POSITIVE_INFO_FAILED } from \"../../common/error/keys\";\nimport { NotePositiveInfoDTO } from \"../request/dto/note-positive-info.dto\";\nimport { TriggerTimeSlotService } from \"../../trigger-time-slot/service/trigger-time-slot.service\";\n\n@Injectable()\nexport class PositiveInfoService {\n  private readonly logger = new Logger(PositiveInfoService.name);\n\n  constructor(\n    @Inject(PositiveInfoRepository)\n    private readonly positiveInfoRepository: PositiveInfoRepository,\n    private readonly triggerTimeSlotService: TriggerTimeSlotService,\n  ) { }\n\n  findByUserId(id: string): Promise {\n    return this.positiveInfoRepository.findByUserId(id);\n  }\n\n  async savePositiveInfo(\n    userId: string,\n    params: NotePositiveInfoDTO\n  ): Promise {\n    const positiveInfo = await this.positiveInfoRepository.findByUserId(userId);\n\n    let updatedAt = positiveInfo?.now;\n\n    // const activeSlot = await this.triggerTimeSlotService.getActiveTimeSlot(userId);\n\n    // if (activeSlot) {\n    //   updatedAt = activeSlot.to as any;\n    // }\n\n    let data: Partial = {\n      ...positiveInfo,\n      userId,\n      updatedAt,\n      smsTime: null,\n      pushNotificationTime: null,\n      alertTime: null,\n      triggerTime: null,\n    };\n\n    if (params && params?.minutesToNext) {\n      data.minutesToNext = params.minutesToNext;\n    }\n\n    this.logger.log(`Positive info noticed for ${userId}`);\n\n    return this.positiveInfoRepository.save(data).catch((error) => {\n      this.logger.error(error);\n      throw new BadRequestException(SAVE_POSITIVE_INFO_FAILED);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProfileEntity.html":{"url":"entities/ProfileEntity.html","title":"entity - ProfileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProfileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entity/profile.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                allowNotifications\n                            \n                            \n                                automatedEmergency\n                            \n                            \n                                createdAt\n                            \n                            \n                                dateOfBirth\n                            \n                            \n                                emergencyEmailAndSms\n                            \n                            \n                                emergencyMessage\n                            \n                            \n                                frequencyOfRegularNotification\n                            \n                            \n                                id\n                            \n                            \n                                lastHospitalVisit\n                            \n                            \n                                location\n                            \n                            \n                                locationAccess\n                            \n                            \n                                mostRecentDiagnosis\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                positiveInfoPeriod\n                            \n                            \n                                prefix\n                            \n                            \n                                primaryPhysician\n                            \n                            \n                                primaryPhysicianAddress\n                            \n                            \n                                pulseBasedTriggerBackgroundModesEnabled\n                            \n                            \n                                pulseBasedTriggerConnectedToGoogleFit\n                            \n                            \n                                pulseBasedTriggerGoogleFitAuthenticated\n                            \n                            \n                                pulseBasedTriggerIOSAppleWatchPaired\n                            \n                            \n                                pulseBasedTriggerIOSHealthPermissions\n                            \n                            \n                                readManual\n                            \n                            \n                                regularNotificationTime\n                            \n                            \n                                regularPushNotification\n                            \n                            \n                                seriousMedicalIssues\n                            \n                            \n                                surname\n                            \n                            \n                                    Optional\n                                timezone\n                            \n                            \n                                tipsAndTricks\n                            \n                            \n                                updatedAt\n                            \n                            \n                                uploadedDocumentsAccess\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allowNotifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'allow_notifications', type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        automatedEmergency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'automated_emergency', type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'date_of_birth', type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emergencyEmailAndSms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'emergency_email_and_sms', type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emergencyMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'emergency_message', type: 'varchar', length: 1000})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frequencyOfRegularNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'frequency_of_regular_notification', type: 'tinyint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastHospitalVisit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'last_hospital_visit', type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationAccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'location_access', type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostRecentDiagnosis\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'most_recent_diagnosis', type: 'varchar', length: 300})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 12})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        positiveInfoPeriod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'positive_info_period', type: 'tinyint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryPhysician\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'primary_phisican', type: 'varchar', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryPhysicianAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'primary_phisican_address', type: 'varchar', length: 200})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerBackgroundModesEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'pulse_based_trigger_background_modes_enabled', type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerConnectedToGoogleFit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'pulse_based_trigger_connected_to_google_fit', type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerGoogleFitAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'pulse_based_trigger_google_fit_authenticated', type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerIOSAppleWatchPaired\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'pulse_based_trigger_ios_apple_watch_paired', type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerIOSHealthPermissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'pulse_based_trigger_ios_health_permissions', type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readManual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'read_manual', type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        regularNotificationTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'regular_notification_time', type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        regularPushNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'regular_push_notification', type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seriousMedicalIssues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'serious_medical_issues', type: 'longtext'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        timezone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tipsAndTricks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'tips_and_tricks', type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadedDocumentsAccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'uploaded_documents_access', type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @JoinColumn({name: 'user_id'})@OneToOne(undefined, user => user.profile)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:133\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'user_id', type: 'varchar', length: 36})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  PrimaryGeneratedColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n  OneToOne,\n  JoinColumn,\n} from \"typeorm\";\nimport { UserEntity } from \"./user.entity\";\n\n@Entity(\"profile\")\nexport class ProfileEntity {\n  @PrimaryGeneratedColumn({ type: \"int\" })\n  id: number;\n\n  @Column({ name: \"user_id\", type: \"varchar\", length: 36 })\n  userId: string;\n\n  @Column({ type: \"varchar\", length: 100 })\n  name: string;\n\n  @Column({ type: \"varchar\", length: 100 })\n  surname: string;\n\n  @Column({ type: \"varchar\", length: 3 })\n  prefix: number;\n\n  @Column({ type: \"varchar\", length: 12 })\n  phone: string;\n\n  @Column({ type: \"varchar\", length: 200 })\n  address: string;\n\n  @Column({ name: \"date_of_birth\", type: \"date\" })\n  dateOfBirth: Date;\n\n  @Column({ name: \"primary_phisican\", type: \"varchar\", length: 100 })\n  primaryPhysician: string;\n\n  @Column({ name: \"primary_phisican_address\", type: \"varchar\", length: 200 })\n  primaryPhysicianAddress: string;\n\n  @Column({ name: \"serious_medical_issues\", type: \"longtext\" })\n  seriousMedicalIssues: boolean;\n\n  @Column({ name: \"most_recent_diagnosis\", type: \"varchar\", length: 300 })\n  mostRecentDiagnosis: string;\n\n  @Column({ name: \"last_hospital_visit\", type: \"date\" })\n  lastHospitalVisit: Date;\n\n  @Column({ name: \"allow_notifications\", type: \"boolean\" })\n  allowNotifications: boolean;\n\n  @Column({ name: \"tips_and_tricks\", type: \"boolean\" })\n  tipsAndTricks: boolean;\n\n  @Column({ name: \"emergency_email_and_sms\", type: \"boolean\" })\n  emergencyEmailAndSms: boolean;\n\n  @Column({ name: \"location_access\", type: \"boolean\" })\n  locationAccess: boolean;\n\n  @Column({ name: \"uploaded_documents_access\", type: \"boolean\" })\n  uploadedDocumentsAccess: boolean;\n\n  @Column({ name: \"emergency_message\", type: \"varchar\", length: 1000 })\n  emergencyMessage: string;\n\n  @Column({ name: \"read_manual\", type: \"boolean\" })\n  readManual: boolean;\n\n  @Column({ name: \"automated_emergency\", type: \"boolean\" })\n  automatedEmergency: boolean;\n\n  @Column({ name: \"regular_push_notification\", type: \"boolean\" })\n  regularPushNotification: boolean;\n\n  @Column({\n    name: \"pulse_based_trigger_ios_health_permissions\",\n    type: \"boolean\",\n  })\n  pulseBasedTriggerIOSHealthPermissions: boolean;\n\n  @Column({\n    name: \"pulse_based_trigger_ios_apple_watch_paired\",\n    type: \"boolean\",\n  })\n  pulseBasedTriggerIOSAppleWatchPaired: boolean;\n\n  @Column({\n    name: \"pulse_based_trigger_google_fit_authenticated\",\n    type: \"boolean\",\n  })\n  pulseBasedTriggerGoogleFitAuthenticated: boolean;\n\n  @Column({\n    name: \"pulse_based_trigger_connected_to_google_fit\",\n    type: \"boolean\",\n  })\n  pulseBasedTriggerConnectedToGoogleFit: boolean;\n\n  @Column({\n    name: \"pulse_based_trigger_background_modes_enabled\",\n    type: \"boolean\",\n  })\n  pulseBasedTriggerBackgroundModesEnabled: boolean;\n\n  @Column({ name: \"frequency_of_regular_notification\", type: \"tinyint\" })\n  frequencyOfRegularNotification: number;\n\n  @Column({ name: \"positive_info_period\", type: \"tinyint\" })\n  positiveInfoPeriod: number;\n\n  @Column({ type: \"varchar\", length: 200 })\n  location: string;\n\n  @Column({ type: 'varchar', nullable: true })\n  timezone?: string;\n\n  @CreateDateColumn({ name: \"created_at\", type: \"datetime\" })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: \"updated_at\", type: \"datetime\" })\n  updatedAt: Date;\n\n  @UpdateDateColumn({ name: \"regular_notification_time\", type: \"datetime\" })\n  regularNotificationTime: Date;\n\n  @JoinColumn({ name: \"user_id\" })\n  @OneToOne(() => UserEntity, (user) => user.profile)\n  user: UserEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfileEntitySubscriber.html":{"url":"classes/ProfileEntitySubscriber.html","title":"class - ProfileEntitySubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfileEntitySubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entity/profile.entity-subscriber.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        EntitySubscriberInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                encryptionColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterLoad\n                            \n                            \n                                beforeInsert\n                            \n                            \n                                beforeUpdate\n                            \n                            \n                                listenTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        encryptionColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n        'name',\n        'surname',\n        'prefix',\n        'phone',\n        'address',\n        'dateOfBirth',\n        'primaryPhysician',\n        'primaryPhysicianAddress',\n        'seriousMedicalIssues',\n        'mostRecentDiagnosis',\n        'lastHospitalVisit',\n        'emergencyMessage',\n        'location',\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/user/entity/profile.entity-subscriber.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterLoad\n                        \n                    \n                \n            \n            \n                \nafterLoad(entity: ProfileEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/user/entity/profile.entity-subscriber.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                ProfileEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        beforeInsert\n                        \n                    \n                \n            \n            \n                \nbeforeInsert(event: InsertEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/user/entity/profile.entity-subscriber.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                InsertEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     void | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        beforeUpdate\n                        \n                    \n                \n            \n            \n                \nbeforeUpdate(event: UpdateEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/user/entity/profile.entity-subscriber.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     void | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listenTo\n                        \n                    \n                \n            \n            \n                \nlistenTo()\n                \n            \n\n\n            \n                \n                    Defined in src/user/entity/profile.entity-subscriber.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntitySubscriberInterface, EventSubscriber, InsertEvent, UpdateEvent } from \"typeorm\"\nimport { decryptEntity, encryptEntity } from \"../../common/helper/entity-encrypter\";\nimport { ProfileEntity } from \"./profile.entity\"\n\n@EventSubscriber()\nexport class ProfileEntitySubscriber implements EntitySubscriberInterface {\n    private readonly encryptionColumns = [\n        'name',\n        'surname',\n        'prefix',\n        'phone',\n        'address',\n        'dateOfBirth',\n        'primaryPhysician',\n        'primaryPhysicianAddress',\n        'seriousMedicalIssues',\n        'mostRecentDiagnosis',\n        'lastHospitalVisit',\n        'emergencyMessage',\n        'location',\n    ];\n\n    listenTo() {\n        return ProfileEntity\n    }\n\n    beforeInsert(event: InsertEvent): void | Promise {\n        encryptEntity(event.entity, this.encryptionColumns);\n    }\n\n    beforeUpdate(event: UpdateEvent): void | Promise {\n        encryptEntity(event.entity, this.encryptionColumns);\n    }\n\n    afterLoad(entity: ProfileEntity) {\n        decryptEntity(entity, this.encryptionColumns);\n\n        const seriousMedicalIssues = (entity.seriousMedicalIssues as any);\n\n        entity.seriousMedicalIssues = seriousMedicalIssues == 1 || seriousMedicalIssues == 'true';\n        entity.prefix = parseInt(`${entity.prefix}`) || null;\n        entity.lastHospitalVisit = entity.lastHospitalVisit ? new Date(entity.lastHospitalVisit) : null;\n        entity.dateOfBirth = entity.dateOfBirth ? new Date(entity.dateOfBirth) : null;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfileRO.html":{"url":"classes/ProfileRO.html","title":"class - ProfileRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfileRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/response/profile.ro.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                allowNotifications\n                            \n                            \n                                automatedEmergency\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                dateOfBirth\n                            \n                            \n                                deviceId\n                            \n                            \n                                emergencyEmailAndSms\n                            \n                            \n                                emergencyMessage\n                            \n                            \n                                frequencyOfRegularNotification\n                            \n                            \n                                lastHospitalVisit\n                            \n                            \n                                location\n                            \n                            \n                                locationAccess\n                            \n                            \n                                mostRecentDiagnosis\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                positiveInfoPeriod\n                            \n                            \n                                    Optional\n                                prefix\n                            \n                            \n                                primaryPhysician\n                            \n                            \n                                primaryPhysicianAddress\n                            \n                            \n                                pulseBasedTriggerBackgroundModesEnabled\n                            \n                            \n                                pulseBasedTriggerConnectedToGoogleFit\n                            \n                            \n                                pulseBasedTriggerGoogleFitAuthenticated\n                            \n                            \n                                pulseBasedTriggerIOSAppleWatchPaired\n                            \n                            \n                                pulseBasedTriggerIOSHealthPermissions\n                            \n                            \n                                readManual\n                            \n                            \n                                regularPushNotification\n                            \n                            \n                                seriousMedicalIssues\n                            \n                            \n                                    Optional\n                                surname\n                            \n                            \n                                timezone\n                            \n                            \n                                tipsAndTricks\n                            \n                            \n                                updatedAt\n                            \n                            \n                                uploadedDocumentsAccess\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allowNotifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        automatedEmergency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:159\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emergencyEmailAndSms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emergencyMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frequencyOfRegularNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastHospitalVisit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationAccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostRecentDiagnosis\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        positiveInfoPeriod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        prefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryPhysician\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryPhysicianAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerBackgroundModesEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerConnectedToGoogleFit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:151\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerGoogleFitAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:147\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerIOSAppleWatchPaired\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:143\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerIOSHealthPermissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readManual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        regularPushNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seriousMedicalIssues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timezone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tipsAndTricks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:163\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadedDocumentsAccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/profile.ro.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Exclude,\n  Expose,\n  Transform,\n  TransformFnParams,\n} from \"class-transformer\";\nimport * as moment from \"moment\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\n@Exclude()\nexport class ProfileRO {\n  @Expose()\n  @ApiProperty({ type: String })\n  userId: string;\n\n  @Expose()\n  @Transform(({ value }: TransformFnParams) => value ?? null)\n  @ApiProperty({ type: String })\n  address?: string;\n\n  @Expose()\n  @Transform(({ value }: TransformFnParams) => value ?? null)\n  @ApiProperty({ type: String })\n  name?: string;\n\n  @Expose()\n  @Transform(({ value }: TransformFnParams) => value ?? null)\n  @ApiProperty({ type: String })\n  surname?: string;\n\n  @Expose()\n  @Transform(({ value }: TransformFnParams) => value ?? null)\n  @ApiProperty({ type: String })\n  phone?: string;\n\n  @Expose()\n  @Transform(({ value }: TransformFnParams) =>\n    value !== undefined ? Number(value) : null\n  )\n  @ApiProperty({ type: Number })\n  prefix?: number;\n\n  @Expose()\n  @Transform(({ value }: TransformFnParams) =>\n    value ? moment(value).format(\"DD/MM/YYYY\") : null\n  )\n  @ApiProperty({ type: String })\n  dateOfBirth?: string;\n\n  @Expose()\n  @Transform(({ value }: TransformFnParams) => value ?? null)\n  @ApiProperty({ type: String })\n  primaryPhysician: string;\n\n  @Expose()\n  @Transform(({ value }: TransformFnParams) => value ?? null)\n  @ApiProperty({ type: String })\n  primaryPhysicianAddress: string;\n\n  @Expose()\n  @Transform(({ value }: TransformFnParams) => value ?? null)\n  @ApiProperty({ type: String })\n  deviceId: string;\n\n  @Expose()\n  @Transform(({ value }: TransformFnParams) =>\n    value !== undefined ? value : null\n  )\n  @ApiProperty({ type: Boolean })\n  seriousMedicalIssues: boolean;\n\n  @Expose()\n  @Transform(({ value }: TransformFnParams) => value ?? null)\n  @ApiProperty({ type: String })\n  mostRecentDiagnosis: string;\n\n  @Expose()\n  @Transform(({ value }: TransformFnParams) =>\n    value ? moment(value).format(\"DD/MM/YYYY\") : null\n  )\n  @ApiProperty({ type: String })\n  lastHospitalVisit: string;\n\n  @Expose()\n  @ApiProperty({ type: Boolean })\n  allowNotifications: boolean;\n\n  @Expose()\n  @ApiProperty({ type: Boolean })\n  tipsAndTricks: boolean;\n\n  @Expose()\n  @ApiProperty({ type: Boolean })\n  emergencyEmailAndSms: boolean;\n\n  @Expose()\n  @ApiProperty({ type: Boolean })\n  locationAccess: boolean;\n\n  @Expose()\n  @ApiProperty({ type: Boolean })\n  uploadedDocumentsAccess: boolean;\n\n  @Expose()\n  @Transform(({ value }: TransformFnParams) => value ?? null)\n  @ApiProperty({ type: String })\n  emergencyMessage: string;\n\n  @Expose()\n  @ApiProperty({ type: Boolean })\n  readManual: boolean;\n\n  @Expose()\n  @ApiProperty({ type: Boolean })\n  automatedEmergency: boolean;\n\n  @Expose()\n  @ApiProperty({ type: Boolean })\n  regularPushNotification: boolean;\n\n  @Expose()\n  @ApiProperty({ type: Number })\n  frequencyOfRegularNotification: number;\n\n  @Expose()\n  @ApiProperty({ type: Number })\n  positiveInfoPeriod: number;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  location: string;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  timezone: string;\n\n  @Expose()\n  @ApiProperty({ type: Boolean })\n  pulseBasedTriggerIOSHealthPermissions: boolean;\n\n  @Expose()\n  @ApiProperty({ type: Boolean })\n  pulseBasedTriggerIOSAppleWatchPaired: boolean;\n\n  @Expose()\n  @ApiProperty({ type: Boolean })\n  pulseBasedTriggerGoogleFitAuthenticated: boolean;\n\n  @Expose()\n  @ApiProperty({ type: Boolean })\n  pulseBasedTriggerConnectedToGoogleFit: boolean;\n\n  @Expose()\n  @ApiProperty({ type: Boolean })\n  pulseBasedTriggerBackgroundModesEnabled: boolean;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  createdAt: string;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  updatedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfileRepository.html":{"url":"classes/ProfileRepository.html","title":"class - ProfileRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfileRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/repository/profile.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disableAutomatedEmergencyForUsers\n                            \n                            \n                                findByUserId\n                            \n                            \n                                findWhereRegularNotificationIsNeeded\n                            \n                            \n                                setRegularNotificationTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ProfileRepository.name)\n                    \n                \n                    \n                        \n                                Defined in src/user/repository/profile.repository.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disableAutomatedEmergencyForUsers\n                        \n                    \n                \n            \n            \n                \ndisableAutomatedEmergencyForUsers(userIds: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/profile.repository.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userIds\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByUserId\n                        \n                    \n                \n            \n            \n                \nfindByUserId(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/profile.repository.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findWhereRegularNotificationIsNeeded\n                        \n                    \n                \n            \n            \n                \nfindWhereRegularNotificationIsNeeded()\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/profile.repository.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRegularNotificationTime\n                        \n                    \n                \n            \n            \n                \nsetRegularNotificationTime(userIds: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/profile.repository.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userIds\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository, Brackets, UpdateResult } from 'typeorm';\nimport { Logger } from '@nestjs/common';\nimport { ProfileEntity } from '../entity/profile.entity';\n\n@EntityRepository(ProfileEntity)\nexport class ProfileRepository extends Repository {\n  protected readonly logger = new Logger(ProfileRepository.name);\n\n  findByUserId(userId: string): Promise {\n    return new Promise((resolve) => {\n      this.findOne({ where: { userId }, relations: ['user'] })\n        .then((data) => resolve(data))\n        .catch((error) => this.logger.error(error));\n    });\n  }\n\n  findWhereRegularNotificationIsNeeded(): Promise {\n    return this.createQueryBuilder('profile')\n      .select('profile.user_id', 'userId')\n      .leftJoinAndSelect('profile.user', 'user')\n      .leftJoin('user.positiveInfo', 'positiveInfo')\n      .addSelect('NOW()', 'now')\n      .addSelect('user.device_id', 'deviceId')\n      .addSelect('profile.timezone', 'timezone')\n      .where('frequency_of_regular_notification IS NOT NULL')\n      .andWhere('positiveInfo.push_notification_time IS NULL')\n      .andWhere('positiveInfo.sms_time IS NULL')\n      .andWhere('user.device_id IS NOT NULL')\n      .andWhere('regular_push_notification = 1')\n      .andWhere('automated_emergency = 1')\n      .andWhere(\n        'date_add(positiveInfo.updated_at, interval frequency_of_regular_notification minute)  {\n      //     qb.where('regular_notification_time IS NULL');\n      //     qb.orWhere(\n      //       `regular_notification_time + INTERVAL frequency_of_regular_notification MINUTE  {\n    return this.createQueryBuilder()\n      .update(ProfileEntity)\n      .set({\n        regularNotificationTime: () => 'NOW()',\n      })\n      .where('user_id IN (:...userIds)', { userIds })\n      .execute();\n  }\n\n  disableAutomatedEmergencyForUsers(userIds: string[]): Promise {\n    return this.createQueryBuilder()\n      .update(ProfileEntity)\n      .set({\n        automatedEmergency: false\n      })\n      .where('user_id IN (:...userIds)', { userIds })\n      .execute();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/service/profile.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findByUserId\n                            \n                            \n                                    Async\n                                saveProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: ProfileRepository)\n                    \n                \n                        \n                            \n                                Defined in src/user/service/profile.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        ProfileRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findByUserId\n                        \n                    \n                \n            \n            \n                \nfindByUserId(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/profile.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveProfile(profile: ProfileEntity, data: UpdateUserProfileDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/profile.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profile\n                                    \n                                                ProfileEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateUserProfileDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ProfileService.name)\n                    \n                \n                    \n                        \n                                Defined in src/user/service/profile.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  Logger,\n  BadRequestException,\n} from '@nestjs/common';\nimport { ProfileRepository } from '../repository/profile.repository';\nimport { ProfileEntity } from '../entity/profile.entity';\nimport { SAVE_PROFILE_FAILED } from '../../common/error/keys';\nimport { UpdateUserProfileDTO } from '../request/dto/update-user-profile.dto';\n\n@Injectable()\nexport class ProfileService {\n  private readonly logger = new Logger(ProfileService.name);\n\n  constructor(\n    @Inject(ProfileRepository)\n    private readonly profileRepository: ProfileRepository\n  ) {}\n\n  findByUserId(userId: string): Promise {\n    return this.profileRepository.findByUserId(userId);\n  }\n\n  async saveProfile(\n    profile: ProfileEntity,\n    data: UpdateUserProfileDTO\n  ): Promise {\n    return this.profileRepository\n      .save({ ...profile, ...data })\n      .catch((error) => {\n        this.logger.error(error);\n        throw new BadRequestException(SAVE_PROFILE_FAILED);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueueModule.html":{"url":"modules/QueueModule.html","title":"module - QueueModule","body":"\n                   \n\n\n\n\n    Modules\n    QueueModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_QueueModule\n\n\n\ncluster_QueueModule_providers\n\n\n\ncluster_QueueModule_exports\n\n\n\n\nMessageService \n\nMessageService \n\n\n\nQueueModule\n\nQueueModule\n\nMessageService  -->\n\nQueueModule->MessageService \n\n\n\n\n\nMessageService\n\nMessageService\n\nQueueModule -->\n\nMessageService->QueueModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/queue/queue.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MessageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MessageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { ConfigProvider } from '../common/provider/config.provider';\nimport { MessageConsumer } from './consumer/message.consumer';\nimport { BullModule } from '@nestjs/bull';\nimport { QUEUE } from './constant/queue.constant';\nimport { QueueMessageProvider } from './provider/message-queue.provider';\nimport { NotificationModule } from '../notification/notification.module';\nimport configuration from '../config/default';\nimport { MessageService } from './service/message.service';\nimport { TriggerTimeSlotModule } from '../trigger-time-slot/trigger-time-slot.module';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  providers: [\n    ConfigProvider,\n    MessageConsumer,\n    QueueMessageProvider,\n    MessageService,\n  ],\n  imports: [\n    forwardRef(() => NotificationModule),\n    forwardRef(() => TriggerTimeSlotModule),\n    BullModule.registerQueue({\n      name: QUEUE.MESSAGE,\n      defaultJobOptions: {\n        removeOnComplete: true,\n        attempts: configuration().queue.numberOfAttempts,\n      },\n    }),\n    ConfigModule.forRoot({\n      load: [configuration],\n    }),\n  ],\n  exports: [QueueMessageProvider, MessageService],\n})\nexport class QueueModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html":{"url":"classes/RemoveAutomatedVoiceCallFromProfile1651485422365.html","title":"class - RemoveAutomatedVoiceCallFromProfile1651485422365","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveAutomatedVoiceCallFromProfile1651485422365\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1651485422365-removeAutomatedVoiceCallFromProfile.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                column\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        column\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TableColumn({\n    name: 'automated_voice_call',\n    type: 'tinyint',\n    length: '1',\n    isNullable: true,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1651485422365-removeAutomatedVoiceCallFromProfile.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"profile\"\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1651485422365-removeAutomatedVoiceCallFromProfile.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1651485422365-removeAutomatedVoiceCallFromProfile.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1651485422365-removeAutomatedVoiceCallFromProfile.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, TableColumn } from \"typeorm\";\n\nexport class RemoveAutomatedVoiceCallFromProfile1651485422365\n  implements MigrationInterface\n{\n  private tableName = \"profile\";\n\n  private column = new TableColumn({\n    name: 'automated_voice_call',\n    type: 'tinyint',\n    length: '1',\n    isNullable: true,\n  });\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropColumn(this.tableName, this.column);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.addColumn(this.tableName, this.column);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveLocationFromPositiveInfo1651485422345.html":{"url":"classes/RemoveLocationFromPositiveInfo1651485422345.html","title":"class - RemoveLocationFromPositiveInfo1651485422345","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveLocationFromPositiveInfo1651485422345\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1651485422345-removeLocationFromPositiveInfo.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                column\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        column\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TableColumn({\n    name: \"location\",\n    type: \"varchar\",\n    length: \"200\",\n    isNullable: true,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1651485422345-removeLocationFromPositiveInfo.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"positive_info\"\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1651485422345-removeLocationFromPositiveInfo.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1651485422345-removeLocationFromPositiveInfo.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1651485422345-removeLocationFromPositiveInfo.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, TableColumn } from \"typeorm\";\n\nexport class RemoveLocationFromPositiveInfo1651485422345\n  implements MigrationInterface\n{\n  private tableName = \"positive_info\";\n\n  private column = new TableColumn({\n    name: \"location\",\n    type: \"varchar\",\n    length: \"200\",\n    isNullable: true,\n  });\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropColumn(this.tableName, this.column);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.addColumn(this.tableName, this.column);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/authentication/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/roles.guard.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/authentication/roles.guard.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private readonly reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.get('roles', context.getHandler());\n    if (!roles || roles.length  role === user?.role);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchedulerModule.html":{"url":"modules/SchedulerModule.html","title":"module - SchedulerModule","body":"\n                   \n\n\n\n\n    Modules\n    SchedulerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SchedulerModule\n\n\n\ncluster_SchedulerModule_imports\n\n\n\ncluster_SchedulerModule_exports\n\n\n\ncluster_SchedulerModule_providers\n\n\n\n\nMessageModule\n\nMessageModule\n\n\n\nSchedulerModule\n\nSchedulerModule\n\nSchedulerModule -->\n\nMessageModule->SchedulerModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nSchedulerModule -->\n\nUserModule->SchedulerModule\n\n\n\n\n\nSchedulerService \n\nSchedulerService \n\nSchedulerService  -->\n\nSchedulerModule->SchedulerService \n\n\n\n\n\nSchedulerService\n\nSchedulerService\n\nSchedulerModule -->\n\nSchedulerService->SchedulerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/scheduler/scheduler.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchedulerService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MessageModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SchedulerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { ScheduleModule } from 'nest-schedule';\nimport { SchedulerService } from './scheduler.service';\nimport { NotificationModule } from '../notification/notification.module';\nimport { UserModule } from '../user/user.module';\nimport { AppModule } from '../app.module';\nimport { ConfigProvider } from '../common/provider/config.provider';\nimport { MessageModule } from '../message/message.module';\nimport { ConfigModule } from '@nestjs/config';\nimport configuration from '../config/default';\nimport { TriggerTimeSlotModule } from '../trigger-time-slot/trigger-time-slot.module';\n\n@Module({\n  imports: [\n    ScheduleModule.register(),\n    forwardRef(() => NotificationModule),\n    UserModule,\n    MessageModule,\n    forwardRef(() => TriggerTimeSlotModule),\n    forwardRef(() => AppModule),\n    ConfigModule.forRoot({\n      load: [configuration],\n    }),\n  ],\n  providers: [SchedulerService, ConfigProvider],\n  exports: [SchedulerService],\n})\nexport class SchedulerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchedulerService.html":{"url":"injectables/SchedulerService.html","title":"injectable - SchedulerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchedulerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/scheduler/scheduler.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NestSchedule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkNotRegularPositiveInfo\n                            \n                            \n                                    Async\n                                checkRegularPositiveInfo\n                            \n                            \n                                    Async\n                                informAboutTimeSlots\n                            \n                            \n                                    Async\n                                sendAlertDueToLackOfPositiveInfo\n                            \n                            \n                                    Async\n                                sendPushNotificationDueToLackOfPositiveInfo\n                            \n                            \n                                    Async\n                                sendRegularPushNotification\n                            \n                            \n                                    Async\n                                sendSmsDueToLackOfPositiveInfo\n                            \n                            \n                                    Private\n                                shouldStartEscalation\n                            \n                            \n                                    Async\n                                triggerEmergencyMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, positiveInfoRepository: PositiveInfoRepository, messageService: MessageService, notificationService: NotificationService, profileRepository: ProfileRepository, triggerTimeSlotService: TriggerTimeSlotService)\n                    \n                \n                        \n                            \n                                Defined in src/scheduler/scheduler.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        positiveInfoRepository\n                                                  \n                                                        \n                                                                        PositiveInfoRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        ProfileRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        triggerTimeSlotService\n                                                  \n                                                        \n                                                                        TriggerTimeSlotService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkNotRegularPositiveInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkNotRegularPositiveInfo()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron('0 */5 * * * *')\n                \n            \n\n            \n                \n                    Defined in src/scheduler/scheduler.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkRegularPositiveInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRegularPositiveInfo()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron('0 */5 * * * *')\n                \n            \n\n            \n                \n                    Defined in src/scheduler/scheduler.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        informAboutTimeSlots\n                        \n                    \n                \n            \n            \n                \n                    \n                    informAboutTimeSlots()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron('0 */5 * * * *')\n                \n            \n\n            \n                \n                    Defined in src/scheduler/scheduler.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendAlertDueToLackOfPositiveInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendAlertDueToLackOfPositiveInfo(regularPushNotification: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/scheduler/scheduler.service.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    regularPushNotification\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendPushNotificationDueToLackOfPositiveInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPushNotificationDueToLackOfPositiveInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/scheduler/scheduler.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendRegularPushNotification\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendRegularPushNotification()\n                \n            \n\n\n            \n                \n                    Defined in src/scheduler/scheduler.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendSmsDueToLackOfPositiveInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendSmsDueToLackOfPositiveInfo(regularPushNotification: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/scheduler/scheduler.service.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    regularPushNotification\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        shouldStartEscalation\n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldStartEscalation(timezone?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/scheduler/scheduler.service.ts:296\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timezone\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        triggerEmergencyMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    triggerEmergencyMessage(regularPushNotification: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/scheduler/scheduler.service.ts:244\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    regularPushNotification\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(SchedulerService.name)\n                    \n                \n                    \n                        \n                                Defined in src/scheduler/scheduler.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { Cron, NestSchedule } from \"nest-schedule\";\nimport { PositiveInfoRepository } from \"../user/repository/positive-info.repository\";\nimport { MessageService } from \"../message/service/mesage.service\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { DICTIONARY } from \"../common/constant/dictionary.constant\";\nimport { NotificationService } from \"../notification/service/notification.service\";\nimport { getNameOrEmail } from \"../common/helper/get-name-or-email\";\nimport { ProfileRepository } from \"../user/repository/profile.repository\";\nimport * as moment from \"moment\";\nimport { MESSAGE_TYPE } from \"../message/constant/message-type.constant\";\nimport { TriggerTimeSlotService } from \"../trigger-time-slot/service/trigger-time-slot.service\";\nimport { numberToDaysOfWeek } from \"../trigger-time-slot/enum/days-of-week.enum\";\nimport { modifyTimeAccordingTimezone } from \"../common/helper/modify-time-according-timezone\";\n\n@Injectable()\nexport class SchedulerService extends NestSchedule {\n  private readonly logger = new Logger(SchedulerService.name);\n  constructor(\n    @Inject(DICTIONARY.CONFIG) private readonly config: ConfigService,\n    @Inject(PositiveInfoRepository)\n    private readonly positiveInfoRepository: PositiveInfoRepository,\n    private readonly messageService: MessageService,\n    private readonly notificationService: NotificationService,\n    private readonly profileRepository: ProfileRepository,\n    private readonly triggerTimeSlotService: TriggerTimeSlotService,\n  ) {\n    super();\n  }\n\n  @Cron(\"0 */5 * * * *\")\n  async informAboutTimeSlots() {\n    const slots = await this.triggerTimeSlotService.getSlotsToInform();\n\n    for (let slot of slots) {\n      await this.positiveInfoRepository.postponeBySlotTime(slot.u_id);\n\n      if (Array.isArray(slot) && slot.length > 0) slot = slot[0];\n\n      slot.now = new Date().toISOString().slice(0, 19) + '.000Z';\n\n      const nowTime = moment(slot.now).format('HH:mm');\n      const fromTime = moment(slot.ts_from).format('HH:mm')\n      const toTime = moment(slot.ts_to).format('HH:mm')\n      const leftThresholdTime = moment(slot.leftThreshold).format('HH:mm')\n      const rightThresholdTime = moment(slot.rightThreshold).format('HH:mm')\n\n      const shouldStartSpecific = !!slot.ts_from\n        && moment(leftThresholdTime, 'HH:mm').isSameOrAfter(moment(nowTime, 'HH:mm'))\n        && moment(nowTime, 'HH:mm').isAfter(moment(fromTime, 'HH:mm'));\n\n      if (shouldStartSpecific) {\n        const day = numberToDaysOfWeek.get(parseInt(slot.dayOfWeek));\n        const from = modifyTimeAccordingTimezone(slot.ts_from, slot.ts_timezone).slice(11, 16);\n        const to = modifyTimeAccordingTimezone(slot.ts_to, slot.ts_timezone).slice(11, 16);\n\n        this.messageService.sendMessageToDevice(slot.u_device_id, {\n          title: 'Biostasis automated system is disabled',\n          message: `The system is paused on ${day} from ${from} to ${to}`,\n          type: MESSAGE_TYPE.TIME_SLOT_NOTIFICATION,\n        });\n\n        continue;\n      }\n\n      const shouldProceedSpecific = !!slot.ts_from && moment(nowTime, 'HH:mm').isSameOrAfter(moment(rightThresholdTime, 'HH:mm')) && moment(toTime, 'HH:mm').isAfter(moment(nowTime, 'HH:mm'));\n      const shouldProceedPause = !slot.ts_from && moment(slot.now).isSameOrAfter(slot.rightThreshold) && moment(slot.ts_to).isAfter(slot.now);\n\n      if (!shouldProceedSpecific && !shouldProceedPause) {\n        continue;\n      }\n\n      this.messageService.sendMessageToDevice(slot.u_device_id, {\n        title: 'Biostasis automated system will resume',\n        message: 'The system will resume according to your normal settings',\n        type: MESSAGE_TYPE.TIME_SLOT_NOTIFICATION,\n      });\n    }\n  }\n\n  @Cron(\"0 */5 * * * *\")\n  async checkRegularPositiveInfo() {\n    await this.sendRegularPushNotification();\n    await this.sendSmsDueToLackOfPositiveInfo(true);\n    await this.sendAlertDueToLackOfPositiveInfo(true);\n    await this.triggerEmergencyMessage(true);\n  }\n\n  async sendRegularPushNotification() {\n    const profiles =\n      await this.profileRepository.findWhereRegularNotificationIsNeeded();\n\n    const operations = [], userIds = [];\n\n    for (const profile of profiles) {\n      if (!this.shouldStartEscalation(profile?.timezone)) {\n        continue;\n      }\n\n      const activeSlot = await this.triggerTimeSlotService.getActiveTimeSlot(profile.userId);\n\n      if (activeSlot) {\n        await this.positiveInfoRepository.postponeBySlotTime(profile.userId);\n        continue;\n      }\n\n      this.logger.log(`[TIME BASED] Escalation started for ${profile.userId} at ${new Date().toISOString()}. Step: push notification.`);\n\n      operations.push(\n        this.messageService.sendMessageToDevice(profile.deviceId, {\n          title: this.config.get(\"firebase.notification.title\"),\n          message: this.config.get(\"firebase.notification.message.regular\"),\n          type: MESSAGE_TYPE.EMERGENCY_TIME_BASED_CHECK,\n        })\n      );\n\n      userIds.push(profile.userId);\n    }\n\n    if (operations.length > 0) {\n      Promise.all(operations);\n      await Promise.all([\n        await this.positiveInfoRepository.setPushNotificationTime(\n          userIds,\n          this.config.get(\n            \"queue.sendAfterTime.smsIfNoPositiveInfoAfterPushNotification\"\n          )\n        ),\n        await this.profileRepository.setRegularNotificationTime(userIds),\n      ]);\n    }\n  }\n\n  @Cron(\"0 */5 * * * *\")\n  async checkNotRegularPositiveInfo() {\n    await this.sendPushNotificationDueToLackOfPositiveInfo();\n    await this.sendSmsDueToLackOfPositiveInfo(false);\n    await this.sendAlertDueToLackOfPositiveInfo(false);\n    await this.triggerEmergencyMessage(false);\n  }\n\n  async sendPushNotificationDueToLackOfPositiveInfo() {\n    const expiredInformation =\n      await this.positiveInfoRepository.findExpiredInformation();\n\n    const operations = [], userIds = [];\n\n    for (const information of expiredInformation) {\n      if (!this.shouldStartEscalation(information.user?.profile?.timezone)) {\n        continue;\n      }\n\n      const activeSlot = await this.triggerTimeSlotService.getActiveTimeSlot(information.user.id);\n\n      if (activeSlot) {\n        await this.positiveInfoRepository.postponeBySlotTime(information.user.id);\n        continue;\n      }\n\n      this.logger.log(`[PULSE BASED] Escalation started for ${information.userId} at ${new Date().toISOString()}. Step: push notification (setPushNotificationTime).`);\n\n      operations.push(\n        this.messageService.sendMessageToDevice(information.user.deviceId, {\n          title: this.config.get(\"firebase.notification.title\"),\n          message: this.config\n            .get(\"firebase.notification.message.pulseBased\")\n            .replace(\"{minutes}\", information.minutesToNext),\n          type: MESSAGE_TYPE.EMERGENCY_PULSE_BASED_CHECK,\n        })\n      );\n\n      userIds.push(information.user.id);\n    }\n\n    if (operations.length > 0) {\n      await Promise.all(operations);\n      await this.positiveInfoRepository.setPushNotificationTime(\n        userIds,\n        this.config.get(\n          \"queue.sendAfterTime.smsIfNoPositiveInfoAfterPushNotification\"\n        )\n      );\n    }\n  }\n\n  async sendSmsDueToLackOfPositiveInfo(regularPushNotification: boolean) {\n    const pushNotificationWithoutReaction =\n      await this.positiveInfoRepository.findPushNotificationWithoutReaction(\n        regularPushNotification\n      );\n\n    for (const item of pushNotificationWithoutReaction) {\n      this.logger.log(`Escalation continues for ${item.userId} at ${new Date().toISOString()}. Step: sms.`);\n\n      this.notificationService.sendSms({\n        data: this.notificationService.prepareSmsData(\n          `${item.user.profile.prefix}${item.user.profile.phone}`,\n          this.config\n            .get(\"firebase.sms\")\n            .replace(\"{domain}\", this.config.get(\"backend.url\"))\n        ),\n        isPositiveInfoQuestion: true,\n        userId: item.user.id,\n        isFromQueue: true,\n      });\n    }\n  }\n\n  async sendAlertDueToLackOfPositiveInfo(regularPushNotification: boolean) {\n    const smsWithoutReaction =\n      await this.positiveInfoRepository.findSmsWithoutReaction(\n        regularPushNotification,\n        \"alert_time\"\n      );\n    const operations = [];\n    const userIds = [];\n\n    for (const item of smsWithoutReaction) {\n      if (await this.triggerTimeSlotService.isActiveTimeSlot(item.userId)) {\n        continue;\n      }\n\n      this.logger.log(`Escalation continues for ${item.userId} at ${new Date().toISOString()}. Step: alert  (clearAlertTime).`);\n\n      operations.push(\n        this.messageService.sendMessageToDevice(item.user.deviceId, {\n          title: this.config.get(\"firebase.notification.title\"),\n          message: this.config.get(\"firebase.notification.message.alert\"),\n          type: MESSAGE_TYPE.EMERGENCY_ALERT,\n          sound: this.config.get(\"firebase.notification.sound\"),\n        })\n      );\n\n      userIds.push(item.userId);\n    }\n\n    if (operations.length > 0) {\n      Promise.all(operations);\n\n      await this.positiveInfoRepository.clearAlertTime(userIds);\n    }\n  }\n\n  async triggerEmergencyMessage(regularPushNotification: boolean) {\n    const smsWithoutReaction =\n      await this.positiveInfoRepository.findSmsWithoutReaction(\n        regularPushNotification,\n        \"sms_time\"\n      );\n\n    const operations = [], userIds = [];\n\n    for (const item of smsWithoutReaction) {\n      this.logger.log(`Escalation ends for ${item.userId} at ${new Date().toISOString()}. Step: emergency message (clearPositiveInfo and disable automatedEmergency).`);\n\n      userIds.push(item.userId);\n\n      for (const contact of item.user.contacts) {\n        if (!contact.active) {\n          continue;\n        }\n\n        operations.push(\n          this.notificationService.sendEmergencyMessage(\n            {\n              name: getNameOrEmail(\n                contact.name,\n                contact.surname,\n                contact.email\n              ),\n              email: contact.email,\n              phone: contact.prefix\n                ? `${contact.prefix}${contact.phone}`\n                : null,\n            },\n            item.user,\n            {\n              delayed: false,\n              isFromQueue: true,\n              locationUrl: item?.user?.profile?.location,\n            }\n          )\n        );\n      }\n\n      if (userIds.length > 0) {\n        await Promise.all([\n          this.positiveInfoRepository.clearEverythingForUsers(userIds),\n          this.profileRepository.disableAutomatedEmergencyForUsers(userIds),\n          ...operations\n        ]);\n      }\n    }\n  }\n\n  private shouldStartEscalation(timezone?: string): boolean {\n    const currentDateTime = modifyTimeAccordingTimezone(new Date().toISOString(), timezone);\n\n    const hour = parseInt(currentDateTime.slice(11, 13));\n\n    return hour >= parseInt(this.config.get(\"night.end\")) &&\n      hour \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SendEmergencyMessageController.html":{"url":"controllers/SendEmergencyMessageController.html","title":"controller - SendEmergencyMessageController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SendEmergencyMessageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/message/controller/send-emergency-message.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                message\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendEmergencyMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmergencyMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmergencyMessage(user: UserEntity, data: SendEmergencyMessageDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, type: SuccessRO})@ApiResponse({status: 400, type: ErrorMessageRO})@ApiOperation({summary: 'Send emergency message'})@Roles(['undefined'])@Post('send/emergency')\n                \n            \n\n            \n                \n                    Defined in src/message/controller/send-emergency-message.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                SendEmergencyMessageDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  UseGuards,\n  Logger,\n} from \"@nestjs/common\";\nimport {\n  ApiTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n} from \"@nestjs/swagger\";\nimport { RolesGuard } from \"../../authentication/roles.guard\";\nimport { Roles } from \"../../authentication/decorator/roles.decorator\";\nimport { Reflector } from \"@nestjs/core\";\nimport { plainToClass } from \"class-transformer\";\nimport { NotificationService } from \"../../notification/service/notification.service\";\nimport { User } from \"../../authentication/decorator/user.decorator\";\nimport { UserEntity, ROLES } from \"../../user/entity/user.entity\";\nimport { SuccessRO } from \"../../common/response/success.ro\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport { ErrorMessageRO } from \"../../common/response/error.ro\";\nimport { UserService } from \"../../user/service/user.service\";\nimport { ContactService } from \"../../contact/service/contact.service\";\nimport { ValidationPipe } from \"../../common/pipe/validation.pipe\";\nimport { SendEmergencyMessageDTO } from \"../request/dto/send-emergency-message.dto\";\nimport { sendEmergencyMessageSchema } from \"../request/schema/send-emergency-message.schema\";\nimport { getNameOrEmail } from \"../../common/helper/get-name-or-email\";\n\n@ApiBearerAuth()\n@UseGuards(new RolesGuard(new Reflector()))\n@UseGuards(AuthGuard(\"cognito\"))\n@ApiTags(\"message\")\n@Controller(\"message\")\nexport class SendEmergencyMessageController {\n  constructor(\n    private readonly notificationService: NotificationService,\n    private readonly userService: UserService,\n    private readonly contactService: ContactService,\n  ) {}\n\n  @ApiResponse({ status: 201, type: SuccessRO })\n  @ApiResponse({ status: 400, type: ErrorMessageRO })\n  @ApiOperation({ summary: \"Send emergency message\" })\n  @Roles([ROLES.USER])\n  @Post(\"send/emergency\")\n  async sendEmergencyMessage(\n    @User() user: UserEntity,\n    @Body(new ValidationPipe(sendEmergencyMessageSchema))\n    data: SendEmergencyMessageDTO\n  ) {\n    user = await this.userService.findByIdOrFail(user.id);\n\n    const contacts = await this.contactService.findActiveContactsByUserId(\n      user.id\n    );\n\n    if (contacts.length === 0) {\n      return plainToClass(SuccessRO, { success: false });\n    }\n\n    const operations = [];\n\n    for (const contact of contacts) {\n      operations.push(\n        this.notificationService.sendEmergencyMessage(\n          {\n            name: getNameOrEmail(contact.name, contact.surname, contact.email),\n            email: contact.email,\n            phone: contact.prefix ? `${contact.prefix}${contact.phone}` : null,\n          },\n          user,\n          { ...data, locationUrl: user.profile.location }\n        )\n      );\n    }\n\n    await Promise.all([\n      this.userService.clearPositiveInfo(user.id),\n      ...operations\n    ]);\n\n    Logger.log(`Processed manually triggered emergency message at ${new Date().toISOString()} by ${user.id}. Number of informed contacts: ${operations.length}`)\n\n    return plainToClass(SuccessRO, { success: true });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendEmergencyMessageDTO.html":{"url":"classes/SendEmergencyMessageDTO.html","title":"class - SendEmergencyMessageDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendEmergencyMessageDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/message/request/dto/send-emergency-message.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                delayed\n                            \n                            \n                                    Optional\n                                messageType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        delayed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/message/request/dto/send-emergency-message.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        messageType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'enum', enum: MESSAGE_TYPE, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/message/request/dto/send-emergency-message.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { MESSAGE_TYPE } from \"../../enum/message-type.enum\";\n\nexport class SendEmergencyMessageDTO {\n  @ApiProperty({ type: Boolean, required: false })\n  delayed?: boolean;\n\n  @ApiProperty({\n    type: \"enum\",\n    enum: MESSAGE_TYPE,\n    example: MESSAGE_TYPE.HEART_RATE_INVALID,\n  })\n  messageType?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SendSMSController.html":{"url":"controllers/SendSMSController.html","title":"controller - SendSMSController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SendSMSController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/message/controller/send-sms.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                message\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendSms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendSms\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendSms(user: UserEntity, data: SendSmsDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, type: SuccessRO})@ApiResponse({status: 400, type: ErrorMessageRO})@ApiOperation({summary: 'Send sms message'})@Roles(['undefined'])@Post('send/sms')\n                \n            \n\n            \n                \n                    Defined in src/message/controller/send-sms.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                SendSmsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  UseGuards,\n  BadRequestException,\n  Inject,\n} from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n} from '@nestjs/swagger';\nimport { RolesGuard } from '../../authentication/roles.guard';\nimport { Roles } from '../../authentication/decorator/roles.decorator';\nimport { Reflector } from '@nestjs/core';\nimport { plainToClass } from 'class-transformer';\nimport { NotificationService } from '../../notification/service/notification.service';\nimport { User } from '../../authentication/decorator/user.decorator';\nimport { UserEntity, ROLES } from '../../user/entity/user.entity';\nimport { SuccessRO } from '../../common/response/success.ro';\nimport { SendSmsDTO } from '../request/dto/send-sms.dto';\nimport { sendSmsSchema } from '../request/schema/send-sms.schema';\nimport { ValidationPipe } from '../../common/pipe/validation.pipe';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ErrorMessageRO } from '../../common/response/error.ro';\nimport { ProfileService } from '../../user/service/profile.service';\nimport { PHONE_NUMBER_IS_NEEDED } from '../../common/error/keys';\nimport { DICTIONARY } from '../../common/constant/dictionary.constant';\nimport { ConfigService } from '@nestjs/config';\n\n@ApiBearerAuth()\n@UseGuards(new RolesGuard(new Reflector()))\n@UseGuards(AuthGuard('cognito'))\n@ApiTags('message')\n@Controller('message')\nexport class SendSMSController {\n  constructor(\n    @Inject(DICTIONARY.CONFIG) private readonly config: ConfigService,\n    private readonly notificationService: NotificationService,\n    private readonly profileService: ProfileService\n  ) {}\n\n  @ApiResponse({ status: 201, type: SuccessRO })\n  @ApiResponse({ status: 400, type: ErrorMessageRO })\n  @ApiOperation({ summary: 'Send sms message' })\n  @Roles([ROLES.USER])\n  @Post('send/sms')\n  async sendSms(\n    @User() user: UserEntity,\n    @Body(new ValidationPipe(sendSmsSchema))\n    data: SendSmsDTO\n  ) {\n    const profile = await this.profileService.findByUserId(user.id);\n\n    if (!profile?.prefix) {\n      throw new BadRequestException(PHONE_NUMBER_IS_NEEDED);\n    }\n\n    const smsData = this.notificationService.prepareSmsData(\n      `${profile.prefix}${profile.phone}`,\n      this.config.get(`sms.${data.messageType}`)\n    );\n    const result = await this.notificationService.sendSms({ data: smsData });\n\n    return plainToClass(SuccessRO, {\n      success: result ? !!!result.errorCode : false,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendSmsDTO.html":{"url":"classes/SendSmsDTO.html","title":"class - SendSmsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendSmsDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/message/request/dto/send-sms.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                messageType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        messageType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'enum', enum: MESSAGE_TYPE, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/message/request/dto/send-sms.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { MESSAGE_TYPE } from '../../enum/message-type.enum';\n\nexport class SendSmsDTO {\n  @ApiProperty({\n    type: 'enum',\n    enum: MESSAGE_TYPE,\n    example: MESSAGE_TYPE.HEART_RATE_INVALID,\n  })\n  messageType: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SendTestMessageController.html":{"url":"controllers/SendTestMessageController.html","title":"controller - SendTestMessageController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SendTestMessageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/send-test-message.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendTestEmergencyMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendTestEmergencyMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendTestEmergencyMessage(user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, type: SuccessRO})@ApiResponse({status: 400, type: ErrorMessageRO})@ApiOperation({summary: 'Send test emergency message'})@Roles(['undefined'])@Post('message/test')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/send-test-message.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Controller,\n  Post,\n  Body,\n  UseGuards,\n} from \"@nestjs/common\";\nimport {\n  ApiTags,\n  ApiResponse,\n  ApiOperation,\n  ApiBearerAuth,\n} from \"@nestjs/swagger\";\nimport { Reflector } from \"@nestjs/core\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport { plainToClass } from \"class-transformer\";\nimport { RolesGuard } from \"../../authentication/roles.guard\";\nimport { Roles } from \"../../authentication/decorator/roles.decorator\";\nimport { UserService } from \"../service/user.service\";\nimport { User } from \"../../authentication/decorator/user.decorator\";\nimport { UserEntity, ROLES } from \"../../user/entity/user.entity\";\nimport { ErrorMessageRO } from \"../../common/response/error.ro\";\nimport { NotificationService } from \"../../notification/service/notification.service\";\nimport { SuccessRO } from \"../../common/response/success.ro\";\nimport { getNameOrEmail } from \"../../common/helper/get-name-or-email\";\nimport { LOCATION_DATA_IS_NEEDED } from \"../../common/error/keys\";\n\n@ApiBearerAuth()\n@UseGuards(new RolesGuard(new Reflector()))\n@UseGuards(AuthGuard(\"cognito\"))\n@ApiTags(\"user\")\n@Controller(\"user\")\nexport class SendTestMessageController {\n  constructor(\n    private readonly userService: UserService,\n    private readonly notificationService: NotificationService\n  ) {}\n\n  @ApiResponse({ status: 201, type: SuccessRO })\n  @ApiResponse({ status: 400, type: ErrorMessageRO })\n  @ApiOperation({ summary: \"Send test emergency message\" })\n  @Roles([ROLES.USER])\n  @Post(\"message/test\")\n  async sendTestEmergencyMessage(@User() user: UserEntity) {\n    user = await this.userService.findByIdOrFail(user.id);\n\n    await this.notificationService.sendEmergencyMessage(\n      {\n        name: getNameOrEmail(\n          user.profile?.name,\n          user.profile?.surname,\n          user.email\n        ),\n        email: user.email,\n        phone: user.profile?.prefix\n          ? `${user.profile?.prefix}${user.profile?.phone}`\n          : null,\n      },\n      user,\n      { locationUrl: user?.profile?.location }\n    );\n\n    return plainToClass(SuccessRO, { success: true });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SuccessRO.html":{"url":"classes/SuccessRO.html","title":"class - SuccessRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SuccessRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/response/success.ro.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        success\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/response/success.ro.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\n\n@Exclude()\nexport class SuccessRO {\n  @Expose()\n  @ApiProperty({ type: Boolean })\n  readonly success: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TimeSlotDayEntity.html":{"url":"entities/TimeSlotDayEntity.html","title":"entity - TimeSlotDayEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TimeSlotDayEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/trigger-time-slot/entity/time-slot-day.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                day\n                            \n                            \n                                id\n                            \n                            \n                                timeSlot\n                            \n                            \n                                timeSlotId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        day\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'day_of_week', type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/entity/time-slot-day.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/entity/time-slot-day.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeSlot\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimeSlotEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @JoinColumn({name: 'time_slot_id'})@ManyToOne(undefined, timeSlot => timeSlot.days)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/entity/time-slot-day.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeSlotId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'time_slot_id', type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/entity/time-slot-day.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  PrimaryGeneratedColumn,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { TimeSlotEntity } from './time-slot.entity';\n\n@Entity('time_slot_day')\nexport class TimeSlotDayEntity {\n  @PrimaryGeneratedColumn({ type: 'int' })\n  id: number;\n\n  @Column({ name: 'time_slot_id', type: 'int' })\n  timeSlotId: number;\n\n  @Column({ name: 'day_of_week', type: 'int' })\n  day: number;\n\n  @JoinColumn({ name: 'time_slot_id' })\n  @ManyToOne(() => TimeSlotEntity, (timeSlot) => timeSlot.days)\n  timeSlot: TimeSlotEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeSlotDayRepository.html":{"url":"classes/TimeSlotDayRepository.html","title":"class - TimeSlotDayRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeSlotDayRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/trigger-time-slot/repository/time-slot-day.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { TimeSlotDayEntity } from '../entity/time-slot-day.entity';\n\n@EntityRepository(TimeSlotDayEntity)\nexport class TimeSlotDayRepository extends Repository {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TimeSlotEntity.html":{"url":"entities/TimeSlotEntity.html","title":"entity - TimeSlotEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TimeSlotEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/trigger-time-slot/entity/time-slot.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                createdAt\n                            \n                            \n                                days\n                            \n                            \n                                from\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                timezone\n                            \n                            \n                                to\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/entity/time-slot.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/entity/time-slot.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        days\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimeSlotDayEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, daysOfWeek => daysOfWeek.timeSlot, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/entity/time-slot.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/entity/time-slot.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/entity/time-slot.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        timezone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/entity/time-slot.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/entity/time-slot.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @JoinColumn({name: 'user_id'})@ManyToOne(undefined, user => user.contacts)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/entity/time-slot.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'user_id', type: 'varchar', length: 36})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/entity/time-slot.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  PrimaryGeneratedColumn,\n  CreateDateColumn,\n  JoinColumn,\n  ManyToOne,\n  OneToMany,\n} from 'typeorm';\nimport { UserEntity } from '../../user/entity/user.entity';\nimport { TimeSlotDayEntity } from './time-slot-day.entity';\n\n@Entity('time_slot')\nexport class TimeSlotEntity {\n  @PrimaryGeneratedColumn({ type: 'int' })\n  id: number;\n\n  @Column({ name: 'user_id', type: 'varchar', length: 36 })\n  userId: string;\n\n  @Column({ type: 'boolean' })\n  active: boolean;\n\n  @Column({ type: 'datetime' })\n  from: Date;\n\n  @Column({ type: 'datetime' })\n  to: Date;\n\n  @Column({ type: 'varchar', nullable: true })\n  timezone?: string;\n\n  @CreateDateColumn({ name: 'created_at', type: 'datetime' })\n  createdAt: Date;\n\n  @JoinColumn({ name: 'user_id' })\n  @ManyToOne(() => UserEntity, (user: UserEntity) => user.contacts)\n  user: UserEntity;\n\n  @OneToMany(() => TimeSlotDayEntity, (daysOfWeek) => daysOfWeek.timeSlot, {\n    cascade: true,\n  })\n  days: TimeSlotDayEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeSlotIdRO.html":{"url":"classes/TimeSlotIdRO.html","title":"class - TimeSlotIdRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeSlotIdRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/trigger-time-slot/response/time-slot-id.ro.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/response/time-slot-id.ro.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Exclude()\nexport class TimeSlotIdRO {\n  @Expose()\n  @ApiProperty({ type: Number })\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeSlotRO.html":{"url":"classes/TimeSlotRO.html","title":"class - TimeSlotRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeSlotRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/trigger-time-slot/response/time-slot.ro.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                createdAt\n                            \n                            \n                                days\n                            \n                            \n                                from\n                            \n                            \n                                id\n                            \n                            \n                                timezone\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/response/time-slot.ro.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/response/time-slot.ro.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        days\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String, isArray: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/response/time-slot.ro.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/response/time-slot.ro.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/response/time-slot.ro.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timezone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/response/time-slot.ro.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/response/time-slot.ro.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Exclude()\nexport class TimeSlotRO {\n  @Expose()\n  @ApiProperty({ type: Number })\n  id: number;\n\n  @Expose()\n  @ApiProperty({ type: Boolean })\n  active: boolean;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  from: string;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  to: string;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  timezone: string;\n\n  @Expose()\n  @ApiProperty({ type: String, isArray: true })\n  days: string[];\n\n  @Expose()\n  @ApiProperty({ type: String })\n  createdAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeSlotRepository.html":{"url":"classes/TimeSlotRepository.html","title":"class - TimeSlotRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeSlotRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/trigger-time-slot/repository/time-slot.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findActiveTimeSlots\n                            \n                            \n                                findByUserId\n                            \n                            \n                                findOneByParams\n                            \n                            \n                                findSlotsToInform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TimeSlotRepository.name)\n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/repository/time-slot.repository.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findActiveTimeSlots\n                        \n                    \n                \n            \n            \n                \nfindActiveTimeSlots(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/trigger-time-slot/repository/time-slot.repository.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByUserId\n                        \n                    \n                \n            \n            \n                \nfindByUserId(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/trigger-time-slot/repository/time-slot.repository.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByParams\n                        \n                    \n                \n            \n            \n                \nfindOneByParams(params: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/trigger-time-slot/repository/time-slot.repository.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findSlotsToInform\n                        \n                    \n                \n            \n            \n                \nfindSlotsToInform()\n                \n            \n\n\n            \n                \n                    Defined in src/trigger-time-slot/repository/time-slot.repository.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { EntityRepository, Repository, Brackets } from 'typeorm';\nimport { TimeSlotEntity } from '../entity/time-slot.entity';\n\n@EntityRepository(TimeSlotEntity)\nexport class TimeSlotRepository extends Repository {\n  protected readonly logger = new Logger(TimeSlotRepository.name);\n\n  findOneByParams(params: Record): Promise {\n    return new Promise((resolve) => {\n      this.findOne(params)\n        .then((data) => resolve(data))\n        .catch((error) => this.logger.error(error));\n    });\n  }\n\n  findByUserId(userId: string): Promise {\n    return new Promise((resolve) => {\n      this.find({ where: { userId }, relations: ['days'] })\n        .then((data) => resolve(data))\n        .catch((error) => this.logger.error(error));\n    });\n  }\n\n  findSlotsToInform() {\n    const now = new Date().toISOString().slice(0,19).replace('T', ' ');\n\n    return this.createQueryBuilder('ts')\n      .leftJoinAndSelect('ts.user', 'u')\n      .addSelect('date_sub(ts.to, interval 5 MINUTE)', 'rightThreshold')\n      .addSelect('date_add(ts.from, interval 5 MINUTE)', 'leftThreshold')\n      .addSelect('DAYOFWEEK(NOW())', 'dayOfWeek')\n      .addSelect('NOW()', 'now')\n      .where('u.device_id IS NOT NULL')\n      .andWhere('ts.active = true')\n      .andWhere(\n        new Brackets((qb) => {\n          qb.where('(ts.from IS NULL and :now1  TIME(ts.from),\n                    TIME(:now2) BETWEEN TIME(ts.from) AND TIME(ts.to),\n                    TIME(:now2)  TIME(ts.from)\n                  )`,\n\n                  { now2: now }\n          );\n        })\n      )\n      .innerJoin('ts.days', 'd', 'd.day_of_week = DAYOFWEEK(NOW())')\n      .execute();\n  }\n\n  findActiveTimeSlots(userId: string): Promise {\n    const now = new Date().toISOString().slice(0,19).replace('T', ' ');\n\n    return this.createQueryBuilder('ts')\n      .where('ts.user_id = :userId', { userId })\n      .andWhere('ts.active = true')\n      .andWhere(\n        new Brackets((qb) => {\n          qb.where('(ts.from IS NULL and :now1  TIME(ts.from),\n                    TIME(:now2) BETWEEN TIME(ts.from) AND TIME(ts.to),\n                    TIME(:now2)  TIME(ts.from)\n                  )`,\n\n                  { now2: now }\n          );\n        })\n      )\n      .innerJoin('ts.days', 'd', 'd.day_of_week = DAYOFWEEK(NOW())')\n      .getMany();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenRO.html":{"url":"classes/TokenRO.html","title":"class - TokenRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/response/token.ro.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'AccessToken'})@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/response/token.ro.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Exclude()\nexport class TokenRO {\n  @Expose({ name: 'AccessToken' })\n  @ApiProperty({ type: String })\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TriggerTimeSlotModule.html":{"url":"modules/TriggerTimeSlotModule.html","title":"module - TriggerTimeSlotModule","body":"\n                   \n\n\n\n\n    Modules\n    TriggerTimeSlotModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TriggerTimeSlotModule\n\n\n\ncluster_TriggerTimeSlotModule_exports\n\n\n\ncluster_TriggerTimeSlotModule_providers\n\n\n\n\nTriggerTimeSlotService \n\nTriggerTimeSlotService \n\n\n\nTriggerTimeSlotModule\n\nTriggerTimeSlotModule\n\nTriggerTimeSlotService  -->\n\nTriggerTimeSlotModule->TriggerTimeSlotService \n\n\n\n\n\nTriggerTimeSlotService\n\nTriggerTimeSlotService\n\nTriggerTimeSlotModule -->\n\nTriggerTimeSlotService->TriggerTimeSlotModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/trigger-time-slot/trigger-time-slot.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TriggerTimeSlotService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AddTimeSlotController\n                        \n                        \n                            GetListOfTimeSlotsController\n                        \n                        \n                            UpdateTimeSlotController\n                        \n                        \n                            DeleteTimeSlotController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TriggerTimeSlotService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { TriggerTimeSlotService } from './service/trigger-time-slot.service';\nimport { TimeSlotRepositoryProvider } from './provider/time-slot-repository.provider';\nimport { TimeSlotDayRepositoryProvider } from './provider/time-slot-day-repository.provider';\nimport { AddTimeSlotController } from './controller/add-time-slot.controller';\nimport { DeleteTimeSlotController } from './controller/delete-time-slot.controller';\nimport { GetListOfTimeSlotsController } from './controller/get-list-of-time-slots.controller';\nimport { UpdateTimeSlotController } from './controller/update-time-slot.controller';\nimport { ConnectionProvider } from '../common/provider/connection.provider';\nimport { MessageModule } from '../message/message.module';\n\n@Module({\n  imports: [    \n    forwardRef(() => MessageModule),\n  ],\n  controllers: [\n    AddTimeSlotController,\n    GetListOfTimeSlotsController,\n    UpdateTimeSlotController,\n    DeleteTimeSlotController,\n  ],\n  providers: [\n    TriggerTimeSlotService,\n    TimeSlotRepositoryProvider,\n    TimeSlotDayRepositoryProvider,\n    ConnectionProvider,\n  ],\n  exports: [TriggerTimeSlotService, TimeSlotRepositoryProvider],\n})\nexport class TriggerTimeSlotModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TriggerTimeSlotService.html":{"url":"injectables/TriggerTimeSlotService.html","title":"injectable - TriggerTimeSlotService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TriggerTimeSlotService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/trigger-time-slot/service/trigger-time-slot.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteTimeSlot\n                            \n                            \n                                    Async\n                                findByIdAndUserIdOrFail\n                            \n                            \n                                    Async\n                                findByUserIdAndPeriodStart\n                            \n                            \n                                    Async\n                                findByUserIdOrFail\n                            \n                            \n                                    Async\n                                getActiveTimeSlot\n                            \n                            \n                                    Async\n                                getSlotsToInform\n                            \n                            \n                                    Private\n                                    Async\n                                informAboutPause\n                            \n                            \n                                    Async\n                                isActiveTimeSlot\n                            \n                            \n                                    Async\n                                saveTimeSlot\n                            \n                            \n                                    Async\n                                updateTimeSlot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(timeSlotRepository: TimeSlotRepository, connection: Connection, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/trigger-time-slot/service/trigger-time-slot.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeSlotRepository\n                                                  \n                                                        \n                                                                        TimeSlotRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteTimeSlot\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTimeSlot(timeSlotId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/trigger-time-slot/service/trigger-time-slot.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeSlotId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByIdAndUserIdOrFail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAndUserIdOrFail(id: number, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/trigger-time-slot/service/trigger-time-slot.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUserIdAndPeriodStart\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUserIdAndPeriodStart(userId: string, from: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/trigger-time-slot/service/trigger-time-slot.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    from\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUserIdOrFail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUserIdOrFail(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/trigger-time-slot/service/trigger-time-slot.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getActiveTimeSlot\n                        \n                    \n                \n            \n            \n                \n                    \n                    getActiveTimeSlot(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/trigger-time-slot/service/trigger-time-slot.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSlotsToInform\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSlotsToInform()\n                \n            \n\n\n            \n                \n                    Defined in src/trigger-time-slot/service/trigger-time-slot.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        informAboutPause\n                        \n                    \n                \n            \n            \n                \n                    \n                    informAboutPause(deviceId: string, to: string, timezone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/trigger-time-slot/service/trigger-time-slot.service.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timezone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isActiveTimeSlot\n                        \n                    \n                \n            \n            \n                \n                    \n                    isActiveTimeSlot(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/trigger-time-slot/service/trigger-time-slot.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveTimeSlot\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveTimeSlot(userId: string, data: AddTimeSlotDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/trigger-time-slot/service/trigger-time-slot.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AddTimeSlotDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTimeSlot\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTimeSlot(timeSlot: TimeSlotEntity, userId: string, data: AddTimeSlotDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/trigger-time-slot/service/trigger-time-slot.service.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeSlot\n                                    \n                                                TimeSlotEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AddTimeSlotDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TriggerTimeSlotService.name)\n                    \n                \n                    \n                        \n                                Defined in src/trigger-time-slot/service/trigger-time-slot.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  BadRequestException,\n  Logger,\n} from '@nestjs/common';\nimport { TimeSlotRepository } from '../repository/time-slot.repository';\nimport { TimeSlotEntity } from '../entity/time-slot.entity';\nimport { TimeSlotDayEntity } from '../entity/time-slot-day.entity';\nimport { AddTimeSlotDTO } from '../request/dto/add-time-slot.dto';\nimport {\n  SAVE_TIME_SLOT_FAILED,\n  DELETE_TIME_SLOT_FAILED,\n  RETRIEVING_TIME_SLOTS_FAILED,\n  TIME_SLOT_NOT_FOUND,\n  UPDATE_TIME_SLOT_FAILED,\n} from '../../common/error/keys';\nimport { CustomError } from '../../common/error/custom-error';\nimport { omit } from '../../common/helper/omit';\nimport { DAYS_OF_WEEKS } from '../enum/days-of-week.enum';\nimport { getEnumKeyByValue } from '../../common/helper/get-enum-key-by-value';\nimport { In, Connection, DeleteResult } from 'typeorm';\nimport { DICTIONARY } from '../../common/constant/dictionary.constant';\nimport { MessageService } from '../../message/service/mesage.service';\nimport { MESSAGE_TYPE } from '../../message/constant/message-type.constant';\nimport * as moment from \"moment\";\nimport { date } from 'joi';\nimport { modifyTimeAccordingTimezone } from '../../common/helper/modify-time-according-timezone';\n\n@Injectable()\nexport class TriggerTimeSlotService {\n  protected readonly logger = new Logger(TriggerTimeSlotService.name);\n\n  constructor(\n    @Inject(TimeSlotRepository)\n    private readonly timeSlotRepository: TimeSlotRepository,\n    @Inject(DICTIONARY.CONNECTION)\n    private readonly connection: Connection,\n    private readonly messageService: MessageService,\n  ) { }\n\n  async findByUserIdAndPeriodStart(\n    userId: string,\n    from: Date\n  ): Promise {\n    return this.timeSlotRepository.findOneByParams({\n      where: { from, userId },\n      relations: ['days'],\n    });\n  }\n\n  async findByIdAndUserIdOrFail(\n    id: number,\n    userId: string\n  ): Promise {\n    return this.timeSlotRepository\n      .findOneByParams({ where: { id, userId }, relations: ['days'] })\n      .then((data) => {\n        if (!data) {\n          throw new BadRequestException(TIME_SLOT_NOT_FOUND);\n        }\n\n        return data;\n      });\n  }\n\n  async deleteTimeSlot(timeSlotId: number): Promise {\n    return this.timeSlotRepository.delete(timeSlotId).catch((error) => {\n      this.logger.error(error);\n      throw new BadRequestException(DELETE_TIME_SLOT_FAILED);\n    });\n  }\n\n  async getActiveTimeSlot(userId: string): Promise {\n    const slots = await this.timeSlotRepository.findActiveTimeSlots(userId);\n\n    return slots.length > 0 ? slots[0] : null;\n  }\n\n  async getSlotsToInform(): Promise {\n    return this.timeSlotRepository.findSlotsToInform();\n  }\n\n  async findByUserIdOrFail(userId: string): Promise {\n    return this.timeSlotRepository.findByUserId(userId).then((data) => {\n      if (!data) {\n        throw new BadRequestException(RETRIEVING_TIME_SLOTS_FAILED);\n      }\n\n      return data;\n    });\n  }\n\n  async isActiveTimeSlot(userId: string): Promise {\n    return this.timeSlotRepository.findActiveTimeSlots(userId).then((data) => {\n      if (data.length > 0) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async saveTimeSlot(\n    userId: string,\n    data: AddTimeSlotDTO\n  ): Promise {\n    Logger.log(`Saving slot: `, data, userId);\n\n    const addedSlot = await this.timeSlotRepository\n      .save({\n        ...omit(data, ['days']),\n        userId,\n        days: data.days.map((value) => ({\n          day: DAYS_OF_WEEKS[value.toUpperCase()],\n        })),\n      })\n      .catch((error) => {\n        this.logger.error(error);\n        throw new BadRequestException(SAVE_TIME_SLOT_FAILED);\n      });\n\n    if (!data.from) {\n      const { user, ...slot } = await this.timeSlotRepository.findOneByParams({\n        where: { id: addedSlot.id, userId },\n        relations: ['days', 'user'],\n      });\n\n      Logger.log(`Pause set: `, slot.to);\n\n      slot.active && (await this.informAboutPause(user.deviceId, slot.to as any, data.timezone));\n    }\n\n    return addedSlot;\n  }\n\n  async updateTimeSlot(\n    timeSlot: TimeSlotEntity,\n    userId: string,\n    data: AddTimeSlotDTO\n  ): Promise {\n    Logger.log(`Saving slot: `, data, userId);\n\n    const namesOfDays = timeSlot.days.map((item) =>\n      getEnumKeyByValue(DAYS_OF_WEEKS, item.day)\n    );\n\n    try {\n      await this.connection.manager.transaction(async (entityManager) => {\n        await entityManager.update(\n          TimeSlotEntity,\n          {\n            id: timeSlot.id,\n          },\n          { ...omit(data, ['days']) }\n        );\n\n        await entityManager.delete(TimeSlotDayEntity, {\n          timeSlotId: timeSlot.id,\n          day: In(\n            namesOfDays\n              .filter((value) => !data.days.includes(value))\n              .map((value) => DAYS_OF_WEEKS[value.toUpperCase()])\n          ),\n        });\n\n        await entityManager.save(\n          TimeSlotDayEntity,\n          data.days\n            .filter((value) => !namesOfDays.includes(value))\n            .map((day) => ({\n              timeSlotId: timeSlot.id,\n              day: DAYS_OF_WEEKS[day.toUpperCase()],\n            }))\n        );\n      });\n    } catch (error) {\n      this.logger.error(error);\n      throw new BadRequestException(UPDATE_TIME_SLOT_FAILED);\n    }\n\n    const { user, ...slot } = await this.timeSlotRepository.findOneByParams({\n      where: { id: timeSlot.id, userId },\n      relations: ['days', 'user'],\n    });\n\n    if (!data.from && slot.active) {\n      Logger.log(`Pause set: `, slot.to);\n\n      await this.informAboutPause(user.deviceId, slot.to as any, data.timezone);\n    }\n\n    return slot as any;\n  }\n\n  private async informAboutPause(deviceId: string, to: string, timezone: string) {\n    await this.messageService.sendMessageToDevice(deviceId, {\n      title: 'Biostasis automated system is disabled',\n      message: `The system will be paused until ${modifyTimeAccordingTimezone(to, timezone)}`,\n      type: MESSAGE_TYPE.TIME_SLOT_NOTIFICATION,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UnconfirmedEmailEntity.html":{"url":"entities/UnconfirmedEmailEntity.html","title":"entity - UnconfirmedEmailEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UnconfirmedEmailEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entity/unconfirmed_email.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 36})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/unconfirmed_email.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/unconfirmed_email.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'longtext'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/unconfirmed_email.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/unconfirmed_email.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @JoinColumn({name: 'user_id'})@ManyToOne(undefined, user => user.unconfirmedEmails)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/unconfirmed_email.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'user_id', type: 'varchar', length: 36})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/unconfirmed_email.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  PrimaryGeneratedColumn,\n  CreateDateColumn,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { UserEntity } from './user.entity';\n\n@Entity('unconfirmed_email')\nexport class UnconfirmedEmailEntity {\n  @PrimaryGeneratedColumn({ type: 'int' })\n  id: number;\n\n  @Column({ name: 'user_id', type: 'varchar', length: 36 })\n  userId: string;\n\n  @Column({ type: 'longtext' })\n  email: string;\n\n  @Column({ type: 'varchar', length: 36 })\n  code: string;\n\n  @CreateDateColumn({ name: 'created_at', type: 'datetime' })\n  createdAt: Date;\n\n  @JoinColumn({ name: 'user_id' })\n  @ManyToOne(() => UserEntity, (user) => user.unconfirmedEmails)\n  user: UserEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnconfirmedEmailEntitySubscriber.html":{"url":"classes/UnconfirmedEmailEntitySubscriber.html","title":"class - UnconfirmedEmailEntitySubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnconfirmedEmailEntitySubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entity/unconfirmed-email.entity-subscriber copy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        EntitySubscriberInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                encryptionColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterLoad\n                            \n                            \n                                beforeInsert\n                            \n                            \n                                beforeUpdate\n                            \n                            \n                                listenTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        encryptionColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['email']\n                    \n                \n                    \n                        \n                                Defined in src/user/entity/unconfirmed-email.entity-subscriber copy.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterLoad\n                        \n                    \n                \n            \n            \n                \nafterLoad(entity: UnconfirmedEmailEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/user/entity/unconfirmed-email.entity-subscriber copy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                UnconfirmedEmailEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        beforeInsert\n                        \n                    \n                \n            \n            \n                \nbeforeInsert(event: InsertEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/user/entity/unconfirmed-email.entity-subscriber copy.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                InsertEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     void | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        beforeUpdate\n                        \n                    \n                \n            \n            \n                \nbeforeUpdate(event: UpdateEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/user/entity/unconfirmed-email.entity-subscriber copy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     void | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listenTo\n                        \n                    \n                \n            \n            \n                \nlistenTo()\n                \n            \n\n\n            \n                \n                    Defined in src/user/entity/unconfirmed-email.entity-subscriber copy.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntitySubscriberInterface, EventSubscriber, InsertEvent, UpdateEvent } from \"typeorm\"\nimport { decryptEntity, encryptEntity } from \"../../common/helper/entity-encrypter\";\nimport { UnconfirmedEmailEntity } from \"./unconfirmed_email.entity\";\n\n@EventSubscriber()\nexport class UnconfirmedEmailEntitySubscriber implements EntitySubscriberInterface {\n    private readonly encryptionColumns = ['email'];\n\n    listenTo() {\n        return UnconfirmedEmailEntity\n    }\n\n    beforeInsert(event: InsertEvent): void | Promise {\n        encryptEntity(event.entity, this.encryptionColumns);\n    }\n\n    beforeUpdate(event: UpdateEvent): void | Promise {\n        encryptEntity(event.entity, this.encryptionColumns);\n    }\n\n    afterLoad(entity: UnconfirmedEmailEntity) {\n        decryptEntity(entity, this.encryptionColumns);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnconfirmedEmailRepository.html":{"url":"classes/UnconfirmedEmailRepository.html","title":"class - UnconfirmedEmailRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnconfirmedEmailRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/repository/unconfirmed-email.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findByCode\n                            \n                            \n                                findByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findByCode\n                        \n                    \n                \n            \n            \n                \nfindByCode(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/unconfirmed-email.repository.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByUserId\n                        \n                    \n                \n            \n            \n                \nfindByUserId(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/unconfirmed-email.repository.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { UnconfirmedEmailEntity } from '../entity/unconfirmed_email.entity';\n\n@EntityRepository(UnconfirmedEmailEntity)\nexport class UnconfirmedEmailRepository extends Repository {\n  findByUserId(userId: string): Promise {\n    return this.find({ where: { userId } });\n  }\n\n  findByCode(code: string): Promise {\n    return this.findOne({ where: { code }, relations: ['user'] });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UnconfirmedEmailService.html":{"url":"injectables/UnconfirmedEmailService.html","title":"injectable - UnconfirmedEmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UnconfirmedEmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/service/unconfirmed-email.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changeUserEmailInCognito\n                            \n                            \n                                    Async\n                                findByCodeOrFail\n                            \n                            \n                                    Async\n                                saveUnconfirmedEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(unconfirmedEmailRepository: UnconfirmedEmailRepository, cognito: AWS.CognitoIdentityServiceProvider, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/user/service/unconfirmed-email.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        unconfirmedEmailRepository\n                                                  \n                                                        \n                                                                        UnconfirmedEmailRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cognito\n                                                  \n                                                        \n                                                                        AWS.CognitoIdentityServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        changeUserEmailInCognito\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeUserEmailInCognito(user: UserEntity, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/unconfirmed-email.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCodeOrFail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCodeOrFail(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/unconfirmed-email.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveUnconfirmedEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveUnconfirmedEmail(userId: string, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/unconfirmed-email.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UnconfirmedEmailService.name)\n                    \n                \n                    \n                        \n                                Defined in src/user/service/unconfirmed-email.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  BadRequestException,\n  Logger,\n} from '@nestjs/common';\nimport * as uuid from 'uuid';\nimport * as AWS from 'aws-sdk';\nimport { UnconfirmedEmailRepository } from '../repository/unconfirmed-email.repository';\nimport { UnconfirmedEmailEntity } from '../entity/unconfirmed_email.entity';\nimport { CustomError } from '../../common/error/custom-error';\nimport {\n  SAVE_UNCONFIRMED_EMAIL_FAILED,\n  UNCONFIRMED_EMAIL_NOT_FOUND,\n  EMAIL_ALREADY_IN_USE,\n  UPDATE_USER_EMAIL_FAILED,\n} from '../../common/error/keys';\nimport { UserEntity } from '../../user/entity/user.entity';\nimport { DICTIONARY } from '../../common/constant/dictionary.constant';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class UnconfirmedEmailService {\n  private readonly logger = new Logger(UnconfirmedEmailService.name);\n\n  constructor(\n    @Inject(UnconfirmedEmailRepository)\n    private readonly unconfirmedEmailRepository: UnconfirmedEmailRepository,\n    @Inject(AWS.CognitoIdentityServiceProvider)\n    private readonly cognito: AWS.CognitoIdentityServiceProvider,\n    @Inject(DICTIONARY.CONFIG) private readonly config: ConfigService\n  ) {}\n\n  async saveUnconfirmedEmail(\n    userId: string,\n    email: string\n  ): Promise {\n    return this.unconfirmedEmailRepository\n      .save({ userId, code: uuid.v4(), email })\n      .catch((error) => {\n        this.logger.error(error);\n        throw new BadRequestException(SAVE_UNCONFIRMED_EMAIL_FAILED);\n      });\n  }\n\n  async findByCodeOrFail(code: string): Promise {\n    return this.unconfirmedEmailRepository.findByCode(code).then((data) => {\n      if (!data) {\n        throw new BadRequestException(UNCONFIRMED_EMAIL_NOT_FOUND);\n      }\n\n      return data;\n    });\n  }\n\n  async changeUserEmailInCognito(user: UserEntity, email: string) {\n    await new Promise((resolve, reject) => {\n      this.cognito.adminUpdateUserAttributes(\n        {\n          UserPoolId: this.config.get('authorization.userPoolId'),\n          Username: user.id,\n          UserAttributes: [\n            { Name: 'email', Value: email },\n            { Name: 'email_verified', Value: 'true' },\n          ],\n        },\n        (error, result) => {\n          if (!error) {\n            resolve(result);\n            return;\n          }\n          reject(error);\n        }\n      );\n    }).catch((error) => {\n      throw new CustomError(\n        error.code === 'AliasExistsException'\n          ? EMAIL_ALREADY_IN_USE\n          : UPDATE_USER_EMAIL_FAILED,\n        error\n      );\n    });\n\n    return this.unconfirmedEmailRepository.delete({ userId: user.id, email });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateContactAndCheckPhoneDTO.html":{"url":"classes/UpdateContactAndCheckPhoneDTO.html","title":"class - UpdateContactAndCheckPhoneDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateContactAndCheckPhoneDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/request/dto/update-contact-and-check-phone.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        UpdateContactDTO\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                countryCode\n                            \n                            \n                                active\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                prefix\n                            \n                            \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        countryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 2, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/request/dto/update-contact-and-check-phone.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateContactDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateContactDTO:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 320, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateContactDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateContactDTO:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 100, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateContactDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateContactDTO:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 12, required: false, example: '123456789'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateContactDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateContactDTO:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, maxLength: 3, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateContactDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateContactDTO:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 100, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateContactDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateContactDTO:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UpdateContactDTO } from './update-contact.dto';\n\nexport class UpdateContactAndCheckPhoneDTO extends UpdateContactDTO {\n  @ApiProperty({ type: String, maxLength: 2, required: false })\n  countryCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UpdateContactController.html":{"url":"controllers/UpdateContactController.html","title":"controller - UpdateContactController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UpdateContactController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/controller/update-contact.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                updateContact\n                            \n                            \n                                    Async\n                                updateContactAndCheckPhoneNumber\n                            \n                            \n                                    Async\n                                updateContactWithoutPhoneNumberVerification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateContact\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateContact(user: UserEntity, contactId: number, data: UpdateContactDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/contact/controller/update-contact.controller.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contactId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateContactDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateContactAndCheckPhoneNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateContactAndCheckPhoneNumber(user: UserEntity, contactId: number, data: UpdateContactAndCheckPhoneDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: ContactRO})@ApiResponse({status: 400, type: ErrorMessageRO})@ApiOperation({summary: 'Update contact by user with phone check'})@Roles(['undefined'])@Patch('api/v2/contact/:id')\n                \n            \n\n            \n                \n                    Defined in src/contact/controller/update-contact.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contactId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateContactAndCheckPhoneDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateContactWithoutPhoneNumberVerification\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateContactWithoutPhoneNumberVerification(user: UserEntity, contactId: number, data: UpdateContactDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: ContactRO})@ApiResponse({status: 400, type: ErrorMessageRO})@ApiOperation({summary: 'Update contact by user'})@Roles(['undefined'])@Patch('contact/:id')\n                \n            \n\n            \n                \n                    Defined in src/contact/controller/update-contact.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contactId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateContactDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Patch,\n  Body,\n  UseGuards,\n  Param,\n  Inject,\n  BadRequestException,\n} from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n} from '@nestjs/swagger';\nimport { RolesGuard } from '../../authentication/roles.guard';\nimport { Roles } from '../../authentication/decorator/roles.decorator';\nimport { Reflector } from '@nestjs/core';\nimport { plainToClass } from 'class-transformer';\nimport { ContactService } from '../service/contact.service';\nimport { User } from '../../authentication/decorator/user.decorator';\nimport { UserEntity, ROLES } from '../../user/entity/user.entity';\nimport { ContactRO } from '../response/contact.ro';\nimport { UpdateContactDTO } from '../request/dto/update-contact.dto';\nimport { updateContactSchema } from '../request/schema/update-contact.schema';\nimport { ValidationPipe } from '../../common/pipe/validation.pipe';\nimport { AuthGuard } from '@nestjs/passport';\nimport { NumericIdValidationPipe } from '../../common/pipe/numeric-id-validation.pipe';\nimport { ErrorMessageRO } from '../../common/response/error.ro';\nimport * as LibPhoneNumber from 'google-libphonenumber';\nimport { DICTIONARY } from '../../common/constant/dictionary.constant';\nimport { UpdateContactAndCheckPhoneDTO } from '../request/dto/update-contact-and-check-phone.dto';\nimport { updateContactAndCheckPhoneSchema } from '../request/schema/update-contact-and-check-phone.schema';\nimport { PHONE_NUMBER_IS_INVALID } from '../../common/error/keys';\nimport { checkPhoneNumber } from '../../common/helper/check-phone-number';\nimport { omit } from '../../common/helper/omit';\n\n@ApiBearerAuth()\n@UseGuards(new RolesGuard(new Reflector()))\n@UseGuards(AuthGuard('cognito'))\n@ApiTags('contact')\n@Controller()\nexport class UpdateContactController {\n  constructor(\n    private readonly contactService: ContactService,\n    @Inject(DICTIONARY.GOOGLE_PHONE_NUMBER)\n    private readonly phoneUtil: LibPhoneNumber.PhoneNumberUtil\n  ) {}\n\n  @ApiResponse({ status: 200, type: ContactRO })\n  @ApiResponse({ status: 400, type: ErrorMessageRO })\n  @ApiOperation({ summary: 'Update contact by user with phone check' })\n  @Roles([ROLES.USER])\n  @Patch('api/v2/contact/:id')\n  async updateContactAndCheckPhoneNumber(\n    @User() user: UserEntity,\n    @Param('id', new NumericIdValidationPipe()) contactId: number,\n    @Body(new ValidationPipe(updateContactAndCheckPhoneSchema))\n    data: UpdateContactAndCheckPhoneDTO\n  ) {\n    if (\n      data.phone &&\n      !checkPhoneNumber(\n        this.phoneUtil,\n        data.prefix,\n        data.phone,\n        data.countryCode\n      )\n    ) {\n      throw new BadRequestException(PHONE_NUMBER_IS_INVALID);\n    }\n\n    return this.updateContact(user, contactId, omit(data, ['countryCode']));\n  }\n\n  @ApiResponse({ status: 200, type: ContactRO })\n  @ApiResponse({ status: 400, type: ErrorMessageRO })\n  @ApiOperation({ summary: 'Update contact by user' })\n  @Roles([ROLES.USER])\n  @Patch('contact/:id')\n  async updateContactWithoutPhoneNumberVerification(\n    @User() user: UserEntity,\n    @Param('id', new NumericIdValidationPipe()) contactId: number,\n    @Body(new ValidationPipe(updateContactSchema))\n    data: UpdateContactDTO\n  ) {\n    return this.updateContact(user, contactId, data);\n  }\n\n  async updateContact(\n    user: UserEntity,\n    contactId: number,\n    data: UpdateContactDTO\n  ) {\n    let contact = await this.contactService.findByIdAndUserIdOrFail(\n      contactId,\n      user.id\n    );\n\n    await this.contactService.updateContact(contact, data);\n\n    contact = await this.contactService.findById(contactId);\n\n    return plainToClass(ContactRO, contact);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateContactDTO.html":{"url":"classes/UpdateContactDTO.html","title":"class - UpdateContactDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateContactDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/contact/request/dto/update-contact.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                prefix\n                            \n                            \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/request/dto/update-contact.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 320, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/request/dto/update-contact.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 100, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/request/dto/update-contact.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 12, required: false, example: '123456789'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/request/dto/update-contact.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, maxLength: 3, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/request/dto/update-contact.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 100, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/contact/request/dto/update-contact.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateContactDTO {\n  @ApiProperty({ type: String, maxLength: 100, required: false })\n  name: string;\n\n  @ApiProperty({ type: String, maxLength: 100, required: false })\n  surname: string;\n\n  @ApiProperty({ type: String, maxLength: 320, required: false })\n  email: string;\n\n  @ApiProperty({ type: Number, maxLength: 3, required: false })\n  prefix: number;\n\n  @ApiProperty({\n    type: String,\n    maxLength: 12,\n    required: false,\n    example: '123456789',\n  })\n  phone: string;\n\n  @ApiProperty({ type: Boolean, required: false })\n  active: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UpdateTimeSlotController.html":{"url":"controllers/UpdateTimeSlotController.html","title":"controller - UpdateTimeSlotController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UpdateTimeSlotController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/trigger-time-slot/controller/update-time-slot.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                time-slot\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                updateTimeSlot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTimeSlot\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTimeSlot(user: UserEntity, timeSlotId: number, data: UpdateTimeSlotDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: TimeSlotRO})@ApiResponse({status: 400, type: ErrorMessageRO})@ApiOperation({summary: 'Update time slot by user'})@Roles(['undefined'])@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/trigger-time-slot/controller/update-time-slot.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeSlotId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateTimeSlotDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Patch,\n  Body,\n  UseGuards,\n  Param,\n  Inject,\n  BadRequestException,\n} from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n} from '@nestjs/swagger';\nimport { RolesGuard } from '../../authentication/roles.guard';\nimport { Roles } from '../../authentication/decorator/roles.decorator';\nimport { Reflector } from '@nestjs/core';\nimport { plainToClass } from 'class-transformer';\nimport { TriggerTimeSlotService } from '../service/trigger-time-slot.service';\nimport { User } from '../../authentication/decorator/user.decorator';\nimport { UserEntity, ROLES } from '../../user/entity/user.entity';\nimport { TimeSlotRO } from '../response/time-slot.ro';\nimport { UpdateTimeSlotDTO } from '../request/dto/update-time-slot.dto';\nimport { updateTimeSlotSchema } from '../request/schema/update-time-slot.schema';\nimport { ValidationPipe } from '../../common/pipe/validation.pipe';\nimport { AuthGuard } from '@nestjs/passport';\nimport { NumericIdValidationPipe } from '../../common/pipe/numeric-id-validation.pipe';\nimport { ErrorMessageRO } from '../../common/response/error.ro';\nimport { timeSlotMapper } from '../mapper/time-slot.mapper';\n\n@ApiBearerAuth()\n@UseGuards(new RolesGuard(new Reflector()))\n@UseGuards(AuthGuard('cognito'))\n@ApiTags('time-slot')\n@Controller('time-slot')\nexport class UpdateTimeSlotController {\n  constructor(private readonly timeSlotService: TriggerTimeSlotService) {}\n\n  @ApiResponse({ status: 200, type: TimeSlotRO })\n  @ApiResponse({ status: 400, type: ErrorMessageRO })\n  @ApiOperation({ summary: 'Update time slot by user' })\n  @Roles([ROLES.USER])\n  @Patch(':id')\n  async updateTimeSlot(\n    @User() user: UserEntity,\n    @Param('id', new NumericIdValidationPipe()) timeSlotId: number,\n    @Body(new ValidationPipe(updateTimeSlotSchema))\n    data: UpdateTimeSlotDTO\n  ) {\n    let timeSlot = await this.timeSlotService.findByIdAndUserIdOrFail(\n      timeSlotId,\n      user.id\n    );\n\n    timeSlot = await this.timeSlotService.updateTimeSlot(\n      timeSlot,\n      user.id,\n      data\n    );\n\n    return timeSlotMapper(timeSlot);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTimeSlotDTO.html":{"url":"classes/UpdateTimeSlotDTO.html","title":"class - UpdateTimeSlotDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTimeSlotDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/trigger-time-slot/request/dto/update-time-slot.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AddTimeSlotDTO\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                active\n                            \n                            \n                                days\n                            \n                            \n                                    Optional\n                                from\n                            \n                            \n                                timezone\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AddTimeSlotDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         AddTimeSlotDTO:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        days\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'enum', required: false, isArray: true, enum: undefined, example: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AddTimeSlotDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         AddTimeSlotDTO:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AddTimeSlotDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         AddTimeSlotDTO:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timezone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AddTimeSlotDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         AddTimeSlotDTO:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AddTimeSlotDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         AddTimeSlotDTO:13\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AddTimeSlotDTO } from './add-time-slot.dto';\n\nexport class UpdateTimeSlotDTO extends AddTimeSlotDTO {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDeviceIdDTO.html":{"url":"classes/UpdateUserDeviceIdDTO.html","title":"class - UpdateUserDeviceIdDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDeviceIdDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/request/dto/update-user-device-id.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deviceId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        deviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 200, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-device-id.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateUserDeviceIdDTO {\n  @ApiProperty({ type: String, maxLength: 200, required: false })\n  deviceId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UpdateUserDeviceIdentifierController.html":{"url":"controllers/UpdateUserDeviceIdentifierController.html","title":"controller - UpdateUserDeviceIdentifierController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UpdateUserDeviceIdentifierController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/update-user-device-id.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                updateUserDeviceIdentifierController\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUserDeviceIdentifierController\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserDeviceIdentifierController(logged: UserEntity, data: UpdateUserDeviceIdDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: SuccessRO})@ApiResponse({status: 400, type: ErrorMessageRO})@ApiOperation({summary: 'Edit device identifier by user'})@Roles(['undefined'])@Patch('device')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/update-user-device-id.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logged\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateUserDeviceIdDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Patch, Body, UseGuards } from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n} from '@nestjs/swagger';\nimport { RolesGuard } from '../../authentication/roles.guard';\nimport { Roles } from '../../authentication/decorator/roles.decorator';\nimport { Reflector } from '@nestjs/core';\nimport { UserService } from '../service/user.service';\nimport { User } from '../../authentication/decorator/user.decorator';\nimport { UserEntity, ROLES } from '../../user/entity/user.entity';\nimport { ValidationPipe } from '../../common/pipe/validation.pipe';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ErrorMessageRO } from '../../common/response/error.ro';\nimport { UpdateUserDeviceIdDTO } from '../request/dto/update-user-device-id.dto';\nimport { updateUserDeviceIdSchema } from '../request/schema/update-user-device-id.schema';\nimport { SuccessRO } from '../../common/response/success.ro';\nimport { plainToClass } from 'class-transformer';\n\n@ApiBearerAuth()\n@UseGuards(new RolesGuard(new Reflector()))\n@UseGuards(AuthGuard('cognito'))\n@ApiTags('user')\n@Controller('user')\nexport class UpdateUserDeviceIdentifierController {\n  constructor(private readonly userService: UserService) {}\n\n  @ApiResponse({ status: 200, type: SuccessRO })\n  @ApiResponse({ status: 400, type: ErrorMessageRO })\n  @ApiOperation({ summary: 'Edit device identifier by user' })\n  @Roles([ROLES.USER])\n  @Patch('device')\n  async updateUserDeviceIdentifierController(\n    @User() logged: UserEntity,\n    @Body(new ValidationPipe(updateUserDeviceIdSchema))\n    data: UpdateUserDeviceIdDTO\n  ) {\n    const result = await this.userService.updateUserDeviceId(\n      logged.id,\n      data.deviceId\n    );\n\n    return plainToClass(SuccessRO, {\n      success: !!result.affected,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserProfileAndCheckPhoneDTO.html":{"url":"classes/UpdateUserProfileAndCheckPhoneDTO.html","title":"class - UpdateUserProfileAndCheckPhoneDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserProfileAndCheckPhoneDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/request/dto/update-user-profile-and-check-phone.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        UpdateUserProfileDTO\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                countryCode\n                            \n                            \n                                address\n                            \n                            \n                                allowNotifications\n                            \n                            \n                                automatedEmergency\n                            \n                            \n                                dateOfBirth\n                            \n                            \n                                email\n                            \n                            \n                                emergencyEmailAndSms\n                            \n                            \n                                emergencyMessage\n                            \n                            \n                                frequencyOfRegularNotification\n                            \n                            \n                                lastHospitalVisit\n                            \n                            \n                                    Optional\n                                location\n                            \n                            \n                                locationAccess\n                            \n                            \n                                mostRecentDiagnosis\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                positiveInfoPeriod\n                            \n                            \n                                prefix\n                            \n                            \n                                primaryPhysician\n                            \n                            \n                                primaryPhysicianAddress\n                            \n                            \n                                pulseBasedTriggerBackgroundModesEnabled\n                            \n                            \n                                pulseBasedTriggerConnectedToGoogleFit\n                            \n                            \n                                pulseBasedTriggerGoogleFitAuthenticated\n                            \n                            \n                                pulseBasedTriggerIOSAppleWatchPaired\n                            \n                            \n                                pulseBasedTriggerIOSHealthPermissions\n                            \n                            \n                                readManual\n                            \n                            \n                                regularPushNotification\n                            \n                            \n                                seriousMedicalIssues\n                            \n                            \n                                surname\n                            \n                            \n                                    Optional\n                                timezone\n                            \n                            \n                                tipsAndTricks\n                            \n                            \n                                uploadedDocumentsAccess\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        countryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 2, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile-and-check-phone.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 200, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allowNotifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        automatedEmergency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:70\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, example: '12/08/1986'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 320, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emergencyEmailAndSms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emergencyMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 1000, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:73\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frequencyOfRegularNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:79\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastHospitalVisit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, example: '12/08/1986'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:49\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationAccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostRecentDiagnosis\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 300, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 100, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 12, required: false, example: '123456789'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        positiveInfoPeriod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:82\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, maxLength: 3, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryPhysician\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 200, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryPhysicianAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 200, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerBackgroundModesEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:97\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerConnectedToGoogleFit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:94\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerGoogleFitAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:91\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerIOSAppleWatchPaired\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:88\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerIOSHealthPermissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:85\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readManual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:67\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        regularPushNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:76\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seriousMedicalIssues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:43\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 100, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        timezone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tipsAndTricks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:55\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadedDocumentsAccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserProfileDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserProfileDTO:64\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { UpdateUserProfileDTO } from \"./update-user-profile.dto\";\n\nexport class UpdateUserProfileAndCheckPhoneDTO extends UpdateUserProfileDTO {\n  @ApiProperty({ type: String, maxLength: 2, required: false })\n  countryCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UpdateUserProfileController.html":{"url":"controllers/UpdateUserProfileController.html","title":"controller - UpdateUserProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UpdateUserProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/update-user-profile.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateAndSendCodeConfirmingEmailChange\n                            \n                            \n                                positiveInfoFlowHasChanged\n                            \n                            \n                                    Async\n                                updateUserProfile\n                            \n                            \n                                    Async\n                                updateUserProfileAndCheckPhoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateAndSendCodeConfirmingEmailChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateAndSendCodeConfirmingEmailChange(data: UpdateUserProfileDTO, user: UserEntity, profile: ProfileEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/user/controller/update-user-profile.controller.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserProfileDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profile\n                                    \n                                                ProfileEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        positiveInfoFlowHasChanged\n                        \n                    \n                \n            \n            \n                \npositiveInfoFlowHasChanged(profile: ProfileEntity, data: UpdateUserProfileDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/user/controller/update-user-profile.controller.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profile\n                                    \n                                                ProfileEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateUserProfileDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUserProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserProfile(logged: UserEntity, data: UpdateUserProfileDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/user/controller/update-user-profile.controller.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logged\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateUserProfileDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUserProfileAndCheckPhoneNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserProfileAndCheckPhoneNumber(logged: UserEntity, data: UpdateUserProfileAndCheckPhoneDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: ProfileRO})@ApiResponse({status: 400, type: ErrorMessageRO})@ApiOperation({summary: 'Edit profile by user with phone check'})@Roles(['undefined'])@Patch('api/v2/user')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/update-user-profile.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logged\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateUserProfileAndCheckPhoneDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Inject,\n  Controller,\n  Patch,\n  Body,\n  UseGuards,\n  BadRequestException,\n} from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n} from '@nestjs/swagger';\nimport { ConfigService } from '@nestjs/config';\nimport { RolesGuard } from '../../authentication/roles.guard';\nimport { Roles } from '../../authentication/decorator/roles.decorator';\nimport { Reflector } from '@nestjs/core';\nimport { ProfileService } from '../service/profile.service';\nimport { User } from '../../authentication/decorator/user.decorator';\nimport { UserEntity, ROLES } from '../../user/entity/user.entity';\nimport { ProfileRO } from '../response/profile.ro';\nimport { UpdateUserProfileDTO } from '../request/dto/update-user-profile.dto';\nimport { updateUserProfileSchema } from '../request/schema/update-user-profile.schema';\nimport { ValidationPipe } from '../../common/pipe/validation.pipe';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ErrorMessageRO } from '../../common/response/error.ro';\nimport { UnconfirmedEmailService } from '../service/unconfirmed-email.service';\nimport { NotificationService } from '../../notification/service/notification.service';\nimport { getMailTemplateId } from '../../notification/helper/get-template-id';\nimport { getNameOrEmail } from '../../common/helper/get-name-or-email';\nimport { DICTIONARY } from '../../common/constant/dictionary.constant';\nimport { ProfileEntity } from '../../user/entity/profile.entity';\nimport { omit } from '../../common/helper/omit';\nimport { profileMapper } from '../mapper/profile.mapper';\nimport { UpdateUserProfileAndCheckPhoneDTO } from '../request/dto/update-user-profile-and-check-phone.dto';\nimport { updateUserProfileAndCheckPhoneSchema } from '../request/schema/update-user-profile-and-check-phone.schema';\nimport * as LibPhoneNumber from 'google-libphonenumber';\nimport { PHONE_NUMBER_IS_INVALID } from '../../common/error/keys';\nimport { checkPhoneNumber } from '../../common/helper/check-phone-number';\nimport { isDefined } from '../../common/helper/is-defined';\nimport { PositiveInfoService } from '../service/positive-info.service';\nimport { UserService } from '../service/user.service';\nimport { userMapper } from '../mapper/user.mapper';\n\n@ApiBearerAuth()\n@UseGuards(new RolesGuard(new Reflector()))\n@UseGuards(AuthGuard('cognito'))\n@ApiTags('user')\n@Controller()\nexport class UpdateUserProfileController {\n  constructor(\n    private readonly profileService: ProfileService,\n    private readonly positiveInfoService: PositiveInfoService,\n    private readonly unconfirmedEmailService: UnconfirmedEmailService,\n    private readonly notificationService: NotificationService,\n    @Inject(DICTIONARY.CONFIG) private readonly config: ConfigService,\n    @Inject(DICTIONARY.GOOGLE_PHONE_NUMBER)\n    private readonly phoneUtil: LibPhoneNumber.PhoneNumberUtil,\n    private readonly userService: UserService,\n  ) {}\n\n  @ApiResponse({ status: 200, type: ProfileRO })\n  @ApiResponse({ status: 400, type: ErrorMessageRO })\n  @ApiOperation({ summary: 'Edit profile by user with phone check' })\n  @Roles([ROLES.USER])\n  @Patch('api/v2/user')\n  async updateUserProfileAndCheckPhoneNumber(\n    @User() logged: UserEntity,\n    @Body(new ValidationPipe(updateUserProfileAndCheckPhoneSchema))\n    data: UpdateUserProfileAndCheckPhoneDTO\n  ) {\n    if (\n      data.phone &&\n      !checkPhoneNumber(\n        this.phoneUtil,\n        data.prefix,\n        data.phone,\n        data.countryCode\n      )\n    ) {\n      throw new BadRequestException(PHONE_NUMBER_IS_INVALID);\n    }\n\n    return this.updateUserProfile(logged, omit(data, ['countryCode']));\n  }\n\n  positiveInfoFlowHasChanged(\n    profile: ProfileEntity,\n    data: UpdateUserProfileDTO\n  ) {\n    if (\n      (isDefined(data.regularPushNotification) &&\n        profile?.regularPushNotification !== data.regularPushNotification) ||\n      (isDefined(data.positiveInfoPeriod) &&\n        profile?.positiveInfoPeriod !== data.positiveInfoPeriod) ||\n      (!profile?.regularPushNotification &&\n        !profile?.positiveInfoPeriod &&\n        data.positiveInfoPeriod) ||\n      (profile?.regularPushNotification &&\n        !profile?.frequencyOfRegularNotification &&\n        data.frequencyOfRegularNotification) ||\n      (isDefined(data.automatedEmergency) &&\n        profile?.automatedEmergency !== data.automatedEmergency)\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  async updateUserProfile(logged: UserEntity, data: UpdateUserProfileDTO) {\n    let profile = await this.profileService.findByUserId(logged.id);\n\n    if (data.email && logged.email !== data.email) {\n      await this.generateAndSendCodeConfirmingEmailChange(\n        data,\n        logged,\n        profile\n      );\n    }\n\n    const positiveInfoFlowHasChanged = this.positiveInfoFlowHasChanged(\n      profile,\n      data\n    );\n\n    profile = await this.profileService.saveProfile(\n      { ...profile, userId: logged.id },\n      omit(data, ['email'])\n    );\n\n    if (positiveInfoFlowHasChanged) {\n      await this.positiveInfoService.savePositiveInfo(logged.id, {\n        minutesToNext: profile.regularPushNotification\n          ? profile.frequencyOfRegularNotification\n          : profile.positiveInfoPeriod,\n      });\n    }\n\n    return userMapper(await this.userService.findByIdOrFail(logged.id), null);\n  }\n\n  async generateAndSendCodeConfirmingEmailChange(\n    data: UpdateUserProfileDTO,\n    user: UserEntity,\n    profile: ProfileEntity\n  ) {\n    const unconfirmedEmail =\n      await this.unconfirmedEmailService.saveUnconfirmedEmail(\n        user.id,\n        data.email\n      );\n    const emailData = this.notificationService.prepareEmailData(\n      getMailTemplateId('USER_CHANGE_EMAIL'),\n      {\n        username: getNameOrEmail(\n          data.name ?? profile?.name,\n          data.surname ?? profile?.surname,\n          user.email\n        ),\n        domain: this.config.get('backend.url'),\n        code: unconfirmedEmail.code,\n        email: data.email,\n      },\n      {},\n      [\n        {\n          Email: user.email,\n        },\n      ]\n    );\n\n    await this.notificationService.sendEmail({\n      data: emailData,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserProfileDTO.html":{"url":"classes/UpdateUserProfileDTO.html","title":"class - UpdateUserProfileDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserProfileDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/request/dto/update-user-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                allowNotifications\n                            \n                            \n                                automatedEmergency\n                            \n                            \n                                dateOfBirth\n                            \n                            \n                                email\n                            \n                            \n                                emergencyEmailAndSms\n                            \n                            \n                                emergencyMessage\n                            \n                            \n                                frequencyOfRegularNotification\n                            \n                            \n                                lastHospitalVisit\n                            \n                            \n                                    Optional\n                                location\n                            \n                            \n                                locationAccess\n                            \n                            \n                                mostRecentDiagnosis\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                positiveInfoPeriod\n                            \n                            \n                                prefix\n                            \n                            \n                                primaryPhysician\n                            \n                            \n                                primaryPhysicianAddress\n                            \n                            \n                                pulseBasedTriggerBackgroundModesEnabled\n                            \n                            \n                                pulseBasedTriggerConnectedToGoogleFit\n                            \n                            \n                                pulseBasedTriggerGoogleFitAuthenticated\n                            \n                            \n                                pulseBasedTriggerIOSAppleWatchPaired\n                            \n                            \n                                pulseBasedTriggerIOSHealthPermissions\n                            \n                            \n                                readManual\n                            \n                            \n                                regularPushNotification\n                            \n                            \n                                seriousMedicalIssues\n                            \n                            \n                                surname\n                            \n                            \n                                    Optional\n                                timezone\n                            \n                            \n                                tipsAndTricks\n                            \n                            \n                                uploadedDocumentsAccess\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 200, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allowNotifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        automatedEmergency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, example: '12/08/1986'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 320, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emergencyEmailAndSms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emergencyMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 1000, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frequencyOfRegularNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastHospitalVisit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, example: '12/08/1986'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationAccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostRecentDiagnosis\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 300, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 100, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 12, required: false, example: '123456789'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        positiveInfoPeriod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, maxLength: 3, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryPhysician\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 200, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryPhysicianAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 200, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerBackgroundModesEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerConnectedToGoogleFit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerGoogleFitAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerIOSAppleWatchPaired\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerIOSHealthPermissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readManual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        regularPushNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seriousMedicalIssues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, maxLength: 100, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        timezone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tipsAndTricks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadedDocumentsAccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/request/dto/update-user-profile.dto.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class UpdateUserProfileDTO {\n  @ApiProperty({ type: String, maxLength: 100, required: false })\n  name: string;\n\n  @ApiProperty({ type: String, maxLength: 100, required: false })\n  surname: string;\n\n  @ApiProperty({ type: String, maxLength: 320, required: false })\n  email: string;\n\n  @ApiProperty({ type: Number, maxLength: 3, required: false })\n  prefix: number;\n\n  @ApiProperty({ type: String, required: false })\n  location?: string;\n\n  @ApiProperty({ type: String, required: false })\n  timezone?: string;\n\n  @ApiProperty({\n    type: String,\n    maxLength: 12,\n    required: false,\n    example: \"123456789\",\n  })\n  phone: string;\n\n  @ApiProperty({ type: String, maxLength: 200, required: false })\n  address: string;\n\n  @ApiProperty({ type: String, required: false, example: \"12/08/1986\" })\n  dateOfBirth: string;\n\n  @ApiProperty({ type: String, maxLength: 200, required: false })\n  primaryPhysician: string;\n\n  @ApiProperty({ type: String, maxLength: 200, required: false })\n  primaryPhysicianAddress: string;\n\n  @ApiProperty({ type: Boolean, required: false })\n  seriousMedicalIssues: boolean;\n\n  @ApiProperty({ type: String, maxLength: 300, required: false })\n  mostRecentDiagnosis: string;\n\n  @ApiProperty({ type: String, required: false, example: \"12/08/1986\" })\n  lastHospitalVisit: string;\n\n  @ApiProperty({ type: Boolean, required: false })\n  allowNotifications: boolean;\n\n  @ApiProperty({ type: Boolean, required: false })\n  tipsAndTricks: boolean;\n\n  @ApiProperty({ type: Boolean, required: false })\n  emergencyEmailAndSms: boolean;\n\n  @ApiProperty({ type: Boolean, required: false })\n  locationAccess: boolean;\n\n  @ApiProperty({ type: Boolean, required: false })\n  uploadedDocumentsAccess: boolean;\n\n  @ApiProperty({ type: Boolean, required: false })\n  readManual: boolean;\n\n  @ApiProperty({ type: Boolean, required: false })\n  automatedEmergency: boolean;\n\n  @ApiProperty({ type: String, maxLength: 1000, required: false })\n  emergencyMessage: string;\n\n  @ApiProperty({ type: Boolean, required: false })\n  regularPushNotification: boolean;\n\n  @ApiProperty({ type: Number, required: false })\n  frequencyOfRegularNotification: number;\n\n  @ApiProperty({ type: Number, required: false })\n  positiveInfoPeriod: number;\n\n  @ApiProperty({ type: Boolean, required: false })\n  pulseBasedTriggerIOSHealthPermissions: boolean;\n\n  @ApiProperty({ type: Boolean, required: false })\n  pulseBasedTriggerIOSAppleWatchPaired: boolean;\n\n  @ApiProperty({ type: Boolean, required: false })\n  pulseBasedTriggerGoogleFitAuthenticated: boolean;\n\n  @ApiProperty({ type: Boolean, required: false })\n  pulseBasedTriggerConnectedToGoogleFit: boolean;\n\n  @ApiProperty({ type: Boolean, required: false })\n  pulseBasedTriggerBackgroundModesEnabled: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UploadFileController.html":{"url":"controllers/UploadFileController.html","title":"controller - UploadFileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UploadFileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/controller/upload-file.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                file\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(user: UserEntity, data: AddFileDTO, fileDetails)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 400, type: ErrorMessageRO})@ApiConsumes('multipart/form-data')@ApiOperation({summary: 'Upload file by user'})@Roles(['undefined'])@ApiBody({schema: undefined})@UseInterceptors(undefined)@Post()\n                \n            \n\n            \n                \n                    Defined in src/file/controller/upload-file.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AddFileDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileDetails\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  UseGuards,\n  UploadedFile,\n  UseInterceptors,\n  BadRequestException,\n} from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n  ApiBody,\n  ApiConsumes,\n} from '@nestjs/swagger';\nimport { RolesGuard } from '../../authentication/roles.guard';\nimport { Roles } from '../../authentication/decorator/roles.decorator';\nimport { Reflector } from '@nestjs/core';\nimport { FileService } from '../service/file.service';\nimport { User } from '../../authentication/decorator/user.decorator';\nimport { UserEntity, ROLES } from '../../user/entity/user.entity';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ErrorMessageRO } from '../../common/response/error.ro';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { AddFileDTO } from '../request/dto/add-file.dto';\nimport { addFileSchema } from '../request/schema/add-file.schema';\nimport { ValidationPipe } from '../../common/pipe/validation.pipe';\nimport { CATEGORY } from '../enum/category.enum';\nimport { FileCategoryService } from '../service/file-category.service';\nimport { plainToClass } from 'class-transformer';\nimport { FileIdRO } from '../response/file-id.ro';\nimport { LIMIT_OF_NUMBER_OF_FILES_REACHED } from '../../common/error/keys';\n\n@ApiBearerAuth()\n@UseGuards(new RolesGuard(new Reflector()))\n@UseGuards(AuthGuard('cognito'))\n@ApiTags('file')\n@Controller('file')\nexport class UploadFileController {\n  constructor(\n    private readonly fileService: FileService,\n    private readonly fileCategoryService: FileCategoryService\n  ) {}\n\n  @ApiResponse({ status: 400, type: ErrorMessageRO })\n  @ApiConsumes('multipart/form-data')\n  @ApiOperation({ summary: 'Upload file by user' })\n  @Roles([ROLES.USER])\n  @ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        file: {\n          type: 'string',\n          format: 'binary',\n        },\n        category: {\n          enum: Object.values(CATEGORY),\n          format: 'text',\n        },\n      },\n    },\n  })\n  @UseInterceptors(FileInterceptor('file'))\n  @Post()\n  async uploadFile(\n    @User() user: UserEntity,\n    @Body(new ValidationPipe(addFileSchema))\n    data: AddFileDTO,\n    @UploadedFile() fileDetails\n  ) {\n    const category = await this.fileCategoryService.findByCodeOrFail(\n      data.category\n    );\n    const files = await this.fileService.findByCategoryCodeAndUserId(\n      [category.code],\n      user.id\n    );\n\n    if (files.length >= category.limit) {\n      throw new BadRequestException(LIMIT_OF_NUMBER_OF_FILES_REACHED);\n    }\n\n    const s3File = await this.fileService.uploadFileOrFail(fileDetails);\n    const fileEntity = await this.fileService.saveFile(\n      user.id,\n      fileDetails,\n      s3File.Key,\n      category.id\n    );\n\n    return plainToClass(FileIdRO, fileEntity);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadResult.html":{"url":"interfaces/UploadResult.html","title":"interface - UploadResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/type/upload-result.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Bucket\n                                        \n                                \n                                \n                                        \n                                            Key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Bucket\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface UploadResult {\n  Key: string;\n  Bucket: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entity/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contacts\n                            \n                            \n                                createdAt\n                            \n                            \n                                deviceId\n                            \n                            \n                                email\n                            \n                            \n                                files\n                            \n                            \n                                id\n                            \n                            \n                                positiveInfo\n                            \n                            \n                                profile\n                            \n                            \n                                role\n                            \n                            \n                                unconfirmedEmails\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contacts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContactEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, contact => contact.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'device_id', type: 'varchar', length: 200})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'email', type: 'longtext'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, file => file.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn({type: 'varchar', length: 36})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        positiveInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PositiveInfoEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, positiveInfo => positiveInfo.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profile => profile.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ROLES\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unconfirmedEmails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UnconfirmedEmailEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, unconfirmedEmail => unconfirmedEmail.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:39\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  PrimaryColumn,\n  Index,\n  CreateDateColumn,\n  UpdateDateColumn,\n  OneToMany,\n  OneToOne,\n} from 'typeorm';\nimport { ContactEntity } from '../../contact/entity/contact.entity';\nimport { ProfileEntity } from './profile.entity';\nimport { UnconfirmedEmailEntity } from './unconfirmed_email.entity';\nimport { FileEntity } from '../../file/entity/file.entity';\nimport { PositiveInfoEntity } from './positive-info.entity';\n\nexport enum ROLES {\n  USER = 0,\n}\n\n@Entity('user')\nexport class UserEntity {\n  @PrimaryColumn({ type: 'varchar', length: 36 })\n  id: string;\n\n  @Column({ type: 'enum', enum: [ROLES.USER] })\n  role: ROLES;\n\n  @Column({ name: 'email', type: 'longtext' })\n  email: string;\n\n  @Column({ name: 'device_id', type: 'varchar', length: 200 })\n  deviceId: string;\n\n  @CreateDateColumn({ name: 'created_at', type: 'datetime' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at', type: 'datetime' })\n  updatedAt: Date;\n\n  @OneToOne(() => ProfileEntity, (profile) => profile.user)\n  profile: ProfileEntity;\n\n  @OneToOne(() => PositiveInfoEntity, (positiveInfo) => positiveInfo.user)\n  positiveInfo: PositiveInfoEntity;\n\n  @OneToMany(() => ContactEntity, (contact) => contact.user)\n  contacts: ContactEntity[];\n\n  @OneToMany(() => FileEntity, (file) => file.user)\n  files: FileEntity[];\n\n  @OneToMany(\n    () => UnconfirmedEmailEntity,\n    (unconfirmedEmail) => unconfirmedEmail.user\n  )\n  unconfirmedEmails: UnconfirmedEmailEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntitySubscriber.html":{"url":"classes/UserEntitySubscriber.html","title":"class - UserEntitySubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntitySubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entity/user.entity-subscriber.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        EntitySubscriberInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                encryptionColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterLoad\n                            \n                            \n                                beforeInsert\n                            \n                            \n                                beforeUpdate\n                            \n                            \n                                listenTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        encryptionColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['email']\n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity-subscriber.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterLoad\n                        \n                    \n                \n            \n            \n                \nafterLoad(entity: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/user/entity/user.entity-subscriber.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        beforeInsert\n                        \n                    \n                \n            \n            \n                \nbeforeInsert(event: InsertEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/user/entity/user.entity-subscriber.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                InsertEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     void | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        beforeUpdate\n                        \n                    \n                \n            \n            \n                \nbeforeUpdate(event: UpdateEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/user/entity/user.entity-subscriber.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     void | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listenTo\n                        \n                    \n                \n            \n            \n                \nlistenTo()\n                \n            \n\n\n            \n                \n                    Defined in src/user/entity/user.entity-subscriber.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntitySubscriberInterface, EventSubscriber, InsertEvent, UpdateEvent } from \"typeorm\"\nimport { decryptEntity, encryptEntity } from \"../../common/helper/entity-encrypter\";\nimport { UserEntity } from \"./user.entity\";\n\n@EventSubscriber()\nexport class UserEntitySubscriber implements EntitySubscriberInterface {\n    private readonly encryptionColumns = ['email'];\n\n    listenTo() {\n        return UserEntity\n    }\n\n    beforeInsert(event: InsertEvent): void | Promise {\n        encryptEntity(event.entity, this.encryptionColumns);\n    }\n\n    beforeUpdate(event: UpdateEvent): void | Promise {\n        encryptEntity(event.entity, this.encryptionColumns);\n    }\n\n    afterLoad(entity: UserEntity) {\n        decryptEntity(entity, this.encryptionColumns);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\n\nContactModule\n\nContactModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nContactModule->UserModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nUserModule -->\n\nFileModule->UserModule\n\n\n\n\n\nNotificationModule\n\nNotificationModule\n\nUserModule -->\n\nNotificationModule->UserModule\n\n\n\n\n\nQueueModule\n\nQueueModule\n\nUserModule -->\n\nQueueModule->UserModule\n\n\n\n\n\nTriggerTimeSlotModule\n\nTriggerTimeSlotModule\n\nUserModule -->\n\nTriggerTimeSlotModule->UserModule\n\n\n\n\n\nExportService \n\nExportService \n\nExportService  -->\n\nUserModule->ExportService \n\n\n\n\n\nPositiveInfoService \n\nPositiveInfoService \n\nPositiveInfoService  -->\n\nUserModule->PositiveInfoService \n\n\n\n\n\nProfileService \n\nProfileService \n\nProfileService  -->\n\nUserModule->ProfileService \n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nExportService\n\nExportService\n\nUserModule -->\n\nExportService->UserModule\n\n\n\n\n\nPositiveInfoService\n\nPositiveInfoService\n\nUserModule -->\n\nPositiveInfoService->UserModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nUserModule -->\n\nProfileService->UserModule\n\n\n\n\n\nUnconfirmedEmailService\n\nUnconfirmedEmailService\n\nUserModule -->\n\nUnconfirmedEmailService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExportService\n                        \n                        \n                            PositiveInfoService\n                        \n                        \n                            ProfileService\n                        \n                        \n                            UnconfirmedEmailService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UpdateUserProfileController\n                        \n                        \n                            GetUserController\n                        \n                        \n                            ConfirmUserEmailController\n                        \n                        \n                            SendTestMessageController\n                        \n                        \n                            ExportUserDataController\n                        \n                        \n                            DeleteUserController\n                        \n                        \n                            UpdateUserDeviceIdentifierController\n                        \n                        \n                            NotePositiveInfoController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContactModule\n                        \n                        \n                            FileModule\n                        \n                        \n                            NotificationModule\n                        \n                        \n                            QueueModule\n                        \n                        \n                            TriggerTimeSlotModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExportService\n                        \n                        \n                            PositiveInfoService\n                        \n                        \n                            ProfileService\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './service/user.service';\nimport { ProfileService } from './service/profile.service';\nimport { CognitoIdentityServiceProvider } from '../common/provider/cognito-identity-service.provider';\nimport { ConfigProvider } from '../common/provider/config.provider';\nimport { UserRepositoryProvider } from './provider/user-repository.provider';\nimport { ProfileRepositoryProvider } from './provider/profile-repository.provider';\nimport { UnconfirmedEmailRepositoryProvider } from './provider/unconfirmed-email-repository.provider';\nimport { UpdateUserProfileController } from './controller/update-user-profile.controller';\nimport { GetUserController } from './controller/get-user.controller';\nimport { ConfirmUserEmailController } from './controller/confirm-user-email.controller';\nimport { UnconfirmedEmailService } from './service/unconfirmed-email.service';\nimport { NotificationModule } from '../notification/notification.module';\nimport { SendTestMessageController } from './controller/send-test-message.controller';\nimport { GoogleLibPhoneNumberProvider } from '../common/provider/google-phone-number.provider';\nimport { QueueModule } from '../queue/queue.module';\nimport { DeleteUserController } from './controller/delete-account.controller';\nimport { ExportUserDataController } from './controller/export-user-data.controller';\nimport { ContactModule } from '../contact/contact.module';\nimport { ExportService } from './service/export.service';\nimport { TriggerTimeSlotModule } from '../trigger-time-slot/trigger-time-slot.module';\nimport { FileModule } from '../file/file.module';\nimport { UpdateUserDeviceIdentifierController } from './controller/update-user-device-id.controller';\nimport { NotePositiveInfoController } from './controller/note-positive-info.controller';\nimport { PositiveInfoRepositoryProvider } from './provider/positive-info-repository.provider';\nimport { PositiveInfoService } from './service/positive-info.service';\nimport { ConfigModule } from '@nestjs/config';\nimport configuration from '../config/default';\n\n@Module({\n  imports: [\n    NotificationModule,\n    QueueModule,\n    ContactModule,\n    TriggerTimeSlotModule,\n    FileModule,\n    ConfigModule.forRoot({\n      load: [configuration],\n    }),\n  ],\n  controllers: [\n    UpdateUserProfileController,\n    GetUserController,\n    ConfirmUserEmailController,\n    SendTestMessageController,\n    ExportUserDataController,\n    DeleteUserController,\n    UpdateUserDeviceIdentifierController,\n    NotePositiveInfoController,\n  ],\n  providers: [\n    UserService,\n    ProfileService,\n    CognitoIdentityServiceProvider,\n    ProfileRepositoryProvider,\n    UnconfirmedEmailRepositoryProvider,\n    GoogleLibPhoneNumberProvider,\n    PositiveInfoRepositoryProvider,\n    ConfigProvider,\n    UserRepositoryProvider,\n    UnconfirmedEmailService,\n    ExportService,\n    PositiveInfoService,\n  ],\n  exports: [\n    UserService,\n    ProfileService,\n    PositiveInfoService,\n    ExportService,\n    PositiveInfoRepositoryProvider,\n    ProfileRepositoryProvider,\n  ],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRO.html":{"url":"classes/UserRO.html","title":"class - UserRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/response/user.ro.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ProfileRO\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                fillLevel\n                            \n                            \n                                id\n                            \n                            \n                                isEmergencyTriggerActive\n                            \n                            \n                                role\n                            \n                            \n                                updatedAt\n                            \n                            \n                                userId\n                            \n                            \n                                    Optional\n                                address\n                            \n                            \n                                allowNotifications\n                            \n                            \n                                automatedEmergency\n                            \n                            \n                                    Optional\n                                dateOfBirth\n                            \n                            \n                                deviceId\n                            \n                            \n                                emergencyEmailAndSms\n                            \n                            \n                                emergencyMessage\n                            \n                            \n                                frequencyOfRegularNotification\n                            \n                            \n                                lastHospitalVisit\n                            \n                            \n                                location\n                            \n                            \n                                locationAccess\n                            \n                            \n                                mostRecentDiagnosis\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                positiveInfoPeriod\n                            \n                            \n                                    Optional\n                                prefix\n                            \n                            \n                                primaryPhysician\n                            \n                            \n                                primaryPhysicianAddress\n                            \n                            \n                                pulseBasedTriggerBackgroundModesEnabled\n                            \n                            \n                                pulseBasedTriggerConnectedToGoogleFit\n                            \n                            \n                                pulseBasedTriggerGoogleFitAuthenticated\n                            \n                            \n                                pulseBasedTriggerIOSAppleWatchPaired\n                            \n                            \n                                pulseBasedTriggerIOSHealthPermissions\n                            \n                            \n                                readManual\n                            \n                            \n                                regularPushNotification\n                            \n                            \n                                seriousMedicalIssues\n                            \n                            \n                                    Optional\n                                surname\n                            \n                            \n                                timezone\n                            \n                            \n                                tipsAndTricks\n                            \n                            \n                                uploadedDocumentsAccess\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/user.ro.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fillLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/user.ro.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/user.ro.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmergencyTriggerActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/user.ro.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ROLES\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: 'enum', enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/response/user.ro.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : undefined\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allowNotifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:86\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        automatedEmergency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:115\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:63\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emergencyEmailAndSms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:94\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emergencyMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:107\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frequencyOfRegularNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Number})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:123\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastHospitalVisit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:82\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:131\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationAccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:98\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostRecentDiagnosis\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:75\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        positiveInfoPeriod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Number})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:127\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        prefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: Number})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryPhysician\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:53\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryPhysicianAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerBackgroundModesEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:155\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerConnectedToGoogleFit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:151\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerGoogleFitAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:147\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerIOSAppleWatchPaired\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:143\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulseBasedTriggerIOSHealthPermissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:139\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readManual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:111\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        regularPushNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:119\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seriousMedicalIssues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: Boolean})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:70\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Transform( => )@ApiProperty({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timezone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:135\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tipsAndTricks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:90\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadedDocumentsAccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: Boolean})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ProfileRO\n\n                            \n                        \n                    \n                        \n                                Defined in         ProfileRO:102\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { ROLES } from '../entity/user.entity';\nimport { ProfileRO } from './profile.ro';\nimport { Boolean } from 'aws-sdk/clients/batch';\n\n@Exclude()\nexport class UserRO extends ProfileRO {\n  @Expose()\n  @ApiProperty({ type: String })\n  id: string;\n\n  @Expose()\n  @ApiProperty({\n    type: 'enum',\n    enum: Object.values(ROLES).filter((value) => Number.isInteger(value)),\n  })\n  role: ROLES;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  email?: string;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  createdAt: string;\n\n  @Expose()\n  @ApiProperty({ type: String })\n  updatedAt: string;\n\n  @Expose()\n  @ApiProperty({ type: Number })\n  fillLevel: number;\n\n  @Exclude()\n  userId = undefined;\n\n  @Expose()\n  @ApiProperty({ type: Boolean })\n  isEmergencyTriggerActive: Boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepository.html":{"url":"classes/UserRepository.html","title":"class - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/repository/user.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findByDeviceId\n                            \n                            \n                                findByEmail\n                            \n                            \n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UserRepository.name)\n                    \n                \n                    \n                        \n                                Defined in src/user/repository/user.repository.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findByDeviceId\n                        \n                    \n                \n            \n            \n                \nfindByDeviceId(deviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/user.repository.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByEmail\n                        \n                    \n                \n            \n            \n                \nfindByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/user.repository.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/user.repository.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { EntityRepository, Repository } from 'typeorm';\nimport { UserEntity } from '../entity/user.entity';\n\n@EntityRepository(UserEntity)\nexport class UserRepository extends Repository {\n  protected readonly logger = new Logger(UserRepository.name);\n\n  findById(id: string): Promise {\n    return new Promise((resolve) => {\n      this.findOne({ where: { id }, relations: ['profile'] })\n        .then((data) => resolve(data))\n        .catch((error) => this.logger.error(error));\n    });\n  }\n\n  findByDeviceId(deviceId: string): Promise {\n    return new Promise((resolve) => {\n      this.findOne({ where: { deviceId }, relations: ['profile'] })\n        .then((data) => resolve(data))\n        .catch((error) => this.logger.error(error));\n    });\n  }\n\n  findByEmail(email: string): Promise {\n    return new Promise((resolve) => {\n      this.findOne({ where: { email } })\n        .then((data) => resolve(data))\n        .catch((error) => this.logger.error(error));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/service/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearPositiveInfo\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                findByDeviceId\n                            \n                            \n                                findByEmail\n                            \n                            \n                                findById\n                            \n                            \n                                    Async\n                                findByIdOrFail\n                            \n                            \n                                    Async\n                                saveUser\n                            \n                            \n                                    Async\n                                updateUserDeviceId\n                            \n                            \n                                    Async\n                                updateUserEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cognito: AWS.CognitoIdentityServiceProvider, config: ConfigService, userRepository: UserRepository, positiveInfoRepository: PositiveInfoRepository, profileRepository: ProfileRepository)\n                    \n                \n                        \n                            \n                                Defined in src/user/service/user.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cognito\n                                                  \n                                                        \n                                                                        AWS.CognitoIdentityServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        positiveInfoRepository\n                                                  \n                                                        \n                                                                        PositiveInfoRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        ProfileRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearPositiveInfo\n                        \n                    \n                \n            \n            \n                \nclearPositiveInfo(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByDeviceId\n                        \n                    \n                \n            \n            \n                \nfindByDeviceId(deviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByEmail\n                        \n                    \n                \n            \n            \n                \nfindByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByIdOrFail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdOrFail(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveUser(id: string, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUserDeviceId\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserDeviceId(userId: string, deviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUserEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserEmail(id: string, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UserService.name)\n                    \n                \n                    \n                        \n                                Defined in src/user/service/user.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  BadRequestException,\n  Logger,\n} from '@nestjs/common';\nimport { UpdateResult, DeleteResult } from 'typeorm';\nimport { UserRepository } from '../repository/user.repository';\nimport { UserEntity } from '../entity/user.entity';\nimport {\n  UPDATE_USER_EMAIL_FAILED,\n  USER_NOT_FOUND,\n  SAVE_USER_FAILED,\n  DELETE_USER_FROM_COGNITO_FAILED,\n  DELETE_USER_FROM_DB_FAILED,\n  UPDATE_USER_DEVICE_ID_FAILED,\n} from '../../common/error/keys';\nimport * as AWS from 'aws-sdk';\nimport { ConfigService } from '@nestjs/config';\nimport { DICTIONARY } from '../../common/constant/dictionary.constant';\nimport { PositiveInfoRepository } from '../repository/positive-info.repository';\nimport { ProfileRepository } from '../repository/profile.repository';\nimport { Encrypter } from '../../common/helper/encrypter';\n\n@Injectable()\nexport class UserService {\n  private readonly logger = new Logger(UserService.name);\n\n  constructor(\n    @Inject(AWS.CognitoIdentityServiceProvider)\n    private readonly cognito: AWS.CognitoIdentityServiceProvider,\n    @Inject(DICTIONARY.CONFIG) private readonly config: ConfigService,\n    @Inject(UserRepository) private readonly userRepository: UserRepository,\n    private readonly positiveInfoRepository: PositiveInfoRepository,\n    private readonly profileRepository: ProfileRepository,\n  ) { }\n\n  clearPositiveInfo(userId: string) {\n    return Promise.all([\n      this.positiveInfoRepository.clearEverythingForUsers([userId]),\n      this.profileRepository.disableAutomatedEmergencyForUsers([userId]),\n    ]);\n  }\n\n  findByEmail(email: string): Promise {\n    return this.userRepository.findByEmail(Encrypter.encrypt(email));\n  }\n\n  findById(id: string): Promise {\n    return this.userRepository.findById(id);\n  }\n\n  findByDeviceId(deviceId: string): Promise {\n    return this.userRepository.findByDeviceId(deviceId);\n  }\n\n  async findByIdOrFail(id: string): Promise {\n    return this.findById(id).then((data) => {\n      if (!data) {\n        throw new BadRequestException(USER_NOT_FOUND);\n      }\n\n      return data;\n    });\n  }\n\n  async saveUser(id: string, email: string): Promise {\n    return this.userRepository\n      .save({\n        id,\n        email,\n      })\n      .catch((error) => {\n        this.logger.error(error);\n        throw new BadRequestException(SAVE_USER_FAILED);\n      });\n  }\n\n  async updateUserEmail(id: string, email: string): Promise {\n    return this.userRepository\n      .update(\n        {\n          id,\n        },\n        { email }\n      )\n      .catch((error) => {\n        this.logger.error(error);\n        throw new BadRequestException(UPDATE_USER_EMAIL_FAILED);\n      });\n  }\n\n  async updateUserDeviceId(\n    userId: string,\n    deviceId: string\n  ): Promise {\n    return this.userRepository\n      .update(\n        {\n          id: userId,\n        },\n        { deviceId }\n      )\n      .catch((error) => {\n        this.logger.error(error);\n        throw new BadRequestException(UPDATE_USER_DEVICE_ID_FAILED);\n      });\n  }\n\n  async deleteUser(user: UserEntity): Promise {\n    await new Promise((resolve, reject) => {\n      this.cognito.adminDeleteUser(\n        {\n          UserPoolId: this.config.get('authorization.userPoolId'),\n          Username: user.id,\n        },\n        (error, result) => {\n          if (!error) {\n            resolve(result);\n          }\n          reject(error);\n        }\n      );\n    }).catch((error) => {\n      this.logger.error(error, JSON.stringify(user));\n      throw new BadRequestException(DELETE_USER_FROM_COGNITO_FAILED, error);\n    });\n\n    return this.userRepository.delete(user.id).catch((error) => {\n      this.logger.error(error);\n      throw new BadRequestException(DELETE_USER_FROM_DB_FAILED, error);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipe/validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schema: Joi.Schema, options?: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/common/pipe/validation.pipe.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                    Joi.Schema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(obj: object, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipe/validation.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, Injectable, PipeTransform } from '@nestjs/common';\nimport * as Joi from 'joi';\nimport { VALIDATION_FAILED } from '../error/keys';\nimport { CustomError } from '../error/custom-error';\nimport { plainToClass } from 'class-transformer';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  constructor(private readonly schema: Joi.Schema, private readonly options?: {transform: boolean}) {\n  }\n\n  public async transform(obj: object, metadata: ArgumentMetadata): Promise {\n    if (this.options?.transform) {\n      obj = plainToClass(metadata.metatype, obj);\n    }\n\n    const {error, value} = (this.schema as any).validate(obj);\n    if (error) {\n      throw new CustomError(VALIDATION_FAILED, error);\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/addRegularNotificationDateToProfileTable1633344018695.html":{"url":"classes/addRegularNotificationDateToProfileTable1633344018695.html","title":"class - addRegularNotificationDateToProfileTable1633344018695","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  addRegularNotificationDateToProfileTable1633344018695\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1633344018695-addRegularNotificationDateToProfileTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                column\n                            \n                            \n                                    Private\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        column\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TableColumn({\n    name: 'regular_notification_time',\n    type: 'datetime',\n    isNullable: true,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1633344018695-addRegularNotificationDateToProfileTable.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1633344018695-addRegularNotificationDateToProfileTable.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1633344018695-addRegularNotificationDateToProfileTable.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1633344018695-addRegularNotificationDateToProfileTable.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, TableColumn } from 'typeorm';\n\nexport class addRegularNotificationDateToProfileTable1633344018695\n  implements MigrationInterface\n{\n  private tableName = 'profile';\n  private column = new TableColumn({\n    name: 'regular_notification_time',\n    type: 'datetime',\n    isNullable: true,\n  });\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.addColumn(this.tableName, this.column);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropColumn(this.tableName, this.column);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi-date : ~2.0.1\n        \n            @nestjs/bull : ~0.5.2\n        \n            @nestjs/common : ~8.4.0\n        \n            @nestjs/config : ~1.1.6\n        \n            @nestjs/core : ~8.4.0\n        \n            @nestjs/passport : ~8.2.1\n        \n            @nestjs/platform-express : ~8.4.0\n        \n            @nestjs/swagger : ~5.2.0\n        \n            @nestjs/throttler : ~2.0.0\n        \n            @nestjs/typeorm : ~8.0.3\n        \n            aws-sdk : ~2.1088.0\n        \n            bull : ~4.7.0\n        \n            class-transformer : ~0.5.1\n        \n            dotenv : ~16.0.0\n        \n            firebase-admin : ~10.0.2\n        \n            fs : ~0.0.1-security\n        \n            google-libphonenumber : ~3.2.27\n        \n            helmet : ~5.0.2\n        \n            ioredis-mock : ~7.1.0\n        \n            joi : ~17.6.0\n        \n            jsonwebtoken : ~8.5.1\n        \n            jwk-to-pem : ~2.0.5\n        \n            moment : ~2.29.2\n        \n            mysql : ~2.18.1\n        \n            nest-schedule : ~0.6.4\n        \n            node-mailjet : ~3.3.7\n        \n            passport : ~0.5.2\n        \n            passport-jwt : ~4.0.0\n        \n            reflect-metadata : ~0.1.13\n        \n            rimraf : ~3.0.2\n        \n            rxjs : ~7.5.4\n        \n            swagger-ui-express : ~4.3.0\n        \n            twilio : ~3.75.0\n        \n            typeorm : ~0.2.45\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CATEGORY   (src/.../category.enum.ts)\n                        \n                        \n                            DAYS_OF_WEEKS   (src/.../days-of-week.enum.ts)\n                        \n                        \n                            DICTIONARY   (src/.../dictionary.constant.ts)\n                        \n                        \n                            DICTIONARY   (src/.../dictionary.constant.ts)\n                        \n                        \n                            DICTIONARY   (src/.../dictionary.constant.ts)\n                        \n                        \n                            DICTIONARY   (src/.../dictionary.constant.ts)\n                        \n                        \n                            EN_MAIL_TEMPLATE   (src/.../template.constant.ts)\n                        \n                        \n                            LANGUAGE   (src/.../lanugage.constant.ts)\n                        \n                        \n                            MESSAGE_TYPE   (src/.../message-type.constant.ts)\n                        \n                        \n                            MESSAGE_TYPE   (src/.../message-type.enum.ts)\n                        \n                        \n                            PROCESS   (src/.../process.constant.ts)\n                        \n                        \n                            PROFILE_WEIGHT   (src/.../user.mapper.ts)\n                        \n                        \n                            QUEUE   (src/.../queue.constant.ts)\n                        \n                        \n                            ROLES   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/file/enum/category.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CATEGORY\n                    \n                \n                        \n                            \n                                 MEDICAL_DIRECTIVE\n                            \n                        \n                        \n                            \n                                Value : medicalDirective\n                            \n                        \n                        \n                            \n                                 LAST_WILL\n                            \n                        \n                        \n                            \n                                Value : lastWill\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : other\n                            \n                        \n            \n        \n\n    src/trigger-time-slot/enum/days-of-week.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DAYS_OF_WEEKS\n                    \n                \n                        \n                            \n                                 MONDAY\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 TUESDAY\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 WEDNESDAY\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 THURSDAY\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 FRIDAY\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 SATURDAY\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 SUNDAY\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n\n    src/common/constant/dictionary.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        DICTIONARY\n                    \n                \n                        \n                            \n                                 CONFIG\n                            \n                        \n                        \n                            \n                                Value : CONFIG_PROVIDER\n                            \n                        \n                        \n                            \n                                 GOOGLE_PHONE_NUMBER\n                            \n                        \n                        \n                            \n                                Value : GOOGLE_PHONE_NUMBER_PROVIDER\n                            \n                        \n                        \n                            \n                                 REDIS\n                            \n                        \n                        \n                            \n                                Value : REDIS_PROVIDER\n                            \n                        \n                        \n                            \n                                 CONNECTION\n                            \n                        \n                        \n                            \n                                Value : CONNECTION_PROVIDER\n                            \n                        \n            \n        \n\n    src/file/constant/dictionary.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        DICTIONARY\n                    \n                \n                        \n                            \n                                 S3\n                            \n                        \n                        \n                            \n                                Value : S3_PROVIDER\n                            \n                        \n                        \n                            \n                                 CLOUD_FRONT_SIGNER\n                            \n                        \n                        \n                            \n                                Value : CLOUD_FRONT_SIGNER_PROVIDER\n                            \n                        \n            \n        \n\n    src/message/constant/dictionary.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        DICTIONARY\n                    \n                \n                        \n                            \n                                 FIREBASE\n                            \n                        \n                        \n                            \n                                Value : FIREBASE_PROVIDER\n                            \n                        \n            \n        \n\n    src/notification/constant/dictionary.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        DICTIONARY\n                    \n                \n                        \n                            \n                                 MAIL_JET\n                            \n                        \n                        \n                            \n                                Value : MAIL_JET\n                            \n                        \n            \n        \n\n    src/notification/constant/template.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        EN_MAIL_TEMPLATE\n                    \n                \n                        \n                            \n                                 USER_CHANGE_EMAIL\n                            \n                        \n                        \n                            \n                                Value : 3051696\n                            \n                        \n                        \n                            \n                                 EMERGENCY_MESSAGE_WITHOUT_LOCATION\n                            \n                        \n                        \n                            \n                                Value : 3057128\n                            \n                        \n                        \n                            \n                                 EMERGENCY_MESSAGE_WITH_LOCATION\n                            \n                        \n                        \n                            \n                                Value : 3057200\n                            \n                        \n                        \n                            \n                                 DATA_EXPORT\n                            \n                        \n                        \n                            \n                                Value : 3144840\n                            \n                        \n            \n        \n\n    src/notification/constant/lanugage.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        LANGUAGE\n                    \n                \n                        \n                            \n                                 ENGLISH\n                            \n                        \n                        \n                            \n                                Value : en\n                            \n                        \n            \n        \n\n    src/message/constant/message-type.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        MESSAGE_TYPE\n                    \n                \n                        \n                            \n                                 EMERGENCY_PULSE_BASED_CHECK\n                            \n                        \n                        \n                            \n                                Value : EMERGENCY_PULSE_BASED_CHECK\n                            \n                        \n                        \n                            \n                                 EMERGENCY_TIME_BASED_CHECK\n                            \n                        \n                        \n                            \n                                Value : EMERGENCY_TIME_BASED_CHECK\n                            \n                        \n                        \n                            \n                                 EMERGENCY_ALERT\n                            \n                        \n                        \n                            \n                                Value : EMERGENCY_ALERT\n                            \n                        \n                        \n                            \n                                 TIME_SLOT_NOTIFICATION\n                            \n                        \n                        \n                            \n                                Value : TIME_SLOT_NOTIFICATION\n                            \n                        \n            \n        \n\n    src/message/enum/message-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MESSAGE_TYPE\n                    \n                \n                        \n                            \n                                 NO_CONNECTION_TO_WATCH\n                            \n                        \n                        \n                            \n                                Value : noConnectionToWatch\n                            \n                        \n                        \n                            \n                                 HEART_RATE_INVALID\n                            \n                        \n                        \n                            \n                                Value : heartRateInvalid\n                            \n                        \n            \n        \n\n    src/queue/constant/process.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        PROCESS\n                    \n                \n                        \n                            \n                                 EMERGENCY\n                            \n                        \n                        \n                            \n                                Value : emergency\n                            \n                        \n                        \n                            \n                                 EMAIL\n                            \n                        \n                        \n                            \n                                Value : email\n                            \n                        \n                        \n                            \n                                 SMS\n                            \n                        \n                        \n                            \n                                Value : sms\n                            \n                        \n            \n        \n\n    src/user/mapper/user.mapper.ts\n    \n        \n            \n                \n                    \n                        \n                        PROFILE_WEIGHT\n                    \n                \n                        \n                            \n                                 name\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 surname\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 prefix\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 phone\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 address\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 dateOfBirth\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 primaryPhysician\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 primaryPhysicianAddress\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 seriousMedicalIssues\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 mostRecentDiagnosis\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 lastHospitalVisit\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n\n    src/queue/constant/queue.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        QUEUE\n                    \n                \n                        \n                            \n                                 MESSAGE\n                            \n                        \n                        \n                            \n                                Value : message\n                            \n                        \n            \n        \n\n    src/user/entity/user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        ROLES\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            setupSwagger   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupSwagger\n                        \n                    \n                \n            \n            \n                \nsetupSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHow run development environment?\nGo to the main directory of your application and run the command:\ndocker-compose -f docker-compose-only-db.yml up --buildAfter this run command yarn start:dev\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QueueModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchedulerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TriggerTimeSlotModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_ContactModule\n\n\n\ncluster_ContactModule_exports\n\n\n\ncluster_ContactModule_providers\n\n\n\ncluster_FileModule\n\n\n\ncluster_FileModule_exports\n\n\n\ncluster_FileModule_providers\n\n\n\ncluster_MessageModule\n\n\n\ncluster_MessageModule_exports\n\n\n\ncluster_MessageModule_providers\n\n\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_exports\n\n\n\ncluster_NotificationModule_providers\n\n\n\ncluster_SchedulerModule\n\n\n\ncluster_SchedulerModule_exports\n\n\n\ncluster_SchedulerModule_providers\n\n\n\ncluster_TriggerTimeSlotModule\n\n\n\ncluster_TriggerTimeSlotModule_exports\n\n\n\ncluster_TriggerTimeSlotModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthorizationModule->AppModule\n\n\n\n\n\nAuthenticationService \n\nAuthenticationService \n\nAuthenticationService  -->\n\nAuthorizationModule->AuthenticationService \n\n\n\n\n\nContactModule\n\nContactModule\n\n\n\nMessageModule\n\nMessageModule\n\nMessageModule -->\n\nContactModule->MessageModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nContactModule->UserModule\n\n\n\nAppModule -->\n\nContactModule->AppModule\n\n\n\n\n\nContactService \n\nContactService \n\nContactService  -->\n\nContactModule->ContactService \n\n\n\n\n\nFileModule\n\nFileModule\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nFileModule->NotificationModule\n\n\n\nUserModule -->\n\nFileModule->UserModule\n\n\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nFileCategoryService \n\nFileCategoryService \n\nFileCategoryService  -->\n\nFileModule->FileCategoryService \n\n\n\n\n\nFileService \n\nFileService \n\nFileService  -->\n\nFileModule->FileService \n\n\n\n\n\nSchedulerModule\n\nSchedulerModule\n\nSchedulerModule -->\n\nMessageModule->SchedulerModule\n\n\n\nAppModule -->\n\nMessageModule->AppModule\n\n\n\n\n\nMessageService \n\nMessageService \n\nMessageService  -->\n\nMessageModule->MessageService \n\n\n\nUserModule -->\n\nNotificationModule->UserModule\n\n\n\nAppModule -->\n\nNotificationModule->AppModule\n\n\n\n\n\nNotificationService \n\nNotificationService \n\nNotificationService  -->\n\nNotificationModule->NotificationService \n\n\n\n\n\nQueueModule\n\nQueueModule\n\nNotificationModule -->\n\nQueueModule->NotificationModule\n\n\n\nUserModule -->\n\nQueueModule->UserModule\n\n\n\nAppModule -->\n\nQueueModule->AppModule\n\n\n\nMessageService  -->\n\nQueueModule->MessageService \n\n\n\nAppModule -->\n\nSchedulerModule->AppModule\n\n\n\n\n\nSchedulerService \n\nSchedulerService \n\nSchedulerService  -->\n\nSchedulerModule->SchedulerService \n\n\n\n\n\nTriggerTimeSlotModule\n\nTriggerTimeSlotModule\n\nUserModule -->\n\nTriggerTimeSlotModule->UserModule\n\n\n\nAppModule -->\n\nTriggerTimeSlotModule->AppModule\n\n\n\n\n\nTriggerTimeSlotService \n\nTriggerTimeSlotService \n\nTriggerTimeSlotService  -->\n\nTriggerTimeSlotModule->TriggerTimeSlotService \n\n\n\nSchedulerModule -->\n\nUserModule->SchedulerModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nExportService \n\nExportService \n\nExportService  -->\n\nUserModule->ExportService \n\n\n\n\n\nPositiveInfoService \n\nPositiveInfoService \n\nPositiveInfoService  -->\n\nUserModule->PositiveInfoService \n\n\n\n\n\nProfileService \n\nProfileService \n\nProfileService  -->\n\nUserModule->ProfileService \n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAuthorizationModule -->\n\nAuthenticationService->AuthorizationModule\n\n\n\n\n\nCognitoStrategy\n\nCognitoStrategy\n\nAuthorizationModule -->\n\nCognitoStrategy->AuthorizationModule\n\n\n\n\n\nContactService\n\nContactService\n\nContactModule -->\n\nContactService->ContactModule\n\n\n\n\n\nFileCategoryService\n\nFileCategoryService\n\nFileModule -->\n\nFileCategoryService->FileModule\n\n\n\n\n\nFileService\n\nFileService\n\nFileModule -->\n\nFileService->FileModule\n\n\n\n\n\nMessageService\n\nMessageService\n\nMessageModule -->\n\nMessageService->MessageModule\n\n\n\nQueueModule -->\n\nMessageService->QueueModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\nSchedulerService\n\nSchedulerService\n\nSchedulerModule -->\n\nSchedulerService->SchedulerModule\n\n\n\n\n\nTriggerTimeSlotService\n\nTriggerTimeSlotService\n\nTriggerTimeSlotModule -->\n\nTriggerTimeSlotService->TriggerTimeSlotModule\n\n\n\n\n\nExportService\n\nExportService\n\nUserModule -->\n\nExportService->UserModule\n\n\n\n\n\nPositiveInfoService\n\nPositiveInfoService\n\nUserModule -->\n\nPositiveInfoService->UserModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nUserModule -->\n\nProfileService->UserModule\n\n\n\n\n\nUnconfirmedEmailService\n\nUnconfirmedEmailService\n\nUserModule -->\n\nUnconfirmedEmailService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    24 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    78 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : Concise Software\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
